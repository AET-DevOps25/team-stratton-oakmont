apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: tum-study-planner-monitoring
  labels:
    app: alertmanager
    monitoring: "true"
data:
  alertmanager.yml: |
    global:
      # Global configuration for all notifications
      resolve_timeout: 5m

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 5s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default-receiver'
      routes:
      - match:
          severity: critical
        receiver: 'critical-alerts'
        group_wait: 1s
        repeat_interval: 5m
      - match:
          severity: warning
        receiver: 'warning-alerts'
        group_wait: 5s
        repeat_interval: 30m

    receivers:
    - name: 'default-receiver'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-webhook-url'
        channel: '#alerts-warning'
        title: 'TUM Study Planner - {{ .Status | toUpper }}'
        text: >-
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.job }}
          {{ end }}
        send_resolved: true

    - name: 'critical-alerts'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-webhook-url'
        channel: '#alerts-warning'
        title: 'üö® CRITICAL ALERT - TUM Study Planner'
        color: danger
        text: >-
          {{ range .Alerts }}
          *üî• CRITICAL: {{ .Annotations.summary }}*
          
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.job }}
          *Instance:* {{ .Labels.instance }}
          *Severity:* {{ .Labels.severity }}
          *Time:* {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
        send_resolved: true
        title_link: 'https://tum-study-planner.student.k8s.aet.cit.tum.de'

    - name: 'warning-alerts'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-webhook-url'
        channel: '#alerts-warning'
        title: '‚ö†Ô∏è Warning Alert - TUM Study Planner'
        color: warning
        text: >-
          {{ range .Alerts }}
          *‚ö†Ô∏è WARNING: {{ .Annotations.summary }}*
          
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.job }}
          *Instance:* {{ .Labels.instance }}
          *Severity:* {{ .Labels.severity }}
          *Time:* {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
        send_resolved: true

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'cluster', 'service']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: tum-study-planner-monitoring
  labels:
    app: alertmanager
    monitoring: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
        monitoring: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:latest
          ports:
            - containerPort: 9093
              name: web
          args:
            - "--config.file=/etc/alertmanager/alertmanager.yml"
            - "--storage.path=/alertmanager"
            - "--web.external-url=http://localhost:9093"
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager
            - name: alertmanager-secrets
              mountPath: /etc/alertmanager/secrets
              readOnly: true
            - name: alertmanager-storage
              mountPath: /alertmanager
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            initialDelaySeconds: 5
            timeoutSeconds: 10
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config
        - name: alertmanager-secrets
          secret:
            secretName: alertmanager-secrets
        - name: alertmanager-storage
          persistentVolumeClaim:
            claimName: alertmanager-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: tum-study-planner-monitoring
  labels:
    app: alertmanager
    monitoring: "true"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9093"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: alertmanager
  ports:
    - name: web
      port: 9093
      targetPort: 9093
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-pvc
  namespace: tum-study-planner-monitoring
  labels:
    app: alertmanager
    monitoring: "true"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
