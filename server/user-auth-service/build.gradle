dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// It allows you to define Java classes (Entities) that map to database tables and provides interfaces (Repositories) to perform database operations (like save, find, delete) without writing boilerplate SQL. It includes Hibernate as the default JPA provider
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Your application needs this driver to communicate with a PostgreSQL database. The runtimeOnly scope means this dependency is only required when the application is running, not during compilation
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// for user auth
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// for monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

	// JWT Libraries
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// for testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
    // testLogging {
    //     events "passed", "skipped", "failed"
    //     showStandardStreams = true
    // }
	afterTest { desc, result ->
		println "Executed test: ${desc.name} [${result.resultType}]"
	}
}

