import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

// Generate build information
def buildTimestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
def gitCommit = 'git rev-parse --short HEAD'.execute().text.trim() ?: 'unknown'

// Process resources to substitute variables
processResources {
    // Only expand template variables in specific properties, not environment variables
    filesMatching('application.properties') {
        expand(
            version: project.version,
            buildTimestamp: buildTimestamp,
            gitCommit: gitCommit,
            // Provide placeholder values for environment variables that Spring will resolve at runtime
            DB_STUDY_DATA_URL: '${DB_STUDY_DATA_URL}',
            DB_STUDY_DATA_USERNAME: '${DB_STUDY_DATA_USERNAME}',
            DB_STUDY_DATA_PASSWORD: '${DB_STUDY_DATA_PASSWORD}'
        )
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	
	// OpenAPI/Swagger documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

  // for monitoring
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.micrometer:micrometer-registry-prometheus'

}
