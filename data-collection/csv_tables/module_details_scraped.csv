ID,name,credits,version,valid,responsible,organisation,note,module_level,abbreviation,subtitle,duration,occurrence,language,related_programs,total_hours,contact_hours,self_study_hours,description_of_achievement_and_assessment_methods,exam_retake_next_semester,exam_retake_at_the_end_of_semester,prerequisites_recommended,intended_learning_outcomes,content,teaching_and_learning_methods,media,reading_list,curriculum_ID,transformed_link,extraction_method
IN2109,Master's Thesis,30.0,-,Always,"Bichler, Martin",Academic Programs Informatik,-,Master,-,-,one semester,winter/summer semester,German/English,-,900.0,,900.0,"The Master’s Thesis is a research paper, which lasts for at most six month, during which students work on a specific and complex topic from information systems. They are able to formulate the scientific discourse and based on it develop and criticize a specific research question. The students have covered the topic with the expert knowledge and methodological skills acquired during their studies. This research elaboration is completed with a presentation of its content and results. The examination proves that participants are capable of analyzing and solving a demanding scientific problem in single person work and defend their results in front of third parties. The Master’s Thesis is supervised by a professor of the Information Systems program from the faculty of Informatics at TUM. It should be between 50 and 100 pages.",Yes,No,"70 percent of the credits from required, required elective, and  elective modules","After the elaboration of the master's thesis the graduates know how to rapidly and independently become acquainted with a subject area in the field of Information Systems. They have the ability, based on a specific problem, to analyze and evaluate all important aspects of those parts in Information Systems which are necessary for finding a solution. They can span, describe, and categorize the space of possible solutions, and choose a well-founded solution path according to given or elaborated criteria. They are able to develop a solution, and analyze and evaluate it precisely. Furthermore they know how to write a professional documentation and description of the developed solution.","Under guidance students familiarize themselves with an area in Information Systems. They are provided with a problem from this area that is still quite general, i.e. not yet specified. They have to investigate and evaluate different approaches to solve the problem, and decide for one path which is then to be executed. The accompanying elaboration summarizes the main aspects of the subject area, discusses the different ways to solve the problem, justifies the decision made, and describes the elaborated solution.Under guidance students familiarize themselves with an area in Information Systems. They are provided with a problem from this area that is still quite general, i.e. not yet specified. They have to investigate and evaluate different approaches to solve the problem, and decide for one path which is then to be executed. The accompanying elaboration summarizes the main aspects of the subject area, discusses the different ways to solve the problem, justifies the decision made, and describes the elaborated solution.","Students identify and analyze a specific problem from a branch of the field of Information Systems in supervised single person work. Consecutively they evaluate potential solution processes and then construct their own solution. This demands the study of the respective literature and the summary and complementation of existing scientific works. In regular meetings the students constructively criticize and productively implement changes to their own work together with their supervisor. Moreover, part of the Masther’s Thesis might be the creation, implementation and evaluation of an own experiment or new case study. Here students particularly train their technical abilities. The contents and results of the research elaboration are summarized in an independently developed presentation and defended in front of third parties. Students also learn to work under time pressure.",PowerPoint and PC,Literature is provided by the supervising professor.,2,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458129/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2309,Advanced Topics of Software Engineering,8.0,-,from Winter semester 2014/15,"Pretschner, Alexander",Department of Computer Science,-,Master,-,-,one semester,winter semester,German/English,-,240.0,90.0,150.0,"In the written exam (100 minutes) students should prove to be able to identify a given problem and find solutions within limited time. The examination will completely cover the content of the lectures. The anwers will require own formulations. In addition, some modeling may be required.",No,Yes,Introduction to Software Engineering (IN0006),"At the end of the class, students understand the central goals and methods of requirements engineering. They know all relevant software quality attributes. They know how to elicit, specify and manage respective requirements; how they are reflected in architectures and, conversely, how architecture influences these attributes; how requirements, architectures and code can be assessed w.r.t. these attributes; and what the influence of the development process is. They can apply this knowledge in smaller projects in practice.","Developing large software systems necessitates tightly intertwining and synchronizing both the activities in the development process and the generated artifacts. Central success criteria include
- Iterative elicitation and implementation of the requirements;
- Architecture as the backbone of development; and
- Mastering quality in its different facets.
This class on  Advanced Software Engineering  demonstrates how requirements engineering, specification, architecture, detailed design, coding, software quality, and quality assurance interweave. Specifically, we discuss how  non-functional  requirements are reflected in the architecture; which tradeoffs exist with functional requirements as well as external and internal quality attributes; and how these requirements can be formulated and verified by tests.
We will consider:
1.	Requirements Engineering: Techniques for elicitation, analysis, prioritization, specification, validation of functional and non-functional requirements; anti-requirements.
2.	Software Architecture: Principles, views&styles, architecture documentation, patterns, frameworks, reference architectures, product lines, analysis of an architecture s quality and of trade-offs.
3.	Software Quality: Internal and external quality attributes, among others: maintainability, testability, understandability and performance, security, availability; software metrics
4.	Quality Assurance: Assessment, prioritization, conflict resolution and reviews of requirements; assessments of architectures w.r.t. internal and external quality attributes; tests and reviews for functional and non-functional requirements in the code; fault models.
5.	Influence of the development process.Developing large software systems necessitates tightly intertwining and synchronizing both the activities in the development process and the generated artifacts. Central success criteria include
- Iterative elicitation and implementation of the requirements;
- Architecture as the backbone of development; and
- Mastering quality in its different facets.
This class on  Advanced Software Engineering  demonstrates how requirements engineering, specification, architecture, detailed design, coding, software quality, and quality assurance interweave. Specifically, we discuss how  non-functional  requirements are reflected in the architecture; which tradeoffs exist with functional requirements as well as external and internal quality attributes; and how these requirements can be formulated and verified by tests.
We will consider:
1.	Requirements Engineering: Techniques for elicitation, analysis, prioritization, specification, validation of functional and non-functional requirements; anti-requirements.
2.	Software Architecture: Principles, views&styles, architecture documentation, patterns, frameworks, reference architectures, product lines, analysis of an architecture s quality and of trade-offs.
3.	Software Quality: Internal and external quality attributes, among others: maintainability, testability, understandability and performance, security, availability; software metrics
4.	Quality Assurance: Assessment, prioritization, conflict resolution and reviews of requirements; assessments of architectures w.r.t. internal and external quality attributes; tests and reviews for functional and non-functional requirements in the code; fault models.
5.	Influence of the development process.","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations. Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.",Lecture with slides,"McConnell, Code Complete: A Practical Handbook of Software Construction, 2nd edition,  Microsoft, 2004
Summerville, Software Engineering 9, Prentice Hall, 2010
Brooks, The Mythical Man Month, Addison-Wesley Longman, 1995
Rombach, Endres: A Handbook of Software and Systems Engineering, Addispn Wesley, 2003
Bass et al., Software Architecture in Practice, Addison Wesley, 3rd edition, Addison Wesley, 2012
Clements et al., Documenting Software Architectures, 2nd edition, Addison Wesley, 2010
Clements et al., Evaluating Software Architectures, Addison Wesley, 2001
Reussner, Hasselbring, Handbuch der Software-Architektur (in German), 2006
Jackson, Problem Frames, ACM Press, 2000
Sommerville, Sawyer: Requirements Engineering: A Good Practice Guide, John Wiley, 1997
Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, John Wiley, 2009
Goucher, Riley, Beautiful Testing, OReilly, 2009
Wagner, Software Product Quality Control, Springer, 2013

More references will be provided in class.",4,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1060130/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2105,Business Process Technologies and Management,5.0,v2,from Winter semester 2021/22,Rinderle,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The examination consists of a written 90 minutes exam. The exam shall ensure that students understand and can apply terminology, challenges, and concepts of business process technologies. To reflect the understanding as well as the practical application, the examination comprises a question-oriented and an application-oriented part. The latter is based on the topics addressed by the exercises such as process mining algorithms and modeling of process choreographies.",No,Yes,"Bachelor
IN0021 Introduction to Information Systems","After successful completion of the module students are familiar with the different perspectives of business processes, i.e., control flow, data flow, and resources. Students can model these perspectives and implement them within a process-oriented application. The students understand how business process are monitored during runtime and how execution data (i.e., event-based data) is logged during process execution. Based on the logged process data, the students can apply basic process mining algorithms and interpret the results. Moreover, students are familiar with correctness and compliance notions for business processes.  The students understand which and how side effects of changes and adaptations of running business process instances arise and can be controlled. Finally, students are able to model partner-spanning processes (so called process choreographies).","The course focuses on advanced aspects of business process management and business process technologies. Starting from the process-oriented development of applications the following topics are discussed:
- Management of resources and work lists
- Logging and monitoring of business process instances
- Introduction to process mining
- Business process compliance
- Runtime adaptations of business process instances and business process evolution
- Modeling and correctness aspects of process choreographiesThe course focuses on advanced aspects of business process management and business process technologies. Starting from the process-oriented development of applications the following topics are discussed:
- Management of resources and work lists
- Logging and monitoring of business process instances
- Introduction to process mining
- Business process compliance
- Runtime adaptations of business process instances and business process evolution
- Modeling and correctness aspects of process choreographies","The teaching format features a lecture and a content-aligned tutorial. The lecturer present the content of the lecture. In addition, videos of the lecture content are provided on the website of the lecture. The videos serve as means to repeat and deepen the presented contents. Moreover, the videos can be used for in a „flipped-classroom“ mode. The lecture content consists of the theoretical background of process-oriented technologies and business process management as well as their illustration based on practical examples from real-world applications and projects. The intention is to enable students to understand and assess process-oriented problems in a conceptual way as well as in an application context. The tutorial consists of deepening exercises on the theoretical parts of the lecture and of implementation exercises. The exercises are worked on in single person. The tutorial aims at enabling students in understanding and applying the concepts. Moreover, an overview on existing tools should be provided to students. Through the implementation exercises the students understand the paradigm of process-oriented application development and its application in practice.","Slides, videos, exercises, discussion","- M. Weske: Business Process Management - Concepts, Languages, Architectures, Third Edition. Springer 2019, ISBN 978-3-662-59431-5
- W. Grossmann, S. Rinderle-Ma: Fundamentals of Business Intelligence. Data-Centric Systems and Applications, Springer 2015, ISBN 978-3-662-46530-1
- M. Reichert, B. Weber: Enabling Flexibility in Process-Aware Information Systems - Challenges, Methods, Technologies. Springer 2012, ISBN 978-3-642-30408-8
- Wil M. P. van der Aalst: Process Mining - Data Science in Action, Second Edition. Springer 2016, ISBN 978-3-662-49850-7
- Zusätzlich wird am Ende jeder Vorlesung relevante Literatur zur Verfügung gestellt.",6,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2839421/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2087,Software Engineering for Business Applications - Master's Course: Web Application Engineering,8.0,2,Always,"Matthes, Florian",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,240.0,60.0,180.0,"Type of Assessment: project work

The student’s performance is assessed based on several deliverables and their presentations in the context of a project work assignment including three milestones.
1. At first, students develop an online-based business idea and further develop it into a business model. Hereby, an appropriate project planning and task distribution must be carried out and justified. In addition, the students structure and evaluate their business idea using methods like the Business Model Canvas and the Value Proposition Canvas. Finally, the results are presented. (10%)
2. Once the business model has been developed, four concrete use cases are derived. In addition, appropriate patterns for the design of the web application must be selected and applied in concrete mockups. The technical architecture should be documented using UML diagrams. The results are presented. 
(15%)
3. Based on the mockups and the technical concepts, the students develop a prototype of the web application including all defined use cases. Modern web frameworks as discussed in the lecture are integrated into the application, encompassing both frontend and backend aspects. The final assessment includes the development of the final prototype and the presentation of the results. In addition, the students have to answer questions regarding their web application and the underlying theoretical concepts. The students must ensure good teamwork and team communication. (75%)

Workload:
The development of a modern web application represents the biggest effort in this module. Hereby, the students have to acquire the necessary knowledge to accomplish this task. Learning progress is supported through tutorials and feedback 
appointments with mentors. Additional workload arises from the preparation of the submissions and presentations.",No,No,"Knowledge and skills at the bachelor s level (Informatics/Business Informatics) in software engineering, programming and databases","Upon completion of this module, students are able to design, plan and implement state-of-the-art web applications independently. They are skilled in identifying, explaining and developing business models for the web, selecting and applying patterns for web application design. Furthermore, students are able to explain a user-centered, iterative development process and apply it in a collaborative environment. Students are able to explain and select state-of-the-art technologies for the implementation of web applications. This encompasses both client- and server-side aspects. Upon completion of the module, students are able to explain web based integration techniques and present a web development project and it’s result to an audience","1. Web Site Genres
-- Business Models on the Web
-- Web 2.0 and Social Software
-- Anything as a Service (XaaS)
2. Web Site Design
-- Key Issues of Customer-Centered Web Design
-- An Overview of Web Design Patterns
-- Knowing Your Customers
-- Involving Customers with Iterative Design
-- Processes for Developing Customer-Centered Sites
-- Additional Viewpoints and Aspects
3. Patterns for Web Site Design
-- Explaining Your Value Proposition
-- Creating a Navigation Framework
-- Basic and Advanced E-Commerce
-- Designing Effective Page Layouts
-- Making Site Search Fast and Effective
-- Making Navigation Easy
-- Speeding Up Web Sites
-- Supporting a Wide Range of Devices (Responsive Design)
-- Integrating Multiple Touchpoints (Mobile Apps, Progressive Web Apps, and Hybrid Apps)
-- Integrating Independently Developed Web Services, Content, and Processes
4. Fundamental Concepts of Single-Page Web Applications
-- HTML Concepts and their Evolution
-- CSS Concepts and their Link to HTML
-- JavaScript Basics
-- SVG and Canvas
-- Web Components
-- Single-Page Applications
-- Component-based Frameworks
5. Developing Single-Page Applications with a Specific Web Application Framework
-- Web Application Framework Comparison
-- Basic Concepts of the Chosen Framework
-- State Management
-- Navigation & Routing
-- Client-Server Communication
-- Consuming RESTful Service
6. Building REST-Enabled Back-End Service
-- Target Architecture and Development Environment
-- Event-Driven Architecture and Asynchronous I/O Operations
-- Creating REST Interfaces
-- Using Document-Oriented Database Storage
-- Enabling User Authentication on the Web Service
7. Advanced Topics in Web Application Engineering
-- Real-Time Web Applications
-- Virtual DOM
-- Hybrid Web Applications
-- Other Web Frameworks
-- Traditional Web Stacks, Server-Side Rendering
8. High Performance Web Applications
-- Database Options for Web Applications
-- Scaling Web Applications1. Web Site Genres
-- Business Models on the Web
-- Web 2.0 and Social Software
-- Anything as a Service (XaaS)
2. Web Site Design
-- Key Issues of Customer-Centered Web Design
-- An Overview of Web Design Patterns
-- Knowing Your Customers
-- Involving Customers with Iterative Design
-- Processes for Developing Customer-Centered Sites
-- Additional Viewpoints and Aspects
3. Patterns for Web Site Design
-- Explaining Your Value Proposition
-- Creating a Navigation Framework
-- Basic and Advanced E-Commerce
-- Designing Effective Page Layouts
-- Making Site Search Fast and Effective
-- Making Navigation Easy
-- Speeding Up Web Sites
-- Supporting a Wide Range of Devices (Responsive Design)
-- Integrating Multiple Touchpoints (Mobile Apps, Progressive Web Apps, and Hybrid Apps)
-- Integrating Independently Developed Web Services, Content, and Processes
4. Fundamental Concepts of Single-Page Web Applications
-- HTML Concepts and their Evolution
-- CSS Concepts and their Link to HTML
-- JavaScript Basics
-- SVG and Canvas
-- Web Components
-- Single-Page Applications
-- Component-based Frameworks
5. Developing Single-Page Applications with a Specific Web Application Framework
-- Web Application Framework Comparison
-- Basic Concepts of the Chosen Framework
-- State Management
-- Navigation & Routing
-- Client-Server Communication
-- Consuming RESTful Service
6. Building REST-Enabled Back-End Service
-- Target Architecture and Development Environment
-- Event-Driven Architecture and Asynchronous I/O Operations
-- Creating REST Interfaces
-- Using Document-Oriented Database Storage
-- Enabling User Authentication on the Web Service
7. Advanced Topics in Web Application Engineering
-- Real-Time Web Applications
-- Virtual DOM
-- Hybrid Web Applications
-- Other Web Frameworks
-- Traditional Web Stacks, Server-Side Rendering
8. High Performance Web Applications
-- Database Options for Web Applications
-- Scaling Web Applications","Lecture (with embedded tutorials), supervised project work in small groups (max. 4 members) and presentation of the project results.",Lecture with digital slides and system demonstration,"- Axel Rauschmayer: Exploring ES6, Ecmanauten, http://exploringjs.com/es6/
- Axel Rauschmayer: Setting Up ES6, Ecmanauten, https://leanpub.com/setting-up-es6/
- Alexander Osterwalder, Yves Pigneur: Business model generation: A Handbook for Visionaries, Game Changes, and Challenges, John Wiley & Sons 2010
- D. Roam: The Back of the Napkin: Solving Problems and Selling Ideas with Pictures, Portfolio Hardcover, 2012
- Steve Krug: Don't make me think! Web Usability: Das intuitive Web, New Riders Press; 2 edition, 2005
- Robert Hoekman: Designing the Obvious. A Commonsense Approach to Web Application Design, New Riders Press; 1 edition, 2006
- David Flanagan: JavaScript: The Definitive Guide, O’Reilly Media, 2011
- Doublas Crockford :JavaScript, http://javascript.crockford.com/
- React Official Tutorial, ReactJS.org, https://reactjs.org/tutorial/tutorial.html
- Eve Porcello : React.js Essential Training, Lynda.com, 2017, https://www.lynda.com/React-js-tutorials/React-js-Essential-Training/496905-2.html (kostenloser Zugang for TUM Studenten)
- Express - Web Framework for Node.js, http://expressjs.com/
- Cal Henderson: Building Scalable Web Sites, O´Reilly; 2006
- Eric Vliest, Danny Ayers, Erik Bruchez, Joe Fawcett, Alessandro Vernet: Web 2.0 Programming, Wiley Publishing, 2007",7,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1452141/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2128,Practical Course Enterprise Software,10.0,-,Always,Rinderle,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,German/English,-,300.0,90.0,210.0,"Type of Assessment: project work
The assessment consists of homework and a group task.
The homework gives the participants an understanding of development tools and enterprise applications. Furthermore, by working on the homework, the participants understand the architecture of modern enterprise software and derive technological and economic requirements for their own solutions.
As part of a group task, participants shall demonstrate that they can work on more complex tasks in a team, based on the results of the homework. In particular, participants shall demonstrate that they are able to develop their own solutions based on the identified requirements and are able to implement them with current development tools.
The module grade consists of the evaluation of homework and group task.",Yes,No,"IN0006 Introduction to Software Engineering, IN0008 Fundamentals of Databases, IN2085 Software Engineering for Business Applications - Bachelor's Course, IN2088 Software Architectures, IN9012 Enterprise Information Systems (helpful)","After the participation in the module, students will be able to understand the architecture of modern enterprise software and to model and program their own extensions.
Participants are able to assess technological and economic requirements in terms of feasibility within the existing enterprise software and develop their own solutions.
Participants are able to use current development tools for the design, implementation and analysis of their own applications.
The participants are able to carry out a complex project in a team.","The module consists of a theoretical and a practical part. In the theoretical part, concepts and domain-specific features of enterprise applications are explained and common development tools from computer science are introduced. Herein, technical architectures, underlying business processes and methodological principles will be explained. Additionally, in the practical part, the theoretical content is explored in more detail through programming exercises and further individual assignments. Especially, this focuses on the application of learned concepts on different tasks, as well as acquiring additional concepts in order to solve given tasks. Among other things, this includes the ability to identify problems, elaborate requirements, as well as to implement and evaluate one’s ideas. Students practice to work independently and critically reflect upon their own results, as well as to present their ideas, concepts and results in various relevant forms.The module consists of a theoretical and a practical part. In the theoretical part, concepts and domain-specific features of enterprise applications are explained and common development tools from computer science are introduced. Herein, technical architectures, underlying business processes and methodological principles will be explained. Additionally, in the practical part, the theoretical content is explored in more detail through programming exercises and further individual assignments. Especially, this focuses on the application of learned concepts on different tasks, as well as acquiring additional concepts in order to solve given tasks. Among other things, this includes the ability to identify problems, elaborate requirements, as well as to implement and evaluate one’s ideas. Students practice to work independently and critically reflect upon their own results, as well as to present their ideas, concepts and results in various relevant forms.",Practical course,"Powerpoint slides, collection of exercises, flip chart notes, web-bases message forum","Krcmar, H. (2010): Informationsmanagement. 5., neu überarb. und erw. Aufl., Springer, Berlin [u.a.] 2010. 
Keller, H., Krüger, S. (2006): ABAP Objects: ABAP-Programmierung mit SAP NetWeaver. 3., neu überarb. und erw. Aufl., SAP Press, Bonn 2006.
Andres Bauer, Holger Günzel (2006): Data Warehouse Systeme - Architektur, Entwicklung, Anwendung, 2. neu überarb. und erw. Aufl., dpunkt Verlag, Heidelberg, 2006.",9,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/457036/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2129,Practical Course Software Engineering for Business Information Systems,10.0,-,Always,"Matthes, Florian",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,300.0,90.0,210.0,"Type of examination: Project work
The module examination consists of a project work in which the students realize an innovative web application in small groups. The results are evaluated on the basis of the criteria of design, programming technique, use of UI libraries, database design and justification of the selection of the respective technologies. Furthermore, the teamwork of the individual students is assessed during the project work. The result of the application is then presented to an audience, which also contributes to the assessment.
1. First presentation (15-20 minutes): 12.5%
2. Final presentation (15-20 minutes): 12.5%
3. Final application (software application): 75%",No,No,IN2087 Software Engineering for Business Applications - Master's Course,"After participating in the module, students are able to apply methods of object-oriented analysis and object-oriented design in the development of a web application in teams. After attending, students have the necessary competence to use web applications with up-to-date programming languages and tools (Libraries, web frameworks and databases). In addition, students are able to evaluate the concepts, techniques and tools for customer-oriented development of innovative web applications and can apply these when creating a corresponding system. In addition, after participating in the module, students have the ability to implement a system in teams and present the results.","The students realize an innovative web-application of medium complexity in JavaScript, CSS, HTML, etc. in small groups. For web applications, they use purposeful libraries and frameworks for web visualization, implementation of application logic and persistent data storage.
The phases of requirement analysis and design are performed with the help of UML. The students are responsible for project- and quality management. The regular presentation of the project progress is part of the project.The students realize an innovative web-application of medium complexity in JavaScript, CSS, HTML, etc. in small groups. For web applications, they use purposeful libraries and frameworks for web visualization, implementation of application logic and persistent data storage.
The phases of requirement analysis and design are performed with the help of UML. The students are responsible for project- and quality management. The regular presentation of the project progress is part of the project.","Practical course:
The students develop the web application in an iterative and incremental process. The project goal is defined by industry partners or scientific staff. A scientific supervisor assumes the role of coach and is available for technical and organizational questions. At regular meetings, the intermediate results of the project are presented to the industrial partner or the scientific employee as project owner.","Slide show, standard software engineering tools (IDE, configuration management, build management, ...)","[Os10] A. Osterwalder, Y. Pigneur: Busines Model Generation: A Handbook for Visionaries, Game Changes, and Challenges, John Wiley & Sons, 2010
[Ro09] D. Roam: The Back of the Napkin: Solving Problems and Selling Ideas with Pictures, Portfolio Hardcover, 2009
[Duy07] D. K. Van Duyne, J. A. Landay, J. I. Hong: The design of sites, Prentice Hall Professional, 2007
[Kru05] S. Krug: Don't make me think! Web Usability: Das intuitive Web, New Riders Press, 2005
[Hoe06] R. Hoekman: Designing the Obvious. A Commonsense Approach to Web Application Design, New Riders Press, 2006
[Ba03] P. Baldi, P. Frasconi, P. Smyth: Modeling the Internet and the Web, Wiley, 2003
[Me06] E. Mendes, N. Mosley: Web Engineering, Springer, 2006
[Ja04] S. Jablonski, I. Petrov, C. Meiler, U. Mayer: Guide to Web Application and Platform Architectures, Springer, 2004",10,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/457038/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2130,Practical Course Realization of Process-oriented Applications,10.0,v2,from Summer semester 2021,Rinderle,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,German/English,-,300.0,90.0,210.0,"Type of Assessment: project work
The assessment consists of a process-oriented application development project with milestones and their presentation. The description of the project phases (milestones) are provided to students on basis of consecutive exercise descriptions. Based on the exercise descriptions the envisioned process-oriented application is developed and presented in a modular and step-by-step way. Developing the process-oriented application is conducted using standard process modeling notation Business Process Modeling and Notation for process design and a open source process engine. The realization of the process-oriented application comprises the development and invocation of web services. 
The project goals can be generic (e.g., developing a work list component) or realizing a specific application scenario (e.g., implementing a production process). The module demonstrates the students’ understanding of (a) what process-oriented application development means, (b) which benefits can be achieved by process-oriented development, (c) which challenges arise in practice, and (d) how different project phases can be presented to stakeholders. The overall grading of the module is based on the grading the process-oriented application prototype (75%) and the milestone presentation (25%).",Yes,No,"IN0006 Introduction to Software Engineering, IN0008 Fundamentals of Databases, IN2085 Software Engineering for Business Applications - Bachelor's Course, IN2088 Software Architectures","After participating in the module, students will be able to
‒	describe and model process logic using BPMN.
‒	verify that the process logic is executable.
‒	execute the described process logic using a open source process engine.
‒	realize the invocation of human and computing resources.
‒	apply message correlation patterns for the asynchronous communication with/between process-oriented systems. 
‒	parse and transform BPMN-based process models. 
‒	reflect and realize granularity concepts when realizing specific application scenarios, for example, in manufacturing, how to deal with sensors, tooling machines, and robots. 
‒	present their development project based on the milestones to different stakeholders.","The module starts with introducing the concepts of process-oriented application development, in particular, on the design, verification, implementation, and execution of processes. Moreover, real-world example from different application scenarios are demonstrated. The conceptual part is then practically realized and deepened by the students, including process modeling using BPMN, programming of web services, programming of stand-alone tools for process verification and transformation (e.g., based on Petri Nets), application of a process engine (mainly cpee.org), usage of standards such as OPC-UA, XES, and techniques from the XML family. The students can choose the programming language. The practical project part extends the basic concepts particularly with respect to advanced aspects of process-oriented applications such as worklist concepts and with respect to challenges from application domains, e.g., invoking sensors and robots as in manufacturing. The students gain insights into concepts and experiences with the independent development of process-oriented applications. This also refers to the presentation of the project results.The module starts with introducing the concepts of process-oriented application development, in particular, on the design, verification, implementation, and execution of processes. Moreover, real-world example from different application scenarios are demonstrated. The conceptual part is then practically realized and deepened by the students, including process modeling using BPMN, programming of web services, programming of stand-alone tools for process verification and transformation (e.g., based on Petri Nets), application of a process engine (mainly cpee.org), usage of standards such as OPC-UA, XES, and techniques from the XML family. The students can choose the programming language. The practical project part extends the basic concepts particularly with respect to advanced aspects of process-oriented applications such as worklist concepts and with respect to challenges from application domains, e.g., invoking sensors and robots as in manufacturing. The students gain insights into concepts and experiences with the independent development of process-oriented applications. This also refers to the presentation of the project results.","Practical course consisting of supervised single projects; students design and implement a process-oriented application based on well-defined mile-stones. This enables students to understand (i) how the process-oriented paradigm differs from classical application development, (ii) how the process-oriented paradigm can support modular software developments, and (iii) which effects on performance and realization are to be expected.  
The practical course also enables students to explore and visualize the interface of the process-oriented paradigm to classical data analysis and to develop analyses based on annotated process models.","Videos, slides, project descriptions, website with forum, screen sharing","‒	Mathias Weske: Business Process Management - Concepts, Languages, Architectures, Third Edition. Springer 2019, ISBN 978-3-662-59431-5, pp. 1-417
‒	www.bpmn.org
‒	https://cpee.org/ 
‒	Jürgen Mangler, Florian Pauker, Stefanie Rinderle-Ma, Matthias Ehrendorfer: centurio.work - Industry 4.0 integration assessment and evolution. BPM (Industry Forum) 2019: 106-117
‒	Juergen Mangler, Stefanie Rinderle-Ma: CPEE - Cloud Process Execution Engine. BPM (Demos) 2014: 51",11,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2862515/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT423002,AI Testing,5.0,-,from Winter semester 2024/25,"Stocco, Andrea",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The assessment is by means of a written exam of 90 minutes. The assignments assess the theoretical and practical knowledge about the techniques required to test AI-based systems.
The assignments which refer to the theory assess that the fundamental concepts and algorithms concerning underfitting/overfitting/data quality are understood and can be applied to small example.",No,Yes,"- Basics of CS
- Basics of software engineering and software testing
- Basics of artificial intelligence

IN0006 Introduction to Software Engineering
IN2084 Software testing: Processes and Methods","The course is aimed at master students interested in the quality assurance and quality control processes for AI-based software systems. Participants would gain a deeper understanding of the unique challenges and best practices for testing these types of applications.
The students learn how to critically analyze a given software system. They acquire the analytical and interdisciplinary skills to adapt the testing concepts from traditional software to the new AI-based systems. The course will introduce them to the theory, exercise, and scientific research for all the topics presented in the course. They mature the necessary writing skills to present the main aspects of their topic in a written form.","The course focuses on the challenges and advancements in testing software applications in which the decision making and logic is heavily based on artificial intelligence (AI-based systems). AI-based systems are becoming increasingly prevalent in various industries, such as automotive, healthcare, and e-commerce. These applications must be thoroughly tested to ensure that they can operate efficiently and accurately.

Among the suggested topics, the course will focus on:

- Strategies for testing AI-enabled such as autonomous driving systems;
- Tools and techniques for managing and manipulating large volumes of data during testing;
- Best practices for designing test cases and test data for data-intensive applications;
- Performance metrics for AI-based systems;
- Testing non-functional properties (e.g., bias, fairness).The course focuses on the challenges and advancements in testing software applications in which the decision making and logic is heavily based on artificial intelligence (AI-based systems). AI-based systems are becoming increasingly prevalent in various industries, such as automotive, healthcare, and e-commerce. These applications must be thoroughly tested to ensure that they can operate efficiently and accurately.

Among the suggested topics, the course will focus on:

- Strategies for testing AI-enabled such as autonomous driving systems;
- Tools and techniques for managing and manipulating large volumes of data during testing;
- Best practices for designing test cases and test data for data-intensive applications;
- Performance metrics for AI-based systems;
- Testing non-functional properties (e.g., bias, fairness).","The course is aimed at master students interested in the quality assurance and quality control processes for AI-based software systems. Participants would gain a deeper understanding of the unique challenges and best practices for testing these types of applications.

By means of a presentation with slides, the lecturer presents basic principles and techniques of testing AI-based systems and illustrates these by means of both theoretical and practical examples. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, train students to apply the learnt techniques to solve reasonably sized tasks from the various components of an AI-based system or component.

The students learn how to critically analyze a given software system. They acquire the analytical and interdisciplinary skills to adapt the testing concepts from traditional software to the new AI-based systems. The course will introduce them to the theory, exercise, and scientific research for all the topics presented in the course.","Whiteboard, PowerPoint slides",https://www.istqb.org/certifications/artificial-inteligence-tester,16,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4279940/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3430,Selected Topics in Engineering Software-intensive Systems,5.0,-,Always,-,Department of Computer Science,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,17,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498126/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2367,Automated Programming,2.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,60.0,30.0,30.0,"Oral exam of 60 minutes in the form of a one-on-one interview. Usage of any written background material by the examinee is not allowed.

The examinees shall demonstrate that they have understood the main specification techniques and synthesis algorithms as covererd in class and that they may apply these basic synthesis techniques.

Questions can focus on various tasks such as analysing, justifying, judging, proving or characterizing, defining, explaining, discussing and comparing within the covered topics. In particular, students might be asked to apply the techniques to solve simple synthesis problems, or at least parts thereof.",No,Yes,"Software Engineering IN2309 and/or IN0006, Foundations of Program and System Development IN2078, Logic IN2049, Semantics IN2055, Discrete Probability Theory IN0018","After participation of this module the participants have foundational knowledge of the current state-of-the-art of the dimensions of automated program synthesis at the intersection of software engineering, artificial intelligence, and machine learning, including various specification approaches of functional, reactive, and probabilistic programs as well as specialized techniques for searching for, possibly optimized or robust, programs satisfying the given high-level specification. 

The automated programming techniques covered in class are at the intersection of the software engineering, artificial intelligence, and machine learning. 

The participants will also gain an overview of the capabilities and limitations or current approaches to program synthesis as a prerequisite for further scientific work (e.g. bachelor thesis, master thesis) or for applying program synthesis techniques in specialized applications.","Automated  Programming
1.	Deductive Program Synthesis
2.	Searching for programs
3.	Programs from proofs
4.	Transformational program synthesis
5.	Synthesis of probabilistic programs
6.	Synthesis of reactive programs
7.	Programming by example
8.	Inductive logic programming
9.	Deep learning program synthesis
10.	Application I: synthesis of data analysis programs
11.	Application II: synthesis of robotic programs
12.	Application III: synthesis of planetary software
13.	Application IV: programmer’s assistenceAutomated  Programming
1.	Deductive Program Synthesis
2.	Searching for programs
3.	Programs from proofs
4.	Transformational program synthesis
5.	Synthesis of probabilistic programs
6.	Synthesis of reactive programs
7.	Programming by example
8.	Inductive logic programming
9.	Deep learning program synthesis
10.	Application I: synthesis of data analysis programs
11.	Application II: synthesis of robotic programs
12.	Application III: synthesis of planetary software
13.	Application IV: programmer’s assistence","Lectures with slides. Practical exercises will be an integral part of the lectures. Some of these exercises will be solved interactively in class, whereas others will be left open during class and should be solved by the participants in self-study.",Slides,"Program Synthesis, S. Gulwani, O. Polozow, R. Singh,  Foundations and Trends in Programming Languages, Volume 4, Issue 1-2, 2017",18,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1629492/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2114,Automotive Software - Methods and Technology,5.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,The exam takes the form of a 75 minutes written test. In the written exam students should prove to be able to identify a given problem and find solutions within limited time.,No,Yes,"IN0006 Introduction to Software Engineering
knowledge in Java and/or C is prerequisite for the exercises.",At the end of the module students know the area of automotive software and obtain methods competence in the development of such software-systems.,"The strategic importance of software in vehicles is rapidly increasing. Three different sub domains will be presented in the lecture: infotainment, body/comfort, driver assistance and safety. For each of these domains, the lecture will present the requirements and specialties as well as the theoretical foundations.
Besides these three sub domains, three central aspects are addressed: development process, architecture and quality assurance
- Introduction and Overview ?""software and software engineering in the automotive context""?
- ""Embedded systems"" - application in the body and comfort domain
- ""Real time and control theory"" - application in the safety and chassis domains
- ""Embedded Java"" - application in the infotainment domain
- ""Sensors and actuators"" - application in the driver assistance domain
- ""Development process I"" - requirements, logical architecture
- ""Development process II"" - from the logical architecture to the integrated system
- Model based development: embedded Middleware
- Tools and execution models: ASCET, Rose RT, MATLAB
- Testing and quality assurance
- The software product life cycle
- Future challanges

Practical expertise in Java as well as C are essential to be successful during the exercises with 3 special programming exercises as the main learning goal. 

It is possible to visit this lecture in common with IN2084.The strategic importance of software in vehicles is rapidly increasing. Three different sub domains will be presented in the lecture: infotainment, body/comfort, driver assistance and safety. For each of these domains, the lecture will present the requirements and specialties as well as the theoretical foundations.
Besides these three sub domains, three central aspects are addressed: development process, architecture and quality assurance
- Introduction and Overview ?""software and software engineering in the automotive context""?
- ""Embedded systems"" - application in the body and comfort domain
- ""Real time and control theory"" - application in the safety and chassis domains
- ""Embedded Java"" - application in the infotainment domain
- ""Sensors and actuators"" - application in the driver assistance domain
- ""Development process I"" - requirements, logical architecture
- ""Development process II"" - from the logical architecture to the integrated system
- Model based development: embedded Middleware
- Tools and execution models: ASCET, Rose RT, MATLAB
- Testing and quality assurance
- The software product life cycle
- Future challanges

Practical expertise in Java as well as C are essential to be successful during the exercises with 3 special programming exercises as the main learning goal. 

It is possible to visit this lecture in common with IN2084.","Lecture, exercise course, problems for individual study",-,"T. Schäuffele, J. Zurawka. Automotive Software Engineering - Grundlagen, Prozesse, Methoden und Werkzeuge.",19,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261483/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT423001,DevOps: Engineering for Deployment and Operations,6.0,-,from Summer semester 2024,"Weber, Ingo",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Examination type: imminent 
This module blends theoretical understanding with hands-on experience, emphasizing a project-based learning approach. Students engage in team-based project work, where they apply the concepts and techniques discussed in lectures to a predefined project. This practical application fosters collaboration, creativity, and real-world problem-solving skills.
The assessment is two-fold:
1. Project Work (50% of the grade): At the beginning of the course, the students receive a problem statement, detailing the functional and quality requirements of the project in a clear and measurable way. Throughout the course, the instructors introduce additional quality requirements and constraints, such as the use of specific technologies and frameworks. These include adherence to architectural styles, following security best practices and deployment strategies, and integrating the concepts and technologies discussed in lectures. Each team presents their project outcomes, demonstrating their proficiency in implementing DevOps principles. The instructors assess the project work based on the compliance with functional requirements, quality requirements, and constraints. This constitutes 80% of the project grade. The quality of the presentation and discussion by each team, accounts for 20% of the project grade. All team members must be able to discuss their work and answer questions, highlighting their understanding and contributions.
2. Computer-Based Exam (50% of the grade): At the end of the course, a 90-minute computer-based exam will take place. This exam assesses individual understanding and application of DevOps principles, deployment strategies, best practices, DevOps technologies, and advanced DevOps topics. It ensures a comprehensive understanding of the theoretical foundations of DevOps based on the intended learning outcomes.",No,No,"This module is designed for students with an advanced understanding of computer science or information systems, typically acquired through a computer science-oriented bachelor's program. To ensure readiness for this course, students should possess the following foundational knowledge and skills: 
1. Solid Programming Background: Familiarity with fundamental programming concepts and techniques is essential. Relevant coursework includes ""Fundamentals of Programming"" (IN0002). 
2. Understanding of Internet/Networking Protocols: A grasp of the basics in computer networking and distributed systems is crucial. This can be achieved through courses like ""Introduction to Computer Networking and Distributed Systems"" (IN0010). 
3. Basic Software Engineering and Architecture Knowledge: An understanding of software engineering principles, including distributed version control and software architecture, is required. Suitable courses include ""Introduction to Software Engineering"" (e.g., IN0006) and ""Software Architectures"" (e.g., IN2088).
 
Additionally, familiarity with the following areas will be beneficial, though not mandatory: 
• Cloud Technologies: Knowledge of cloud computing, virtual machines, and containers (e.g., Cloud Computing, IN2073). 
• Internet Security: Understanding of the key concepts and challenges related to internet security (e.g., IT Security, IN0042). 
• Software Development Methodologies: Familiarity with approaches to software development and project management. 
• Deployment and Operation: Insights into the processes involved in the deployment and operation of software systems.","This module focuses on the practical application of the covered content. After completing the course, students will be able to: 
• Explain DevOps Principles: Critically examine and differentiate between the cultural and organizational aspects of DevOps to optimize the software development lifecycle. 
• Apply Virtualization and Cloud Integration: Implement and execute virtualization and cloud technologies to enhance operational efficiency. 
• Design Deployment Strategies: Construct continuous integration and delivery pipelines using systematic planning and creative problem-solving. 
• Evaluate Monitoring and User Feedback: Assess monitoring strategies and interpret user feedback to refine and improve the development process. 
• Apply Security and Compliance Best Practices: Integrate security processes and compliance measures by incorporating cross-cutting security aspects to facilitate risks. 
• Create Microservices and Scalable Architectures: Design and develop scalable microservice architectures, applying innovative solutions to complex system requirements. 
• Operate Production Environments: Configure deployment software measures, apply best practices for incident management and resolve problem, e.g. rollbacks. 
• Investigate Advanced DevOps Topics: Explore and research advanced concepts and current trends in DevOps to foresee the impact on future methodologies and practices.","DevOps is an integrative approach to software engineering, blending development (Dev) and operations (Ops) to optimize the software development lifecycle, enhance collaboration, and streamline workflows. It emphasizes the use of automated processes, continuous integration, and deployment strategies to improve the efficiency and quality of software systems. It has become a widely adopted practice in the software industry, since it leads to shorter release cycles of software while achieving high quality. Key topics in DevOps include, among others: 
• Introduction and Overview of DevOps 
• DevOps Culture and Organization 
• Software Engineering in DevOps 
• Virtualization, Containers, and Cloud Integration 
• Deployment Strategies and Continuous Delivery 
• Monitoring, Feedback, and User-Centric Approaches 
• Security, Risk Management, and Compliance 
• Microservices and Scalable Architectures 
• Post-Production Management 
• Advanced Topics and Emerging TrendsDevOps is an integrative approach to software engineering, blending development (Dev) and operations (Ops) to optimize the software development lifecycle, enhance collaboration, and streamline workflows. It emphasizes the use of automated processes, continuous integration, and deployment strategies to improve the efficiency and quality of software systems. It has become a widely adopted practice in the software industry, since it leads to shorter release cycles of software while achieving high quality. Key topics in DevOps include, among others: 
• Introduction and Overview of DevOps 
• DevOps Culture and Organization 
• Software Engineering in DevOps 
• Virtualization, Containers, and Cloud Integration 
• Deployment Strategies and Continuous Delivery 
• Monitoring, Feedback, and User-Centric Approaches 
• Security, Risk Management, and Compliance 
• Microservices and Scalable Architectures 
• Post-Production Management 
• Advanced Topics and Emerging Trends","By means of a slide presentation with animations, the interactive lecture introduces the concepts and methods of DevOps and explains them using examples. Small in-class exercises, e.g. quizzes, modeling, and programming tasks, with individual feedback help students to identify whether they have understood the concepts and methods. This facilitates to clarify complex ideas and encourages active learning. 
 
Complementing the lectures, the course includes substantial project work, where students collaborate in teams to tackle predefined projects. This team-based approach not only allows students to put theory into practice but also mirrors the collaborative nature of DevOps in the real world. These projects are designed to encourage students to engage with the material creatively and innovatively, going beyond the basics to explore more complex applications of DevOps principles. 
 
The interactive nature of the lectures and the hands-on experience from project work aim to equip students with both the knowledge and practical skills necessary for proficiency in DevOps. This combination of teaching methods is particularly geared towards fostering problem-solving abilities, teamwork, and the practical application of DevOps tools and practices. 
 
Regular feedback sessions are an integral part of the course, providing students with the opportunity to present their project outcomes and engage in constructive dialogue. This feedback mechanism ensures that all students can articulate their understanding, receive insights into their performance, and refine their approach to both individual and team tasks.","Lecture with digital slides, online exercises (programming, modeling, quiz) with individual feedback. Discussion and communication platform for the exchange between instructors, exercise supervisors, and students.","Bass, Len, Ingo Weber, and Liming Zhu. DevOps: A software architect's perspective. Addison-Wesley Professional, 2015. (Available as e-book with a campus-wide license.) 
Len Bass and John Klein. Deployment and Operations for Software Engineers: A DevOps Engineering Textbook, 2022. (Will be made available as PDF to students of the course.)",20,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4132629/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230005,Engineering Resilient Cognitive Systems,3.0,-,from Summer semester 2023,"Trapp, Mario",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,Written exam (60 minutes) or oral exam (30 minutes) as best possible form of examination for a top-down class. No tutorials nor exercises.,No,Yes,"Helpful, but not necessary: 
IN2309 Advanced Topics of Software Engineering 
IN2081 Patterns in Software Engineering 
IN222 Cognitive Systems 
IN2247 Functional Safety","By the end of the module, the students will be able to describe the basic concepts of resilience for cyber-physical cognitive systems and to discuss the underlying concepts of safety & reliability engineering as well as of self-adaptive software systems. In particular, the students will be able to model resilient architectures by applying dedicated engineering methodologies and using architectural patterns and tactics.","Most cyber-physical cognitive systems such as automated vehicles have to work in highly dynamic, uncertain contexts. In consequence, it is hardly possible to engineer a safe and reliable system a-priori at design time. At the same time, safety and reliability are inevitable quality attributes. Therefore, cognitive systems must be resilient, i.e. they must be enabled to be aware of their context and their own state and to adapt themselves dynamically at runtime to their context in order to optimize their utility whilst preserving safety. Thus, resilience will play an essential for future cognitive systems.
The goal of this module is to understand the basic of concepts of resilient architectures for cyber-physical cognitive systems and to partly apply them to small example problems. Particularly this includes:

1. Resilience: Terminology, fundamental concepts, conceptual framework
2. Safety Architectures: Introduction to terminology and fundamental concepts of safety and reliability of software-intensive systems; architectural patterns and tactics for safety-critical systems
3. Self-adaptive Systems: Terminology and fundamental concepts, conceptual frameworks, self-adaptive architectures, models at runtime
4.  Adaptive Resilience Management: resilience-related context awareness, dynamic risk/utility assessment, adaptation planning
5. Learning methods: training context awareness and resilience tactics for flexible, yet safe adaptations to known and unknown contextsMost cyber-physical cognitive systems such as automated vehicles have to work in highly dynamic, uncertain contexts. In consequence, it is hardly possible to engineer a safe and reliable system a-priori at design time. At the same time, safety and reliability are inevitable quality attributes. Therefore, cognitive systems must be resilient, i.e. they must be enabled to be aware of their context and their own state and to adapt themselves dynamically at runtime to their context in order to optimize their utility whilst preserving safety. Thus, resilience will play an essential for future cognitive systems.
The goal of this module is to understand the basic of concepts of resilient architectures for cyber-physical cognitive systems and to partly apply them to small example problems. Particularly this includes:

1. Resilience: Terminology, fundamental concepts, conceptual framework
2. Safety Architectures: Introduction to terminology and fundamental concepts of safety and reliability of software-intensive systems; architectural patterns and tactics for safety-critical systems
3. Self-adaptive Systems: Terminology and fundamental concepts, conceptual frameworks, self-adaptive architectures, models at runtime
4.  Adaptive Resilience Management: resilience-related context awareness, dynamic risk/utility assessment, adaptation planning
5. Learning methods: training context awareness and resilience tactics for flexible, yet safe adaptations to known and unknown contexts",Traditional lecture style combined with interactive case-studies. Understanding the fundamental concepts will be taught in a traditional lecture format. Interactive case study development will be used to teach the ability to apply the concepts to small examples.,Slides for the class and as a script,"References to scientific papers provided during the lecture

In addition:

1. Nelly Bencomo, Robert France, Betty H. C. Cheng, Uwe Aßmann, ""Models@run.time"". Springer Cham, https://doi.org/10.1007/978-3-319-08915-7, ISBN: 978-3-319-08914-0

2. Len Bass, Software Architecture in Practice, Addison-Wesley (4th Edition), ISBN: 978-0136886099

3. Danny Weyns, An Introduction to Self-adaptive Systems: A Contemporary Software Engineering Perspective. Wiley-IEEE, ISBN: 978-1119574941",21,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3475235/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2084,Advanced Topics of Software Testing,5.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,"The examination will take the form of a 75-minute written examination. This should prove that students are able to critically reflect on the different testing activities and apply them in an exemplary manner, for example by the abstract definition of test cases for exemplary systems.",No,Yes,IN0006 Introduction to Software Engineering,"At the end of this module the students know the essential fundamental terms of testing process and methodology. They obtain a deep understanding of testing during software life cycle, static and dynamic testing, test management, test tools and automation, as well as psychology of testing.","Basics
- Introduction
- Concepts and Motivation
- Basic Test Process
- Priorisation of Tests
- Psychology of Testing

Testing during Software Life Cycle
- Waterfall- / V- / W- / Incremental- / Spiral-Model
- Module- / Component Test
- Integration Test
- System Test
- Acceptance Test
- Maintenance of Tests
- Testing of Prototypes
  
Static Testing
- Manual Testmethods
- Static Analysis
  
Dynamic Testing
- Black-Box-Method
- White-Box-Method
- Intuitive Test Case Identification
  
Test Management
- Risk Management
- Cost Effectiveness of Tests
- Reuse
- Error Management
- Test Planning / Observation / Control
- Metrics
- Organisation of Test Teams / Qualifications
- Requirements to Configuration Management
- Norms and Standards
  
Test Tools / Test Automation
- Types
- Choice
- Adoption of Tools
- ""Home built"" vs. Commercial
- Introduction of Tools

It is possible to visit this lecture in common with IN2114 "" Automotive Software - Methods and Technologies"".Basics
- Introduction
- Concepts and Motivation
- Basic Test Process
- Priorisation of Tests
- Psychology of Testing

Testing during Software Life Cycle
- Waterfall- / V- / W- / Incremental- / Spiral-Model
- Module- / Component Test
- Integration Test
- System Test
- Acceptance Test
- Maintenance of Tests
- Testing of Prototypes
  
Static Testing
- Manual Testmethods
- Static Analysis
  
Dynamic Testing
- Black-Box-Method
- White-Box-Method
- Intuitive Test Case Identification
  
Test Management
- Risk Management
- Cost Effectiveness of Tests
- Reuse
- Error Management
- Test Planning / Observation / Control
- Metrics
- Organisation of Test Teams / Qualifications
- Requirements to Configuration Management
- Norms and Standards
  
Test Tools / Test Automation
- Types
- Choice
- Adoption of Tools
- ""Home built"" vs. Commercial
- Introduction of Tools

It is possible to visit this lecture in common with IN2114 "" Automotive Software - Methods and Technologies"".","The module consists of a lecture and an associated exercise. The contents of the lecture will be presented in the lecture and mediated through presentations. Students should be encouraged to study the literature and to conduct a content discussion of the topics. In the exercises, concrete questions are answered together and selected examples are worked on.",Lecture with slides,"-  A.Spillner, T. Linz. Softwaretest.  
-  H. Balzert. Lehrbuch der Software-Technik (v.a. Bd. 2). 
-  M. Pol, Tim Koomen, A.Spillner. Management und Optimierung des Testprozesses. 
-  G. E. Thaller. Software-Test. 
-  T. de Marco. Der Termin und Spielräume. 
-  E. Kit. Software Testing in the Real World. 
-  G. Myers. Methodisches Testen von Programmen.
-  D. Graham. Software Inspection. 
-  M. Fewster und D. Graham. Software-Test Automation. 
-  W. E. Perr. Effective Methods for Software Testing. 
-  R. E. Pressman. Software-Engineering. 
-  B. Beizer. Software Testing Techniques. 
-  B. Beizer. Black-Box Testing.",22,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261731/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2385,Safety and Security for Cyber-Physical Systems,3.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,Exam (60 minutes) or oral exam (30 minutes) as best possible form of examination for a top-down class. No tutorials nor exercises.,No,No,"Helpful:  IT Security (IN2209), Functional Safety (IN2247), Security Engineering (IN 2178)",The students understand fundamental concepts and approaches at implementing and arguing about safety and security in the CPS domain. They know basic forms of structured reasoning in this domain and understand commonalities and differences between safety and security arguments and their completeness. They are capable of analyzing abstract CPS w.r.t. safety and security.,"Traditionally, cyber-physical systems are developed with a strong focus on functional safety requirements. Because of ubiquitous connectivity, information security concerns have become increasingly important. In this module, we study differences and similarities between functional safety and information security in terms of concepts, methods, and standards. 
The goal of this module is to understand the commonalities between methods for assuring safety and security, and to be able to apply them to small example problems.

1.	Terminology and fundamental concepts
2.	Functional Safety and safety of the intended functionality: Analysis (HARA, HAZOP, FMEA, FTA; coverage) and construction (fail safe/operational; redundancy; diversity). Safety Cases. Standards ISO26262 and 21448.
3.	Information Security: Analysis (attacker models, STRIDE, TARA) and construction (architecture, mechanisms, security-by-design). Connection of CPS to the cloud.
4.	Organizational approaches: ISO 21434 („Road vehicles – Cybersecurity engineering); Secure Development Lifecycle
5.	Certification 
6.	Safety and Security: Commonalities and differencesTraditionally, cyber-physical systems are developed with a strong focus on functional safety requirements. Because of ubiquitous connectivity, information security concerns have become increasingly important. In this module, we study differences and similarities between functional safety and information security in terms of concepts, methods, and standards. 
The goal of this module is to understand the commonalities between methods for assuring safety and security, and to be able to apply them to small example problems.

1.	Terminology and fundamental concepts
2.	Functional Safety and safety of the intended functionality: Analysis (HARA, HAZOP, FMEA, FTA; coverage) and construction (fail safe/operational; redundancy; diversity). Safety Cases. Standards ISO26262 and 21448.
3.	Information Security: Analysis (attacker models, STRIDE, TARA) and construction (architecture, mechanisms, security-by-design). Connection of CPS to the cloud.
4.	Organizational approaches: ISO 21434 („Road vehicles – Cybersecurity engineering); Secure Development Lifecycle
5.	Certification 
6.	Safety and Security: Commonalities and differences","Traditional lecture style. The students shall learn about commonalities and differences between safety and security, where the safety domain is strictly regulated. Respective basic concepts and insights can best be taught in a top-down manner.",Slides for the class and as a script,"Ross Anderson, Security Engineering
Isar Tarandach, Matthew Coles, Developer-Enabled Threat Modeling
Nancy Leveson,  Engineering a Safer World: Systems Thinking Applied to Safety
Standards ISO26262, ISO21448, ISO21434",23,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2636231/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2080,Modelling of Distributed Systems,4.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,120.0,45.0,75.0,"90-minute exam that evaluates the expected learning outcomes and acquired competences: 
1. creation of formal specifications of concurrent systems, 
2. knowledge and understanding of essential specification techniques and programming paradigms for concurrent systems, and 
3. proof or refutation of mathematical relationships in these contexts.",No,Yes,"IN0001 Introduction to Informatics 1, IN0007 Fundamentals of Algorithms and Data Structures, IN0003 Introduction to Informatics 2, IN2078 Foundations of program and system development","At the and of the module students know the essential fundamental terms of specification, modular design, abstraction, refinement, and verification of concurrent, distributed interactive systems. They have a deep understanding of the modelling and consequently learn how to deal with many aspects of the distributed systems, their behavior and communication in the methodological way. They obtain methods competence of the existing techniques for modelling and formal specification and systems development.","Almost all current computer and software systems run in any form as networks. Additionally they are not only networked among themselves, in fact they are connected with physical and technical processes and according to this they use various interfaces. Thus, for studying modern software systems and their systematic development, topics such as concurrency, interaction and co-ordination of systems are central and important to know and understand. Modelling and systematic working with such systems deals with a lot of various questions, phenomena and difficulties, in contrast to sequential, not-interactive systems. This lecture presents fundamental concepts and models for distributed systems as well as description techniques to describe and specify their structure and properties with the goal to analyze and finally to verify their characteristics. The lecture covers specific questions and approaches to find models of distributed systems, their theories, structures and connections. 
Topics are:
- Concurrent, distributed, cooperating systems: Fundamental ideas and substantial characteristics
- Systems as state machines
- Functional description of system components
- Structure and distribution 
- Processes as execution traces in distributed systems 
- Refinement of systems
- Message-synchronous systemsAlmost all current computer and software systems run in any form as networks. Additionally they are not only networked among themselves, in fact they are connected with physical and technical processes and according to this they use various interfaces. Thus, for studying modern software systems and their systematic development, topics such as concurrency, interaction and co-ordination of systems are central and important to know and understand. Modelling and systematic working with such systems deals with a lot of various questions, phenomena and difficulties, in contrast to sequential, not-interactive systems. This lecture presents fundamental concepts and models for distributed systems as well as description techniques to describe and specify their structure and properties with the goal to analyze and finally to verify their characteristics. The lecture covers specific questions and approaches to find models of distributed systems, their theories, structures and connections. 
Topics are:
- Concurrent, distributed, cooperating systems: Fundamental ideas and substantial characteristics
- Systems as state machines
- Functional description of system components
- Structure and distribution 
- Processes as execution traces in distributed systems 
- Refinement of systems
- Message-synchronous systems","Lecture, exercise course, problems for individual study",-,"-  K.R. Apt, E.-R. Olderog. Verification of Sequential and Concurrent Programs. Springer, 1991.  
-  M. Broy. Towards a Logical Basis of Software Engineering. In: Calculational System Design. IOS-Press, 1999.  
-  D. Gries. The Science of Programming, Springer, 1987.  
-  D. Harel. StateCharts: A Visual Formalism for Complex Systems. Science of Computer Programming, 8:231-274, 1987.  
-  C.A.R. Hoare. Communicating Sequential Processes. Prentice-Hall, 1985.  
-  L. Lamport. The Temporal Logic of Actions. ACM Transactions on Programming Languages and Systems, 3(16):872-923, 1994.  
-  N. Lynch, M. Tuttle. An Introduction to Input/Output automata. CWIQuarterly, 2(3):219-246, 1989.  
-  Z. Manna, A. Pnueli. A Temporal Logic of Reactive Systems and Concurrent Systems. Springer, 1992.  
-  R. Milner. Communication and Concurrency. Prentice-Hall, 1989.",24,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456926/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2081,Patterns in Software Engineering,5.0,-,Always,Br,Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The exam takes the form of a written 75 minutes test. Knowledge questions assess the acquaintance of the student with pattern schemas, reusability issues, use of delegation, inheritance and the applicability of patterns to specific problems. Problem questions assess the ability to solve specific problems using patterns and refactorings, map them to a UML model and implement them in Java. By dealing with both types of questions the students demonstrate that they have understood the principles of patterns in software development and are able to apply them.",No,Yes,"IN0001: Introduction to Informatics
IN0002: Fundamentals of Programming (Exercises & Laboratory) 
IN0006: Introduction to Software Engineering","After successful completion of the module, participants understand the key concepts of the different types of patterns that can be used during software development, in particular design patterns, architectural patterns, testing patterns and organizational patterns. They understand that patterns are a way to describe reusable knowledge for analysis, system design, object design and software project management activities. Given a problem, they are able to identify the applicability of a pattern that addresses the problem, describe the pattern in UML and map it into Java code.","Among others, the module IN2081: Patterns in Software Engineering is concerned with the following topics:
-Patterns as approach to structure and describe reusable expert knowledge
- Categories of patterns:
++ Architectural patterns
++ Design patterns
++ Process patterns
++ Testmuster
++ Organizational patterns
++ Antipatterns
- Classification and Combination of patterns
++ Pattern-oriented software development
- Model Transformations
- ++ UML Model refactorings 
- ++ Forward and reverse engineering
- ++ Identification of code smells
- ++Source code transformations (refactorings)
- Using patterns
++ Using patterns during analysis
++ Using patterns during system design design
++ Using patterns during object design design
++ Identifying patterns in software legacy systemsAmong others, the module IN2081: Patterns in Software Engineering is concerned with the following topics:
-Patterns as approach to structure and describe reusable expert knowledge
- Categories of patterns:
++ Architectural patterns
++ Design patterns
++ Process patterns
++ Testmuster
++ Organizational patterns
++ Antipatterns
- Classification and Combination of patterns
++ Pattern-oriented software development
- Model Transformations
- ++ UML Model refactorings 
- ++ Forward and reverse engineering
- ++ Identification of code smells
- ++Source code transformations (refactorings)
- Using patterns
++ Using patterns during analysis
++ Using patterns during system design design
++ Using patterns during object design design
++ Identifying patterns in software legacy systems",The lecture format is based on blended learning: A combination of content delivery and problem solving for each pattern taught in the class: The motivation and concept of each pattern will be presented and immediately afterwards practiced in an in-class exercise. Homework assignments are given out for individual study.,"Slides and films for each lecture, Moodle","- Buschmann, Menuier, Rohnert, Sommerlad, Stal: A System of Patterns: Pattern-Oriented Software Architecture, Wiley, 1996 
- Gamma, Helm, Johnson, Vlissides, Design Patterns: Elements of Reusable Object-Oriented Software, Addison-Wesley, 1995 
- Freeman and Freeman: Head First Design Patterns, O'Reilly, 2004 
- Fowler: Analysis Patterns: Reusable Object Models, Addison-Wesley, 1997
- Fowler: Refactoring: Improving the Design of Existing Code: Improving the Design of Existing Code, Addison-Wesley, 1999

Additional literature will be announced at the beginning of the course. Lecture specific literature will be announced at the end of each lecture.",25,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473855/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2235,Software Engineering in an Industrial Setting,3.0,-,Always,"Matthes, Florian",Department of Computer Science,-,Master,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,"Type of assessment: written exam (75 minutes)
The assessment consist of a written examination in which students have to analyze and discuss software engineering issues by means of practical project scenarios such as cost-benefit analysis, architectural design and software technology selection.",No,No,-,"At the end of the module, students have a well-founded holistic understanding of the roles and profiles of software engineers for enterprise solutions. They know and understand current challenges and relevant developments in practice.","The lecture is motivated by industrial software experience. By means of practical examples the typical structure of large business information systems is shown. Important aspects of design and development are introduced. Such a system often plays the role of a ""central nervous system"" for the enterprise. It contains core business knowledge and is a key factor for economic success. Business information systems which are of this importance should be regarded as an asset of the enterprise. For the creation as well as for the operation and the enhancement during its lifetime there have to be cost-benefit calculations (e.g. ROI). An elaborate software architecture will usually enhance the results of such calculations. The lecture is complemented by invited talks from industry experts.The lecture is motivated by industrial software experience. By means of practical examples the typical structure of large business information systems is shown. Important aspects of design and development are introduced. Such a system often plays the role of a ""central nervous system"" for the enterprise. It contains core business knowledge and is a key factor for economic success. Business information systems which are of this importance should be regarded as an asset of the enterprise. For the creation as well as for the operation and the enhancement during its lifetime there have to be cost-benefit calculations (e.g. ROI). An elaborate software architecture will usually enhance the results of such calculations. The lecture is complemented by invited talks from industry experts.",Lecture,Lecture with digital slides,"- [Fr07] Fröschle, H.-P.; Strahringer, S. (Hrsg.): IT-Industrialisierung, dpunkt.verlag, 2007.
- [Pr04] Project Management Institute. A Guide to the Project Management Body of Knowledge, 4th Edition, 2008.
- [Si04] Siedersleben, J.: Moderne Software-Architektur. dpunkt.verlag 2004
- [Sz02] Szyperski, C.: Component Software. Addison-Wesley, 2. Auflage, 2002",26,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/608628/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000026,Advanced Technology and Innovation Management,6.0,S,Always,"Henkel, Joachim",Chair of Technology and Innovation Management  (founded by Dr. Theo Schoeller) (Prof. Henkel),-,Bachelor,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The grade results from a two-hour closed book exam. During the exam students l demonstrate that they understand theoretical concepts and core literature within innovation management. They show that they can analyze and evaluate innovation processes. In addition, students may participate in voluntary group presentations to improve their overall grade by 0,2/0,3. With the additional presentation (10 minutes) students show that they are able to apply theoretical concepts to real-life examples.",Yes,No,"Technology and Innovation Management: Introduction or similar introductory lecture on innovation management

Note for exchange students: For students with an economic background this subject counts as a bachelor level course. For students with a natural science background, this subject counts as a master level course.",At the end of the module students will be able to analyze the innovation process within the firm. Students will be able to decide where R&D cooperation is necessary and how corporate culture and incentive systems can motivate employees to be innovative. Students have reached an in-depth understanding of core theoretical concepts and are able to apply these concepts to real-life examples.,"Advanced Technology and Innovation Management addresses aspects and topics concerning the organisation of the innovation process, such as organizing and managing innovation, open and distributed innovation, and innovation strategy. The module consists of five blocks with the topics: (1) Innovation and Markets, (2) Open Innovation, (3) Organizing for Innovation, (4) Managing Innovation, (5) Profiting from Innovation and Innovation Strategy. The individual lectures cover topics such as: Determinants of Innovation, Crowdsourcing, Corporate Venture Capital, Innovation Culture, and IP Protection.Advanced Technology and Innovation Management addresses aspects and topics concerning the organisation of the innovation process, such as organizing and managing innovation, open and distributed innovation, and innovation strategy. The module consists of five blocks with the topics: (1) Innovation and Markets, (2) Open Innovation, (3) Organizing for Innovation, (4) Managing Innovation, (5) Profiting from Innovation and Innovation Strategy. The individual lectures cover topics such as: Determinants of Innovation, Crowdsourcing, Corporate Venture Capital, Innovation Culture, and IP Protection.","The module consists of a lecture. Presentation by lecturer, case study discussions between students and lecturer, student presentations with discussion. During the module students work in-depth with the relevant literature and core theoretical concepts. Students have the possibility to apply the concepts discussed in class during the in-class case study discussion and in their voluntary presentation.","PowerPoint, film excerpts","Afuah, A., & Afuah, A. (2003). Innovation management: strategies, implementation and profits.
Dodgson, M., Gann, D. M., & Salter, A. (2008). The management of technological innovation: strategy and practice. Oxford University Press on Demand.
More relevant literature is made available for students during the course of the module.",32,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/452770/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000233,Management Accounting,6.0,S,Always,"Friedl, Gunther",Chair of Management Accounting (Prof. Blaschke komm.),-,Master,-,-,one semester,winter semester,German,-,180.0,60.0,120.0,"Students take a written exam with a duration of 120 minutes. A non-programmable pocket calculator and a bilingual dictonnary for international students are permitted as aids. The questions in the written exam refer to the contents of the lecture and the tutorial. Thereby, it is examined whether the students have understood the objectives of cost accounting and whether they are able to classify and understand the problems and application of various systems of cost accounting. Furthermore, it is examined whether the students are able to analyze and apply the vaious systems of cost accounting.",Yes,No,"WI000689 ""Kosten- und Erlösrechnung""","At the end of the course students will have a comprehensive understanding about goals and problems of various systems of management accounting. Students will be able to analyse, classify and applicate different methods of management accounting. The systems of cost accounting, which students are able to formulate and to apply, comprise direct costing and contribution margin accounting, relative direct costing, activity based costing, target costing and the theoretical investment approach aligning short-term cost accounting and long term investment appraisal.","The module covers problems and methods of cost planning and cost controlling. Furthermore it analyses various systems of management accounting. In particular, the following contents are taught: 
- Discussion about the classification and goals of management accounting systems
- Intensive treatment and evaluation of direct costing focusing on planning and controlling of costs and revenues
- Relative direct costing and profit contribution invoice
- Classification and detailed analysis of activity based costing
- Discussion about Target Costing focusing on the calculation of product price 
- Aligning short-term cost accounting and long-term investment appraisal by using a theoretical investment approach.
The excercis accompanies the lecture and recurs the content by examples and assignments of test exams.The module covers problems and methods of cost planning and cost controlling. Furthermore it analyses various systems of management accounting. In particular, the following contents are taught: 
- Discussion about the classification and goals of management accounting systems
- Intensive treatment and evaluation of direct costing focusing on planning and controlling of costs and revenues
- Relative direct costing and profit contribution invoice
- Classification and detailed analysis of activity based costing
- Discussion about Target Costing focusing on the calculation of product price 
- Aligning short-term cost accounting and long-term investment appraisal by using a theoretical investment approach.
The excercis accompanies the lecture and recurs the content by examples and assignments of test exams.",The module consists of a lecture and an exercise. During the lectures the contents are delivered by presentations and discussions. The students are inspired to improve the acquired knowledge by studying the suggested literature. In the tutorials the students apply the acquired knowledge in solving exercises and implementing case studies.,"presentations, text books, lecture notes, exercises","Schweitzer, Marcell; Küpper, Hans-Ulrich: Systeme der Kosten- und Erlösrechnung, 10. Aufl., München 2011.

Ewert, Ralf; Wagenhofer, Alfred: Interne Unternehmensrechnung, 6. Aufl., Berlin et al. 2008.

Küpper, Hans-Ulrich; Friedl, Gunther; Hofmann, Christian; Pedell, Burkhard: Übungsbuch zur Kosten- und Erlösrechnung, 6. Aufl., München 2010.",33,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/463899/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000100,Advanced Microeconomics,6.0,S_v2019,from Summer semester 2019,"Feilcke, Christian",Associate Professorship of Economics of Innovation (Prof. Hottenrott),-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Students receive credit for the module after passing a multiple choice exam (written, 120 minutes). Students apply advanced concepts and methods of microeconomics (most notably of expected utility theory and game theory) to concrete decision problems and develop solutions. They show their ability to assess and evaluate decisions under uncertainty and asymmetric information (e.g. on insurance markets) as well as strategic interaction of decision makers (e.g. under oligopolistic competition). Hereby, students demonstrate their capacity for abstraction (thinking in economic models) and concretization (interpreting and applying the results of the model).",Yes,No,"WI000021 ""Economics I (Microeconomics)"" OR WI001056 ""Principles of Economics""","Participation in the module will enable the students
 • to apply expected utility theory in order to describe and evaluate decisions under uncertainty and/or asymmetric information. They will be capable of
○ analyzing the functioning of competitive insurance markets,
○ assessing market failure arising from asymmetric information,
○ solving problems of incentive compatibility.
• to apply game theory in order to analyze strategic interaction. They will be capable of
○ identifying and assessing equilibria,
○ practicing backward induction,
○ analyzing social dilemmas and coordination problems.
• to conceive policy advice und to evaluate concrete policy measures (e.g. in the field of social security or competition policy).","The module imparts advanced concepts and methods of microeconomics focussing on choice under uncertainty and strategic interaction. It examines markets under asymmetric information and imperfect competition.
• Expected Utility Theory
○ Risk Preferences
○ Insurance Markets
i) Adverse Selection
ii) Moral Hazard
• Game Theory
○ Nash Equilibrium
i) in pure and mixed strategies
ii) in simultaneous and sequential games
iii) in one shot and repeated games
○ Strategic Interaction in Oligopolistic Markets
i) Simultaneous and sequential quantity competition (Cournot, Stackelberg)The module imparts advanced concepts and methods of microeconomics focussing on choice under uncertainty and strategic interaction. It examines markets under asymmetric information and imperfect competition.
• Expected Utility Theory
○ Risk Preferences
○ Insurance Markets
i) Adverse Selection
ii) Moral Hazard
• Game Theory
○ Nash Equilibrium
i) in pure and mixed strategies
ii) in simultaneous and sequential games
iii) in one shot and repeated games
○ Strategic Interaction in Oligopolistic Markets
i) Simultaneous and sequential quantity competition (Cournot, Stackelberg)","The module consists of a lecture as well as an exercise course. The lecture content will be conveyed to the students by means of verbal presentation. The exercise course aims to encourage students to independently deliberate the presented economic problems, which are discussed in the lecture and in the relevant literature. In the exercise course, participants apply the acquired knowledge by solving exercises and implementing case studies, partially this process takes place in group work. Moreover, concrete issues raised by students are addressed and online polls are conducted at regular intervals. The polls contain multiple-choice questions similar to those presented in the exam and help course participants gauge their level of performance relative to others.","Text books, script, exercises, online polls, videos","- Gravelle, Hugh and Ray Rees (2004): Microeconomics, Pearson
- Jehle, Geoffrey and Philip Reny (2011): Advanced Microeconomic Theory, Pearson
- Kreps, David (1990): A Course in Microeconomic Theory, Princeton University Press
- Osborne, Martin (2004): An Introduction to Game Theory, Oxford University Press
- Shy, Oz (1996): Industrial Organization: Theory and Applications, MIT Press
- Zweifel, Peter and Roland Eisen (2012): Insurance Economics, Springer",34,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1628399/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000234,Value-based Management,6.0,S,Always,"Friedl, Gunther",Chair of Management Accounting (Prof. Blaschke komm.),-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The examination is a written and marked exam (120 minutes) in which only a non-programmable calculator is allowed. The purpose of the exam is to verify the provided theoretical competences. By exemplary business situation or compensation schemes, the students prove that they can test and evaluate the suitability of certain instruments of value-based management. In concrete cases, students are asked to apply the concept of residual income and potential accounting adjustments, to calculate important key indicators of value-based management and to show relationships between them and their effects in incentive schemes. The students are supposed to realize occurring problems and to suggest solutions.",Yes,No,"Basic lectures in external accounting, Controlling, investment and financing","The learning outcomes of this module are: (1) students will be able to remember and understand the concept of residual income and value creation; (2) they will be able to analyze accounting problems and problems related to incentives (compensation components and basis of assessment);  (3) they will be able to apply the newly acquired knowledge to solve these problems when designing and implementing value-based management for a company; (4) Therefore, students evaluate different goals of management compensation and identify the suitability of different tools such as employee stocks, stock options, the residual income with different accounting adjustments as a performance measure or the application of a bonus bank.","This module covers the different aspects of implementing value-based management in a company. The focus of the course lies on the concept of residual income as corporate and business unit performance measure: 
-Calculation of Economic Value Added (EVA) as the prevailing residual income measure in practice including the most relevant accounting adjustments and their calculation.
- Introduction to the problems and proposed solutions of calculating the cost of capital.
- Discussion of the suitability of residual income as a goal congruent performance measure. 
- Design of compensation schedules to achieve the different and sometimes conflicting goals of management compensation: alignment, wealth leverage, retention and minimizing shareholders’ cost of compensation. 
- Diverse means of compensation, like stock options and bonus plans incl. different payout rules and bonus banks, are taken into consideration.
- Implementation of a company’s performance measurement system using financial and non-financial value drivers.This module covers the different aspects of implementing value-based management in a company. The focus of the course lies on the concept of residual income as corporate and business unit performance measure: 
-Calculation of Economic Value Added (EVA) as the prevailing residual income measure in practice including the most relevant accounting adjustments and their calculation.
- Introduction to the problems and proposed solutions of calculating the cost of capital.
- Discussion of the suitability of residual income as a goal congruent performance measure. 
- Design of compensation schedules to achieve the different and sometimes conflicting goals of management compensation: alignment, wealth leverage, retention and minimizing shareholders’ cost of compensation. 
- Diverse means of compensation, like stock options and bonus plans incl. different payout rules and bonus banks, are taken into consideration.
- Implementation of a company’s performance measurement system using financial and non-financial value drivers.","The module consists of a lecture and an exercise course. During the lectures the contents are delivered by presentations and discussions. In the exercise course the students apply the acquired knowledge in solving exercises and implementing case studies. As a preparation of the exercise courses, students solve exercises and the solutions are presented and discussed during the exercise courses. Some exercises are solved in groups or individually and subsequently discussed in the exercise course.","Presentations, text books, lecture notes, exercises, case studies","Young, S. David and O‘Byrne, Stephen F.: EVA and Value-Based Management: A Practical Guide to Implementation, New York et al. 2001.

Further recommendations given in lecture.",35,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/463901/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI200541,"Planning and Scheduling of Complex Operations: Models, Methods and Applications",6.0,S_v2013,Always,"Kolisch, Rainer",Chair of Operations Management (Prof. Kolisch),-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Grading of the module will be based on the following four assessments: 1) At the end of the module the students have to take an open book written test of 60 minutes length. Through the course students have to hand in two assignments and have to make a 15 minute presentation  followed by a 5 minute discussion. Taking the test the students show that they have understood the problems, models, methods and applications treated in the module. By undertaking the two assignments students demonstrate that they have acquired the capability of i) coding and implementing a scheduling approach by using a computer programming language (first assignment), and ii) implementing a scheduling optimization model by using a modelling language and a solver (second assignment). With the presentation students showcase their understanding and capability of presenting a scheduling application from the scientific literature so far not treated in the module. The assessments are weighted with 50% (test), 15% (coding assignment), 20% (optimization assignment) and 15% (presentation).",Yes,No,"Students should have knowledge in the mandatory undergraduate courses Mathematics (Linear Algebra), Statistics (probabilities, distributions), Management Science or Operations Research (Linear and Integer Programming), Production and Logistics or Operations Management, Programming, as well as a course in modelling and simulation such as in the elective undergraduate course “Modelling, Optimization and Simulation”.",Upon completion of the module students are empowered to analyze and optimize scheduling problems in services and manufacturing. In particular they 1) know the prevalent models and methods available in the literature. 2) They are capable of coding and implementing relevant algorithms. 3) They know how to model and solve linear programs in the field with off-the-shelf software. And 4) they understand and are able to present new approaches available in the scientific literature.,"Scheduling is about planning the timing of activities subject to scarce resources such as machines in order to fulfill an objective such as minimizing the flow time in the best possible way. Many scheduling problems in manufacturing and services are complex in the sense that there are precedence constraints enforcing minimum or maximum time lags between activities, more than one unit or type of scarce resource is required for processing an activity, capacity of resources is changing over time and complicated objective functions such as net present value have to be taken into account. The theory of resource-constrained project scheduling offers powerful modeling and solution techniques in order to address these kind of problems. The module empowers students to apply the main modeling and solutions concepts in order to successfully addressing real-world scheduling problems. The module is divided into four main parts which relate to different modelling concepts. Within each part the modelling concept, a linear programming formulations, heuristic and metaheuristic approaches as well as applications will be addressed. Next to its practical relevance, the module serves as a good starting point in order to undertake a master-thesis or a PhD-thesis.
• Scheduling activities with general precedence constraints
o Linear Program formulation
o Network flow algorithms for scheduling activities with general precedence constraints: Label correcting algorithm and Floyd-Warshall algorithm
o Applications
• Scheduling activities with renewable resource constraints: The Resource-constrained project scheduling problem
o Linear program formulations
o Special cases
o Heuristics and Metaheuristics
o Applications
• Scheduling activities with multiple modes, renewable and nonrenewable resource constraints: The Multi-mode resource-constrained project scheduling problem
o Linear program formulation
o Special cases
o Heuristics and metaheuristics
o Applications
• Scheduling activities with renewable resource constraints and stochastic durations: The stochastic resource-constrained project scheduling problem
o Heuristics and metaheuristics
o ApplicationsScheduling is about planning the timing of activities subject to scarce resources such as machines in order to fulfill an objective such as minimizing the flow time in the best possible way. Many scheduling problems in manufacturing and services are complex in the sense that there are precedence constraints enforcing minimum or maximum time lags between activities, more than one unit or type of scarce resource is required for processing an activity, capacity of resources is changing over time and complicated objective functions such as net present value have to be taken into account. The theory of resource-constrained project scheduling offers powerful modeling and solution techniques in order to address these kind of problems. The module empowers students to apply the main modeling and solutions concepts in order to successfully addressing real-world scheduling problems. The module is divided into four main parts which relate to different modelling concepts. Within each part the modelling concept, a linear programming formulations, heuristic and metaheuristic approaches as well as applications will be addressed. Next to its practical relevance, the module serves as a good starting point in order to undertake a master-thesis or a PhD-thesis.
• Scheduling activities with general precedence constraints
o Linear Program formulation
o Network flow algorithms for scheduling activities with general precedence constraints: Label correcting algorithm and Floyd-Warshall algorithm
o Applications
• Scheduling activities with renewable resource constraints: The Resource-constrained project scheduling problem
o Linear program formulations
o Special cases
o Heuristics and Metaheuristics
o Applications
• Scheduling activities with multiple modes, renewable and nonrenewable resource constraints: The Multi-mode resource-constrained project scheduling problem
o Linear program formulation
o Special cases
o Heuristics and metaheuristics
o Applications
• Scheduling activities with renewable resource constraints and stochastic durations: The stochastic resource-constrained project scheduling problem
o Heuristics and metaheuristics
o Applications","The topics will be treated based on book chapters and papers in the scientific journals. Students are advised to prepare for the lecture by reading these material ahead of class. The content will be presented by the lecturer and discussed with the students. Then, students have to prepare applications of the approaches by solving small cases which will be discussed afterwards. The cases will be helping students to understand the problems addressed and the solution approaches provided. In order to empower students to implement the approaches in practice students will undertake two assignments. In the first assignment students implement an approach (exact procedure or heuristic) by using a programming language such as JAVA. In the second assignment students implement a linear programming model with the modelling language OPL and the solver CPLEX. The assignments will be provided at the beginning of the course giving students some time in order to undertake them . During the time of working at the assignments students can consult the teaching assistant in the exercise for help. In order to empower students to address problems not treated in class, students have to select and present a problem and an associated solution approach from the literature in class.","Slides, book chapters and papers, will be electronically made available in moodle.","•	Brucker, P. and Knust, S. Complex Scheduling. GOR Publications. Springer, Berlin, 2. edition, 2012
•	Schwindt, C. and Zimmermann J. editors. Handbook on Project Management and Scheduling Vol. 1. Springer, Heidelberg, 2015.
•	Schwindt, C. and Zimmermann J. editors. Handbook on Project Management and Scheduling Vol. 1. Springer, Heidelberg, 2015.
•	Neumann, K., Schwindt, C.and Zimmermann, J.. Project Scheduling with Time Windows and Scarce Resources. Springer, Heidelberg 2. edition, 2003.",36,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/812017/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000836,Advanced Planning in Supply Chains - Illustrating the concepts and methdology using SAP IBP,6.0,S,Always,"Grunow, Martin",Chair of Production and Supply Chain Management (Prof. Grunow),-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module assessment consists of written exam (90 minutes) (50%). By answering the questions in the exam students show that they are able to understand and explain the concepts of hierarchical planning. Furthermore they show that they are able to apply these concepts in supply chain management and to relate them to practical problems. Furthermore students show their ability to develop and apply quantitative approaches with SAP APO for different planning problems.
Additionally, two mid-term assignments are held (50%). 
The mid-term assignment takes place in the form of two assignments. For each assignment, the students must solve 5 to 10 exercises. These exercises cover various theoretical questions, development of mathematical models, applications of heuristics, as well as implementation in relevant software tools. Hereby, the students demonstrate that they are able to model and solve complex planning problems occurring in supply chain management using standard software. The students hand in their solutions in the form of slides (around 40 to 60 slides per assignment). The assignments are subsequently presented in class, in which each student is asked to present his/her solutions to some of the exercises (approximately 5 minutes per student per assignment). Furthermore, students are expected to participate in the discussion of the solutions.",Yes,No,"It is expected that participants have an interest in practical problems of production planning, scheduling and logistics, and the quantitative modelling of business problems. Participants should be familiar with Operations Research (OR) techniques.

The modules ""Management Science” and “Production and Logistics” or similar modules at other universities are a prerequisite.

It is strongly advised that the participants have previously taken part in the modules ""Basics of Advanced Planning and Supply Chain Management"" and ""Modelling, Optimization and Simulation in Operations Management"" or similar modules at other universities.","After the module students will be able to:
• Know the concepts and methodologies used in advanced planning
• Apply the quantitative techniques used advanced planning for supply chain management
• Understand the structure and methodology used in commercial Advanced Planning Systems (APS) such as SAP APO
• Understand the interdependence of planning decisions made on different levels of the planning hierarchy
• Model practical planning problems with SAP APO
• Use and develop an advanced planning methodology for solving real-life problems in demand planning, supply network planning, production planning and detailed scheduling, available-to-promise, deployment and transportation, also involving several levels of the decision hierarchy","Todays business is characterized by supply networks comprising different partners (e.g. suppliers, distribution and retail centers, plants, customers). Activities within supply networks have to be well coordinated in order to avoid excessive inventories, inefficient capacity utilization and poor customer service.

Over the recent years so-called Advanced Planning and Scheduling (APS) systems have emerged which complement traditional ERP systems. Their major characteristics are the use of mathematical optimization techniques and the integration into comprehensive supply chain management concepts. In this teaching module we will look more closely at SAP's advanced planning tool APO and use a case from the food industry, the fruit juice producer Frutado, to illustrate how integrated planning over various modules and decision levels can be realized.

Content:
1. The Frutado case
2. Hierarchical Planning and the Supply Chain Planning Matrix
3. SAP APO - Module Matrix and General Principles
4. Demand Planning
5. Supply Network Planning
6. Production Planning and Detailed Scheduling
7. Deployment and Transportation Load Builder
8. Transportation Planning and Vehilce Scheduling
8. Global Available-to-PromiseTodays business is characterized by supply networks comprising different partners (e.g. suppliers, distribution and retail centers, plants, customers). Activities within supply networks have to be well coordinated in order to avoid excessive inventories, inefficient capacity utilization and poor customer service.

Over the recent years so-called Advanced Planning and Scheduling (APS) systems have emerged which complement traditional ERP systems. Their major characteristics are the use of mathematical optimization techniques and the integration into comprehensive supply chain management concepts. In this teaching module we will look more closely at SAP's advanced planning tool APO and use a case from the food industry, the fruit juice producer Frutado, to illustrate how integrated planning over various modules and decision levels can be realized.

Content:
1. The Frutado case
2. Hierarchical Planning and the Supply Chain Planning Matrix
3. SAP APO - Module Matrix and General Principles
4. Demand Planning
5. Supply Network Planning
6. Production Planning and Detailed Scheduling
7. Deployment and Transportation Load Builder
8. Transportation Planning and Vehilce Scheduling
8. Global Available-to-Promise","The module consists of a lecture with integrated exercise sessions.
During the lecture part of the contents are delivered through presentations and talks. The students are inspired to improve the acquired knowledge by studying the suggested literature, compiling reports and giving presentations. In the exercise sessions the students apply the acquired knowledge by solving exercises and working on a large scale SAP APO case study.","Presentations, scriptum, handouts, cases and solutions","Stadtler, H., Fleischmann, B., Grunow, M., Günther, H.-O., Meyr, H., Advanced Planning in Supply Chains Illustrating the Concepts Using an SAP APO Case Study, Berlin et al., Springer, ISBN 978-642-24214-4",37,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/614770/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WIB01832,Advanced Topics in Innovation & Entrepreneurship,6.0,-,Always,"Henkel, Joachim",Chair of Technology and Innovation Management  (founded by Dr. Theo Schoeller) (Prof. Henkel),-,Master,-,Innovation and Technology Management in Practice,one semester,summer semester,English,-,180.0,60.0,120.0,"The grading is based on laboratory assignment. The assignments consist of 4 individual written case reports (8 pages, 30%), a group presentation of one of the cases (60 minutes, 50%) and the oral discussion of the case presentation of another group of students (10 minutes, 20%). 
With the case reports students individually proof that they apply their gained knowledge to real life management cases. They also show their ability to evaluate strategic innovation and technology management decisions based on complex case studies. With the discussion of another students’ case presentation they show their ability to objectively evaluate and analyze their own and others work. Moreover, they demonstrate their ability to evaluate management decisions in the light of more general company and industry dynamics. With the presentation of their own case students show, that they are able to present in a systematic and structured way. They demonstrate that they are able to analyze complex problems and to identify their essential core in a concise and logical fashion.
Students are graded individually based on their performance in the different assignments.",Yes,No,"basic understanding of innovation management is beneficial (e.g., through Technology and Innovation Management: Introduction), but not required","In the seminar, students will
- acquire detailed knowledge of selected topics in innovation and technology management,
- apply their knowledge to real life management cases,
- evaluate strategic innovation and technology management decisions based on the presented case-studies. 
Students will also learn to describe, elaborate and critically discuss management decisions in innovation management both in written and oral form. Specifically, students will be able to summarize and demonstrate complex managerial problems in a concise and logical manner. Moreover, students are able to discuss and elaborate on theses problems based on questions by the audience.","The module covers the several key topics of innovation and technology management in high-technology corporations based on a mix of lectures and in-depth case-studies.

The topics covered during the module include:
- Innovation Strategy and Market Dynamics
- R&D Organization
- Innovation Projects, Lead-User Method
- Strategic Intellectual Property Management
- Modular Product and Platform ManagementThe module covers the several key topics of innovation and technology management in high-technology corporations based on a mix of lectures and in-depth case-studies.

The topics covered during the module include:
- Innovation Strategy and Market Dynamics
- R&D Organization
- Innovation Projects, Lead-User Method
- Strategic Intellectual Property Management
- Modular Product and Platform Management",The module consists of a seminar. Teaching methods include lecture and case-based teaching. The seminar is designed in an interactive format that promotes intensive classroom discussions.,Presentation slides,relevant reading will be distributed during the seminar,38,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/586422/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001111,Applied Strategy and Organization: Strategies for international Corporations,6.0,-,until Winter semester 2024/25,"Welpe, Isabell",Chair of Strategy and Organization (Prof. Welpe),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The module examination is an exercise. This will be an E-Test via Moodle. Open questions measure to what extent students know strategies of international technology corporations, in particular with regard to internationalization and digitalization, and to what extent they understand different theories and methods in the field of strategic management, relevant factors for internationalization processes, and strategic decision-making processes. By answering questions regarding hypothetical, practical scenarios students demonstrate that they are able to understand the application of the learned theories and methods to real decision-making processes in companies.

Students can achieve 90 points in the test.",Yes,No,,"Upon successful completion of this module, students are able:
•	to remember the most important strategies of international technology corporations to deal with challenges of the world economy in times of globalization and digitalization.
•	to compare different theories and methods in the field of strategic management.
•	to understand the relevant factors for internationalization processes.
•	to discuss different theories and methods in the field of strategic management based on real scenarios from practice.
•	to argue how managers should make strategic decisions.
•	to understand past decision-making processes of international technology corporations with regard to, for example, market entry decisions, cost calculations for internationalization strategies, business development plans, and global technology trends.","The module consists of two lectures in which board members of large German companies provide practical insights into the field of strategic management. 
•	Applied Strategy and Organization: Strategy in the Global Market Place
Prof. Rupert Stadler (CEO Audi AG and board member of the Volkswagen AG) introduces students to the topic of strategy in the global market place. The substantive focus is on the vision, mission, and goal of the Audi Strategy 2020; on the internationalization strategy using the example of the market entry in China; on the future of mobility; as well as principles of strategy planning and execution. 
•	Applied Strategy and Organization: Corporate Strategies for Internationalization and Digital Transformation
Prof. Dr. Axel Stepken (CEO TÜV SÜD AG) discusses internationalization strategies in companies and the topic of transformation through digitalization. Based on theoretical foundations and his own practical experience, he illustratively teaches students internationalization and digitalization strategies for companies. The lecture covers relevant factors for internationalization processes, including growth factors, strategies, corporate culture, leadership, organizational complexity as well as knowledge transfer. These factors are discussed on the basis of changing business conditions that result from digitalization.The module consists of two lectures in which board members of large German companies provide practical insights into the field of strategic management. 
•	Applied Strategy and Organization: Strategy in the Global Market Place
Prof. Rupert Stadler (CEO Audi AG and board member of the Volkswagen AG) introduces students to the topic of strategy in the global market place. The substantive focus is on the vision, mission, and goal of the Audi Strategy 2020; on the internationalization strategy using the example of the market entry in China; on the future of mobility; as well as principles of strategy planning and execution. 
•	Applied Strategy and Organization: Corporate Strategies for Internationalization and Digital Transformation
Prof. Dr. Axel Stepken (CEO TÜV SÜD AG) discusses internationalization strategies in companies and the topic of transformation through digitalization. Based on theoretical foundations and his own practical experience, he illustratively teaches students internationalization and digitalization strategies for companies. The lecture covers relevant factors for internationalization processes, including growth factors, strategies, corporate culture, leadership, organizational complexity as well as knowledge transfer. These factors are discussed on the basis of changing business conditions that result from digitalization.","In the course of lectures, theoretical foundations and concepts are introduced and subsequently exemplified with case studies. The combination of lecturer talks and case studies enables students to learn about the most important strategies of international technology corporations. Moreover, it enables students to learn how to discuss the introduced theories and methods of strategic management on the basis of real scenarios from practice and to understand how managers of international technology corporations make strategic decisions. The practical relevance is strengthened by excursions to the lecturers’ companies (e.g., Audi AG, Ingolstadt). Additional scientific literature helps students to follow-up on and consolidate the content of the lecture slides and case studies.","Slides, case studies, scientific literature","- „Strategic Management“ by Johnson et al. (2016) 
- Ansoff, HI (1970). Corporate Strategy: An Analytic Approach to Business Policy for Growth and Expansion. New York: Penguin Books.",39,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1108748/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001472,Applied Strategy and Organization: Strategies for international Corporations,3.0,-,from Summer semester 2025,"Welpe, Isabell",Chair of Strategy and Organization (Prof. Welpe),-,Master,-,-,one semester,winter/summer semester,English,-,90.0,30.0,60.0,"The module examination consists of an exercise component, conducted as an e-test in Moodle (60 min.). Single-choice, multiple-choice, and drag-and-drop questions assess the extent to which students are familiar with the strategies of international technology corporations, particularly regarding internationalization and digitalization. Additionally, the test evaluates their understanding of various theories and methods of strategic management, key factors influencing internationalization processes, and strategic decision-making processes.
By answering questions related to hypothetical and practical scenarios, students demonstrate their ability to apply the learned theories and methods to real-world decision-making processes in businesses. The test allows students to earn a total of 90 points.",Yes,No,none,"After successfully completing the module:
Students are familiar with the key strategies employed by international technology corporations to address the challenges of the global economy in times of globalization and digitalization.
Students are able to compare and contrast various theories and methods from strategic management.
Students understand the factors relevant to internationalization processes.
Students are capable of discussing different theories and methods of strategic management in the context of real-world scenarios.
Students can articulate how leaders should make strategic decisions.
Students are able to analyze how decision-making processes in international technology corporations have been carried out in the past, e.g., regarding market entry decisions, cost calculations for internationalization strategies, business development plans, and global technological trends.","The module consists of one lecture in which a board member of a major German company provides students with practical insights into the field of strategic management.

Applied Strategy and Organization: Internationalization Strategies in Companies and Transformation through Digitalization
Prof. Dr. Axel Stepken (Chairman of the Board of Management of TÜV SÜD AG) covers internationalization strategies in companies and the topic of transformation through digitalization in his lecture. Drawing on theoretical foundations and his own practical experience, he provides students with vivid insights into internationalization and digitalization strategies for companies. His lecture addresses factors relevant to internationalization processes, including growth drivers, strategies, corporate cultures, leadership, organizational complexity, and knowledge transfer. These factors are particularly discussed in the context of changing business conditions due to digitalization.The module consists of one lecture in which a board member of a major German company provides students with practical insights into the field of strategic management.

Applied Strategy and Organization: Internationalization Strategies in Companies and Transformation through Digitalization
Prof. Dr. Axel Stepken (Chairman of the Board of Management of TÜV SÜD AG) covers internationalization strategies in companies and the topic of transformation through digitalization in his lecture. Drawing on theoretical foundations and his own practical experience, he provides students with vivid insights into internationalization and digitalization strategies for companies. His lecture addresses factors relevant to internationalization processes, including growth drivers, strategies, corporate cultures, leadership, organizational complexity, and knowledge transfer. These factors are particularly discussed in the context of changing business conditions due to digitalization.","In the lecture, theoretical foundations and concepts are initially presented and subsequently illustrated through case studies. By combining lectures and case studies, students learn both the key strategies of international technology corporations and the theories and methods of strategic management. Additionally, they acquire the ability to discuss the presented theories and methods in the context of real-world scenarios and to understand the strategic decision-making processes of leaders in international technology corporations.
. Supplementary literature enables students to review and deepen the content of the lecture slides and case studies.","Slides, case studies, scientific literature","„Strategic Management“ by Johnson et al. (2016)
Ansoff, HI (1970). Corporate Strategy: An Analytic Approach to Business Policy for Growth and Expansion. New
York: Penguin Books.",40,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4394710/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001090,"Behavioral Pricing: Insights, Methods, and Strategy",6.0,S,Always,"Henkel, Joachim",Chair of Technology and Innovation Management  (founded by Dr. Theo Schoeller) (Prof. Henkel),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The grading is to equal parts based on a research paper (15 pages, 50%) and a presentation (40 minutes, 50%). By writing a research paper students show their ability to understand and explain the differences between classical pricing tools and behavioral pricing. They show their ability to conduct an in depth literature research and apply their understanding of the peculiarities of behavioral pricing. Additionally they show that they are able to analyze and interpret pricing decisions in the light of behavioral pricing decisions.
Furthermore, students have to present their topic in class to show that they are able to explain their gained knowledge to others. They have to prioritize within their material to create a talk that enables the other students to understand the most important parts of the topic.",Yes,No,,"After successful completion of the module Behavioral Pricing, students will be able to understand and explain the differences between classical pricing tools and behavioral pricing. Students will be able to conduct an in depth literature research and apply their understanding of the peculiarities of behavioral pricing in a 15-page term paper. In the module students will learn to analyze and interpret pricing decisions in the light of behavioral pricing decisions.","In this module, classical pricing tools (e.g. conjoint analysis) and approaches will be presented and discussed. In contrast to these, pricing based on insights from “Behavioral Economics” will be introduced.

On the basis of numerous case studies from different sectors (FMCG, client services, capital investments) and markets (B2C versus B2B) methodological implications and strategic options will be developed to examine how “Behavioral Pricing” can be effectively leveraged in practice. Presented topics are among others:
-Non-linear Pricing
-Price Differentiation
-Price Discrimination
-Test Markets
-Price ExperimentsIn this module, classical pricing tools (e.g. conjoint analysis) and approaches will be presented and discussed. In contrast to these, pricing based on insights from “Behavioral Economics” will be introduced.

On the basis of numerous case studies from different sectors (FMCG, client services, capital investments) and markets (B2C versus B2B) methodological implications and strategic options will be developed to examine how “Behavioral Pricing” can be effectively leveraged in practice. Presented topics are among others:
-Non-linear Pricing
-Price Differentiation
-Price Discrimination
-Test Markets
-Price Experiments","The seminar is designed as a „block-seminar” with an extensive introduction to be given at its beginning and several break-out case studies throughout. Furthermore, participants will individually focus on a specific topic which they research, elaborate and present in the course of the seminar. Students are expected to research and study the literature and to intensively deal with the subjects discussed. During the module students are coached and supervised by the lecturer.",PowerPoint,"Basic literature (in addition, further literature about individual topics will be discussed in the seminar):
• Bauer, F. (2010): Pricing beyond the Homo Oeconomicus: Expensive mistakes and profitable opportunities in pricing research. In: ESOMAR ""Best Methodological Paper"". Amsterdam: ESOMAR.
• Caldwell, L. (2012). The psychology of price. How to use price to increase demand, profit and customer satisfaction. Surrey: Crimson Publishing.
• Poundstone, W. (2010). Priceless: the myth of fait value (and how to take advantage of it). New York: Hill and Wang.
• Smith, T. J. (2011). Pricing Strategy: Setting Price Levels, Managing Price Discounts and Establishing Price Structures. Cengage Learning.",41,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1021421/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001214,"Case Study Seminar in Managing business models, growth, and disruption",6.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,"Cases in managing business models, growth, and disruption",one semester,winter semester,English,-,180.0,60.0,120.0,"This module is examined via exercises (“Übungsleistung”), using four elements to assess the different learning goals of this course. 

- Oral, individual: 50%. For each session of class, you will be given in advance a set of question to prepare. We will assess your contributions to solving these question in class to see whether you can define, explain, and apply key  elements of the subject matter (discussion of readings); describe, compare, and appraise business model innovations and firm growth for a given situation (teaching case study discussions); and design new business models and/or develop a growth strategy (exercises). Students do not have to be active or even present in every session to achieve full marks; given to be defined circumstances and instructor permission, students may also submit written solutions prior to class as a basis of grading
- Written, individual: 10%. At the end of the course, you will submit an individual reflection paper, highlighting one key learning in this course, so as to show that you can distinguish the newly learned theories of organizations from previously learned perspectives
- Written, collective: 20%. As a group, you assess a firm to showcase that you can interpret, classify, and assess the conduct and performance of any firm
- Oral, collective: 20%: Drawing on the same firm as for the group paper, you will create a poster presentation to highlight the viability of that business model design for the future, to show that you can evaluate how environmental change may affect existing business model designs and theories",Yes,No,"English. Given the highly interactive nature of the module (entirely in English), students should feel comfortable expressing their opinion and interacting in English. Therefore very good written and spoken English language skills are required. 

While there are no formal perquisites to attend this course, we very strongly recommend that you have previously attended an introductory course on entrepreneurship (such as ""Introduction to Entrepreneurship"") and/or strategy/innovation (such as ""Introduction to Strategic and/or Innovation Management”). These introductory courses should have given you some first insights into what business models are, how firms grow, and why innovation is so important. Understanding of the start-up scene, its terminology, and the strategic meaning of entrepreneurship to the economy, will be similarly helpful; courses on HR, marketing, or finance most likely not. While we will not block you from joining the course per se, we want to clearly point out that we will not go back to re-explain some of the first principles taught in such courses, but we will assume that you know them, or freshen up on them on your own time.","Knowledge-related outcomes
Upon completion of this module, students will be able to:
- Define, explain, and apply in practice key theories related to business models, growth, and disruptive innovation
- Interpret, classify, and assess the conduct and performance of any entrepreneurial firm
- Describe, compare, and appraise different existing business model solutions for a given situation
- Distinguish the newly learned theories of business models, firm growth, and disruption from previously learned perspectives
- Evaluate how environmental change may affect existing business models and theories
- Compose new business models

Skill-related outcomes
- Improve diagnostic and analytical skills (i.e., structured problem-solving)
- Build up critical thinking and interpretation skills
- Enhance verbal and argumentation skills via presentations and group discussions","How, when, and why do firms grow and innovate? Why do they use certain revenue models but not others? What are the implications of focusing on only certain revenue streams? How do firms innovate their businesses without coming up with technlogical innovations? And how shall we expect that to change in the future? Is there anything we can learn about firms of the past—irrespective if they are real or fictional—that will help us design better business models to solve the problems of today, or leverage future opportunities such as the Internet of Things, Blockchain, robotics, artificial intelligence, and so on?

This lecture introduces students to theories of business model, firm growth, and disruptive innovation as well as their relevance to practice. Based on key readings in strategy, entrepreneurship, and innovation, newspaper and magazine articles, and case studies, students will learn about why and how business model innovations happen and how firms grow, use that knowledge to analyze firms and industries and showcase their versatility in dissecting firms in a poster competition. As a consequence, this lecture will equip students with a thorough understanding of why firms innovate and grow, are run the way they are run, and how they may change – or not – in the future. Hence, students will be able to comment and analyze on existing business models and ideally capable of becoming innovative business model designers. 

Hence, topics include, but are not limited to:
- What is (not) a business model (innovation)?
- What do we mean by value creation and value capture?
- The role of industry, strategy, and organization structure for firm growth
- Theoretical approaches that explain business model innovation and firm growth
- When and why is disruptive disruptive?
- Innovation and growth management as search
- Imprinting and path dependency
- Disruption by/for start-ups vs. established firms
- Growing organizations and their challenges
- Open business modelsHow, when, and why do firms grow and innovate? Why do they use certain revenue models but not others? What are the implications of focusing on only certain revenue streams? How do firms innovate their businesses without coming up with technlogical innovations? And how shall we expect that to change in the future? Is there anything we can learn about firms of the past—irrespective if they are real or fictional—that will help us design better business models to solve the problems of today, or leverage future opportunities such as the Internet of Things, Blockchain, robotics, artificial intelligence, and so on?

This lecture introduces students to theories of business model, firm growth, and disruptive innovation as well as their relevance to practice. Based on key readings in strategy, entrepreneurship, and innovation, newspaper and magazine articles, and case studies, students will learn about why and how business model innovations happen and how firms grow, use that knowledge to analyze firms and industries and showcase their versatility in dissecting firms in a poster competition. As a consequence, this lecture will equip students with a thorough understanding of why firms innovate and grow, are run the way they are run, and how they may change – or not – in the future. Hence, students will be able to comment and analyze on existing business models and ideally capable of becoming innovative business model designers. 

Hence, topics include, but are not limited to:
- What is (not) a business model (innovation)?
- What do we mean by value creation and value capture?
- The role of industry, strategy, and organization structure for firm growth
- Theoretical approaches that explain business model innovation and firm growth
- When and why is disruptive disruptive?
- Innovation and growth management as search
- Imprinting and path dependency
- Disruption by/for start-ups vs. established firms
- Growing organizations and their challenges
- Open business models","The largest share of this course will be co-developed by the course participants and the instructor(s) through discussions of course materials and newspaper articles, as well as short presentation. In such sessions, the lecturer(s) will help facilitate and guide the course discussion by taking notes on whiteboards. Students are strongly encouraged to take notes, to facilitate cumulative learning across sessions of class, which will also be faciliated by the instructure. Specific topics and definitions may be presented using PowerPoint slides. We will frequently use the hall in the Entrepreneurship Center for exercises, in which students will apply and inductively further develop content. Finally, a large share of learning will occur through students preparing individually and in groups for the in-class session. Techniques to do so will be introduced in the first session of class. Information on what materials to prepare will be provided for each course session.","The largest share of this course will be co-developed by all of us through discussions of course materials and newspaper articles, as well as short presentations. In such sessions, we will help facilitate and guide the course discussion by taking notes on whiteboards. We strongly encourage you to take notes yourselves, and to consider not bringing laptops (they are not as bad as phones [NO PHONES!], but will still inhibit your learning). Specific topics and definitions may be introduced using PowerPoint slides. We may also use the hall in the Entrepreneurship Center for exercises. Finally, note how a large share of learning will occur through you preparing individually and in groups for the in-class session. Techniques to do so will be introduced in the first session of class.","Specific & mandatory readings readings will be specified in the beginning of the course. 
Students may also find the following books helpful for this module in general. However, there is no obligation whatsoever to read them to pass this module successfully: 
- Aldrich, H.E. and Ruef, M. (newest edition). Organizations Evolving. Sage",42,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1737567/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000091,Corporate Finance,6.0,S,Always,"Kaserer, Christoph",Chair of Financial Management and Capital Markets (Prof. Kaserer),-,Bachelor,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The grading is based on an open-book e-test with a duration of 90 minutes. This exam consists of theoretical questions regarding corporate finance (e.g. characteristics of real options, when to apply which company valuation method, theoretical considerations on the optimal capital structure) as well as performing applied computations (e.g. valuing real options, computing equity values by discounting cash flows, adjusting firm risk measures for leverage) . The theoretical questions are mainly based on the lecture whereas the calculations are mainly based on the tutorial.",Yes,No,"The student should have a solid understanding of finance fundamentals (discounting cash flows, risk, CAPM). These topics are covered in the course “Investitions- und Finanzmanagement” or in other introductory finance classes.","After successful completion of the module, students will be able to explain the most common concepts in corporate finance such as real and financial options, company valuation, market efficiency and dividend and leverage policies. Furthermore, they are able to discuss critically these topics. Finally, they will be able to apply the above concepts and decide on corporate financial policies as well as evaluate financial and real options and companies (e.g., by using option theory or DCF methods).","The module covers fundamental concepts in corporate finance. This knowledge is important as a fundament for advanced courses in corporate finance as well as a career in the investment banking or in a corporate treasury department.

• Options: Basic understanding, put call parity, binomial and Black-Scholes option pricing, equity as call option
• Real options: Identification and binomial pricing
• Valuation: Introduction to DCF methods, multiples methods and applications
• IPO: Empirical studies of IPO costs, IPO process
• Capital structure: WACC under OPM, CAPM and MM, trade off theory of debt, agency theory of debt, pecking order theory of debt
• Efficient markets: Definitions, modeling, empirical approaches and results
• M&A: Explanations of wealth effects of M&A, explanations for conglomerates, Empirical results on
other forms of ownership decreases and change (divestitures, carve outs, spin offs, tracking stock,
split ups, LBOs)
• Dividend policy: Theories of optimal dividend policy, Empirical evidenceThe module covers fundamental concepts in corporate finance. This knowledge is important as a fundament for advanced courses in corporate finance as well as a career in the investment banking or in a corporate treasury department.

• Options: Basic understanding, put call parity, binomial and Black-Scholes option pricing, equity as call option
• Real options: Identification and binomial pricing
• Valuation: Introduction to DCF methods, multiples methods and applications
• IPO: Empirical studies of IPO costs, IPO process
• Capital structure: WACC under OPM, CAPM and MM, trade off theory of debt, agency theory of debt, pecking order theory of debt
• Efficient markets: Definitions, modeling, empirical approaches and results
• M&A: Explanations of wealth effects of M&A, explanations for conglomerates, Empirical results on
other forms of ownership decreases and change (divestitures, carve outs, spin offs, tracking stock,
split ups, LBOs)
• Dividend policy: Theories of optimal dividend policy, Empirical evidence","There is a weekly lecture and tutorial. During the lecture, the content is presented with the help of slides and computations on a tablet computer. Students can gain a deeper understanding by solving the weekly problem sets. The solution to these problem sets is presented each week during the tutorial.",Presentation slides and white board.,"Required: 
• Berk, DeMarzo (2014, 3/E): Corporate Finance
• Copeland, T. E./ Weston, J. F./ Shastri, K. (2005): Financial Theory and Corporate Policy, USA, Addison Wesley, 4th International Edition.

Further recommended readings will be given in the lecture.",43,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261081/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000258,Empirical Research in Economics and Management,6.0,S_M,Always,"Pachur, Thorsten",Chair of Behavioral Research Methods (Prof. Pachur),"In times of increasing political populism, online social networks, and the spreading of “alternative facts”, it is ever more important that citizens can judge the reliability of information. This theme is repeatedly addressed in the lecture series, in particular in the module “Responsible Citizenship and Empirical Research”.",Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The final written exam (120 minutes) assesses students' understanding of basic and advanced issues of empirical research methods and data analysis in management and economics. Students have to demonstrate that they understand the different steps of developing a research hypothesis, develop a research design, planning and conducting an empirical study (including sampling of participants), and analyze and interpret the obtained data. Further, the exam tests knowledge of basic and advanced techniques of data analysis and when each of these techniques are applicable. The exam is 100% based on multiple-choice questions. Students may use a non-programmable calculator for the exam.The exam includes equally contents of the lecture and from the exercise.",Yes,No,none,"The acquired skills are important for conducting a Master's thesis but are equally important to understand and analyze data in their future career and in everyday life. After the successful participation in the module, students will be able to understand key methods of empirical research, including both basic and more advanced aspects of research design, data collection, data analysis, and interpretation. Students will learn how to understand and analyze empirical research and be in a position to critically evaluate published findings. Students will learn to apply basic methods to empirical data. Students will learn the basics of how to plan, set up, and conduct an empirical research project. Finally, students will learn to interpret empirical research results.","This module prepares students for conducting empirical research (e.g., for their Master's thesis) by introducing them to basic and advanced topics of research methodology and data analysis. The topics covered in the module include: research design; hypothesis testing; simple and multiple regression; logistic regression; factor analysis; cluster analysis; conjoint analysis; open science. The acquired skills are important for students' Master's Thesis but are equally important to understand and analyze empirical data and in their future career and everyday life.This module prepares students for conducting empirical research (e.g., for their Master's thesis) by introducing them to basic and advanced topics of research methodology and data analysis. The topics covered in the module include: research design; hypothesis testing; simple and multiple regression; logistic regression; factor analysis; cluster analysis; conjoint analysis; open science. The acquired skills are important for students' Master's Thesis but are equally important to understand and analyze empirical data and in their future career and everyday life.","The module consists of lectures and exercises.The lectures serve to build a thorough theoretical and conceptual understanding of the scientific issues and methods.In the exercises, students learn to practically apply the methods that were discussed in the lectures in concrete analyses and interpretations.",Lecture slides are available via Moodle.,"Bell, E., Bryman, A., &; Harley, B. (2022). Business research methods (6th ed.). Oxford University Press; Field, A., Miles, J., & Field, Z. (2012). Introduction to statistics using R. Sage Publications;  Goss-Sampson, M. A. (2022). Statistical analysis in JASP 0.16.1: A guide for students; Backhaus, K., Erichson, B., Gensler, S., Weiber, R., & Weiber, T. (2021). Multivariate analysis: An application-oriented introduction. Springer.",44,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/450708/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001166,Entrepreneurial Prototyping,6.0,S,Always,"Breugst, Nicola",Associate Professorship of Entrepreneurial Behavior (Prof. Breugst),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The grading is based on a research paper (10-15 pages, 75% of grade) and a presentation (15 min + 15 min interaction with the audience, 25% of grade).  The research paper and the presentation will be conducted in groups formed in the introductory session. An assessment sheet filled in by the students and handed in with the research paper clarifies students' individual contribution to the research paper. As every student will present in the final presentation, every students' contribution is clearly identifiable and appraisable, thus, students can be graded individually. Based on the research paper it is examined to which extent students are able to elaborate complex topics in the field of entrepreneurship research. The research paper is a means to measure how students were able to understand previous academic literature in the field of entrepreneurship, how they achieved to define their own research question, collect and analyze data, and provide a relevant, novel, and interesting contribution to entrepreneurship research. A final presentation measures students' communicative competencies proves if students are able to present their findings in a comprehensible, precise and demonstrative way as well as whether they are able to perform powerfully and professionally.",Yes,No,none,"Upon successful completion of this module, students will be able to read and understand related literature on the topic of entrepreneurship. Furthermore, students are able to create their own research paper. Additionally, they will be able to present their paper and summarize their findings. Moreover, students learn how to lead a discussion on their topic. Finally, they understand entrepreneurial processes.
At the end of the module, students will be able to:
- explain entrepreneurship concepts related to a specific topic.
- discuss current topics within the field of entrepreneurship.
- apply previously discussed approaches to topic specific issues within the field of entrepreneurship.
- evaluate these approaches and their outcomes.
- develop suitable approaches for specific entrepreneurship issues.","The module deals with different topics within entrepreneurship research such as

- discovering entrepreneurial role models, this might include to explore
o links between role models and entrepreneurial intentions
o reasons for the choice of the entrepreneurial career
- psychology of entrepreneurship, this might include to explore
o personality dimensions of entrepreneurs
o entrepreneurial cognition
- entrepreneurial leadership, this might include to explore
o behavioral forms of leadership
o creating and managing innovative organizations
- ideation and venture creation, this might include to explore
o the process of obtaining creative ideas
o the process model of entrepreneurial venture creation
- venture growth, this might include to explore
o how new ventures grow and where growth occurs
o different impact factors on new venture growth
- internationalization and strategic entrepreneurship, this might include to explore
o the speed of entrepreneurial internationalization
o enabling forces of technology, competition, perceptions, knowledge and networks
The module provides students with deepening insights into entrepreneurship literature. Besides writing a seminar paper, this involves presenting their final results.The module deals with different topics within entrepreneurship research such as

- discovering entrepreneurial role models, this might include to explore
o links between role models and entrepreneurial intentions
o reasons for the choice of the entrepreneurial career
- psychology of entrepreneurship, this might include to explore
o personality dimensions of entrepreneurs
o entrepreneurial cognition
- entrepreneurial leadership, this might include to explore
o behavioral forms of leadership
o creating and managing innovative organizations
- ideation and venture creation, this might include to explore
o the process of obtaining creative ideas
o the process model of entrepreneurial venture creation
- venture growth, this might include to explore
o how new ventures grow and where growth occurs
o different impact factors on new venture growth
- internationalization and strategic entrepreneurship, this might include to explore
o the speed of entrepreneurial internationalization
o enabling forces of technology, competition, perceptions, knowledge and networks
The module provides students with deepening insights into entrepreneurship literature. Besides writing a seminar paper, this involves presenting their final results.","The module consists of an introduction to scientific writing where the topics for each student's research paper will be decided. Topics vary and cover entrepreneurship on an individual (e.g., entrepreneurial decision making, entrepreneurial intentions), team (e.g., entrepreneurial team formation, entrepreneurial exits), or organizational level (e.g., interplay of form, structure, and embeddedness in corporate entrepreneurship).  Based on their topic students prepare their research paper which they will present at the end of the module. Upon prior discussion on different research methods and how to use them, the students will identify and apply a research methodology that best addresses their identified research question, i.e., they can apply empirical research methods (qualitative or quantitative), a literature review, or conduct a conceptual paper. Furthermore, the module involves (group and/or) individual feedback sessions, where students can share their progress and receive feedback. The students are supervised by the instructors of the module who are members the chair. Within the module the topics will be discussed after the final presentations.","MS Office, PowerPoint, Whiteboard, Flipchart","Hisrich, R. D. / Peters, M. P. / Shepherd, D. A.: Entrepreneurship, 8th edition, McGraw-Hill, 2010 (optional)
Obligatory readings will be announced at the course introduction.",45,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1348594/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000984,Entrepreneurship,3.0,-,from Winter semester 2012/13,"Breugst, Nicola",Associate Professorship of Entrepreneurial Behavior (Prof. Breugst),-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The grading is based on a written exam (60 Minutes). The written form of the exam allows a comprehensive assessment of students' knowledge and understanding of the basic principles of entrepreneurship. They will answer questions about the concepts explaining the mindset of entrepreneurial individuals and the management of entrepreneurial firms. They will also answer questions about basic definitions of specific types of entrepreneurship and entrepreneurial behavior. Thus, it is ensured that the students are able to understand important theoretical concepts, such as basic psychological and cognitive processes in entrepreneurial action, the principle of business plans, strategic alliances, or special forms of entrepreneurship, and are able to remember them without any additives. The exam is in the form of multiple choice questions.",Yes,No,,"After the module students will be able to (i) define entrepreneurship and explain its role for the economy and society, (ii) understand basic psychological and cognitive processes in entrepreneurial action, (iii) explain the basics and important concepts of entrepreneurial decision making, (iv) analyze the role of human and social capital of entrepreneurs, (v) understand the consequences of entrepreneurial failure, (vi) describe growth models and growth paths of young ventures, (vii) explain the purpose and elements of a business plan, (viii) understand the importance of entrepreneurial action for the success of existing firms (corporate entrepreneurship), (ix) explain the advantages and disadvantages of strategic alliances, and (x) describe special forms of entrepreneurship (social and sustainability entrepreneurship).","The module introduces students into basic principles of the topic of entrepreneurship from a global and international perspective. Students will be equipped with basic knowledge on:
- definitions, regional aspects, and special forms of entrepreneurship
- entrepreneurial individuals, including their personality, creativity, idea development, cognition, opportunity recognition, decision making, affect, 
- entrepreneurial firms, including their growth strategies, strategic alliances, and resources.
Beyond that, students will engage in break-out group workshops to personally experience the process of opportunity recognition and development. In these workshops they will work in teams and apply concepts from academic literature to real-world entrepreneurial problems. Furthermore, students give presentations to the audience and discuss their results.The module introduces students into basic principles of the topic of entrepreneurship from a global and international perspective. Students will be equipped with basic knowledge on:
- definitions, regional aspects, and special forms of entrepreneurship
- entrepreneurial individuals, including their personality, creativity, idea development, cognition, opportunity recognition, decision making, affect, 
- entrepreneurial firms, including their growth strategies, strategic alliances, and resources.
Beyond that, students will engage in break-out group workshops to personally experience the process of opportunity recognition and development. In these workshops they will work in teams and apply concepts from academic literature to real-world entrepreneurial problems. Furthermore, students give presentations to the audience and discuss their results.","The module will combine several learning methods.
- The basic knowledge as well as real world examples will be provided through the lecture.
- Discussions in the lecture and active participation are encouraged and will contribute to deepen the understanding of the concepts introduced.
- Workshops in smaller groups enable the students to apply (part of) their theoretical knowledge to real-world problems. This format additionally fosters creativity and team work.
- Students will get additional background knowledge from the scientific literature in private reading.","Presentations, exercises, online materials","Hisrich, R. D., Peters, M. P., & Shepherd, D. A. (2010). Entrepreneurship (8th ed.). New York: McGraw-Hill.
Read, S., Sarasvathy, S., Dew, N., Wiltbank, R. & Ohlsson, A.-V. (2010). Effectual Entrepreneurship. New York: Routledge Chapman & Hall.",46,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/759654/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001217,Trade Secret Protection,3.0,-,Always,"Ann, Christoph",Chair of Corporate and Intellectual Property Law (Prof. Ann),-,Master,-,-,one semester,winter/summer semester,German/English,-,90.0,30.0,60.0,"In the final assessment students will need to demonstrate to what extent they have met the learning objectives. This assessment will be held as a written exam of 60 minutes. Students will be asked theoretical questions. This will demonstrate to what extent they have memorized and understood principles of the law of patents and trade secrets. 
Students will also be asked to apply their knowledge to known and fictional cases. This second part demonstrates if students have developed the required legal analytical skills. Students also need to demonstrate their ability to apply their knowledge to fact settings not discussed in the lecture, and to evaluate the legal consequences.",Yes,No,"German Business Law 1 and 2 (WI0000027, WI0000030) or corresponding knowledge.","At the end of this lecture students will be able to,
1. understand the basic principles of trade secret law,
2. grasp the legal framework of business activity
3. analyse legal implications of typical business situations and to identify their options,
4. present the results of their analysis in a written memorandum.","This module provides an introduction to basic concepts of Trade Secret Law.
Topics covered are:
- Economic importance of trade secrets
- Concept of protection of trade secrets and differentation from Intellectual Property rights
- Main risk areas (HR, IT, outsourcing, cooperation, etc.)
- Risk management (legal and actual protection)
- Judicial enforcement of the protection of trade secrets
- Export control and situation in other countriesThis module provides an introduction to basic concepts of Trade Secret Law.
Topics covered are:
- Economic importance of trade secrets
- Concept of protection of trade secrets and differentation from Intellectual Property rights
- Main risk areas (HR, IT, outsourcing, cooperation, etc.)
- Risk management (legal and actual protection)
- Judicial enforcement of the protection of trade secrets
- Export control and situation in other countries","The lecture will cover the theoretical aspects of the module in a discussion with the lecturer. It will also provide the opportunity to work individually or in groups an case scenarios (known and unknown), covering issues of patent law and trade secret law. The purpose is to repeat and to intensify the content discussed in the lecture and to revise and evaluate legal issues from different areas of law in everyday situations. Students will develop the ability to present these findings in a concise and well-structured written analysis.","Reader, presentations (PPT), cases (Including model answers)","Ann/Loschelder/Grosch, Praxishandbuch Know-how-Schutz",47,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1746283/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000979,Inventory Management,6.0,S,Always,"Minner, Stefan",Chair of Logistics and Supply Chain Management (Prof. Minner),-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The grading is based on a written exam (90 minutes) consisting of 4 questions, the participants can choose 3 out of 4. Each question has several parts assessing the different competence levels. In a first theory part, the student has to reproduce knowledge about inventory management concepts. In a second part, different calculation methods need to be applied with given data and the results be analyzed and interpreted. In a third part, the students need to develop ideas and concepts beyond the reproduction of knowledge and application of methods. In order to facilitate calculations and for backup of some statistical formulas, a formula sheet and a pocket calculator can be used.",Yes,No,"The module requires basic knowledge in statistics (discrete and continuous probability distributions) and Excel and the course “Modelling, Optimization, and Simulation” due to extensive use of Mixed-Integer Programming and Simulation methods.","The participants will learn about different concepts in Inventory management and receive the knowledge to apply decision support tools for an effective design and operation of inventory management systems. They will be able to memorize different inventory control rules, identify the right model in different industry environment and be able to reproduce parameter calculations. They will be able to illustrate the impact of cost and service parameters on timing and sizes of replenishment decisions and generalize these finding to more complex multi-echelon and multi-product systems. This fundamental knowledge will enable participants to evaluate, compare and optimize different control systems, revise parameter settings and critically reflect on optional choices. Upon completion of this module, the participants will be able to develop and implement models and methods for new and innovative inventory management problems, e.g. arising in same-day home delivery, car-sharing or reverse logistics applications.","Standard inventory control models and approaches are presented for single- and multi-period dynamic inventory models, multi-echelon models, and multi-product coordinated replenishment problems. Further, different approaches to data driven inventory policies are presented that address the estimation and analysis of model parameters. Case studies and board games are used to motivate these concepts.

Specifically, the module covers the topics:
•	Performance metrics;
•	Lot ­ sizing: EOQ, EPQ, Wagner ­ Whitin;
•	Forecasting: Time series, regression, data analysis, probability distributions;
•	Newsvendor model;
•	Single ­ echelon inventory control: (R,S), (s,Q)­policies and parameter optimization;
•	Multi ­ echelon inventory control: Concepts, lot ­ sizing, safety stock optimization, METRIC;
•	Multi­product models: ELSP, CLSP, DLSP, CSLP, PLSP;
•	Warehouse scheduling, joint replenishment problems;
•	Multi ­ location problems;
•	Sport Obermeyer Case and MIT Beer Distribution Game;
•	Special topics: Perishable items, multi ­ supplier models, lost sales modelsStandard inventory control models and approaches are presented for single- and multi-period dynamic inventory models, multi-echelon models, and multi-product coordinated replenishment problems. Further, different approaches to data driven inventory policies are presented that address the estimation and analysis of model parameters. Case studies and board games are used to motivate these concepts.

Specifically, the module covers the topics:
•	Performance metrics;
•	Lot ­ sizing: EOQ, EPQ, Wagner ­ Whitin;
•	Forecasting: Time series, regression, data analysis, probability distributions;
•	Newsvendor model;
•	Single ­ echelon inventory control: (R,S), (s,Q)­policies and parameter optimization;
•	Multi ­ echelon inventory control: Concepts, lot ­ sizing, safety stock optimization, METRIC;
•	Multi­product models: ELSP, CLSP, DLSP, CSLP, PLSP;
•	Warehouse scheduling, joint replenishment problems;
•	Multi ­ location problems;
•	Sport Obermeyer Case and MIT Beer Distribution Game;
•	Special topics: Perishable items, multi ­ supplier models, lost sales models","The module includes lectures where students obtain knowledge about inventory modeling and optimization techniques. In exercise sessions, the students solve problems with the obtained knowledge, perform optimizations and simulations, interpret the findings and present and discuss their results to the others participants in the classroom. Computer programs are provided to the students who adapt those to determine inventory control parameters and to simulate inventory system performance. Case study and business game sessions give the participants a first hand, interactive experimental experience into the dynamics of inventory systems and real world problems. Guest lectures given by industry professionals supplement the theory parts and give the participants the opportunity to recognize problems, discover interesting challenges for choosing their thesis work and discuss with practitioners.","Literature, Slides, Case studies, Business games, Exercises, Software","• Silver, E.A., Pyke, D.F., Peterson, R. (1998), Inventory  Management and Production Planning and Scheduling, 3rd  edition, Wiley. 
• Axsäter, S. (2006), Inventory Control, 2nd. Ed., Springer. 
• Zipkin, P. (2000), Foundations of Inventory Management, McGraw-Hill.",48,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/737300/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001231,Leadership and Strategy in the 21st Century,3.0,-,Always,"Welpe, Isabell",Chair of Strategy and Organization (Prof. Welpe),-,Master,-,-,one semester,winter/summer semester,English,-,90.0,30.0,60.0,"The examination is performed by a presentation, by which it is proved that the students:
• have intensely studied the scientific literature on a specific topic in the field of leadership.
• are able to apply scientific methods to provide answers to questions in the field of leadership that are relevant to business practice.
• possess presentation and communication skills that enable them to present, in a clear and structured manner, their findings on scientific challenging topics they have worked on independently, and to discuss the applicability of their findings to business practice.",Yes,No,English skills,"Students will know and understand the most important theories on leadership and strategy, current trends in research on leadership and organization, as well as their application in practice.

Students will be able to make connections between theories and empirical research findings in the field of leadership and strategy and their application to practice. They will understand how leadership and strategy works from a practitioner point of view and will be able to integrate these viewpoints with scientific theory.","This class dives into the theory of disruption, change management and people management. It is designed for those who would like to get insights from practicioners while being on top of relevant management literature.This class dives into the theory of disruption, change management and people management. It is designed for those who would like to get insights from practicioners while being on top of relevant management literature.","The class is designed to be very interactive, its success depends on in-class participation and interaction of the students. The teacher will enrich the class with her considerable management and consulting experience.

lecture / discussions / readings / presentations / practitioner workshops","Slides, case studies, scientific literature","Mandatory reading: Clayton Christensen, ""The Innovators Dilemma"", 1997; Martin Reeves, ""The imagination machine"", 2021; John Kotter, ""Managing change: Why transformation efforts fail"", 1995; Herminia Ibarra, ""Act like a leader, think like a leader"", 2015.",49,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1814863/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001218,Patent Protection,3.0,-,Always,"Ann, Christoph",Chair of Corporate and Intellectual Property Law (Prof. Ann),-,Master,-,-,one semester,winter/summer semester,German/English,-,90.0,30.0,60.0,"In the final assessment students will need to demonstrate to what extent they have met the learning objectives. This assessment will be held as a written exam of 60 minutes. Students will be asked theoretical questions. This will demonstrate to what extent they have memorized and understood principles of the law of patents. 
Students will also be asked to apply their knowledge to known and fictional cases. This second part demonstrates if students have developed the required legal analytical skills. Students also need to demonstrate their ability to apply their knowledge to fact settings not discussed in the lecture, and to evaluate the legal consequences.",Yes,No,"German Business Law 1 and 2 (WI0000027, WI0000030) or corresponding knowledge.","At the end of this lecture students will be able to,
1. understand the basic principles of patent law and trade secret law,
2. grasp the legal framework of business activity
3. analyse legal implications of typical business situations and to identify their options,
4. present the results of their analysis in a written memorandum.","This module provides an introduction to basic concepts of patent law. 
Topics covered are:
- subject-matter under protection and prerequisites
- proceedings before the Patent Office
- legal effects of a patent
- the inventor's right to the patent
- assignment and licensing
- enforcing a patent
- termination of a patentThis module provides an introduction to basic concepts of patent law. 
Topics covered are:
- subject-matter under protection and prerequisites
- proceedings before the Patent Office
- legal effects of a patent
- the inventor's right to the patent
- assignment and licensing
- enforcing a patent
- termination of a patent","The lecture will cover the theoretical aspects of the module in a discussion with the lecturer. It will also provide the opportunity to work individually or in groups an case scenarios (known and unknown), covering issues of patent law and trade secret law. The purpose is to repeat and to intensify the content discussed in the lecture and to revise and evaluate legal issues from different areas of law in everyday situations. Students will develop the ability to present these findings in a concise and well-structured written analysis.","Reader, presentations (PPT), cases (Including model answers)","Kraßer/Ann, Patenrecht",50,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1746286/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WIB26001,Social Entrepreneurship Lab,6.0,S,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,SEA:lab,Social Entrepreneurship Lab,one semester,winter/summer semester,German/English,-,180.0,60.0,120.0,"Note: Course in English in the Winter Term, in German in the Summer Term

Final examination consists of two components, each carrying 50% of the final course grade: (1) a 15 minute presentation in the final course meeting and (2) a seminar paper of ca. 22,200 characters due exactly four weeks after the presentation day.

Each team of students will be required to document its constant collaboration with its social startups, to update the course about the progress in several blocked meetings, and to discuss the progress with an assigned coach. The focus of the evaluation will lie on whether and how participants work to develop create solutions to the ventures' problems, and make progress in implementing those successfully. All information gathered by the participants should be collected and presented in a systematic fashion to be able to pass it on to the partnering ventures after the course. In doing so, students will showcase their ability to structure and prioritize information, and communicate this information clearly and effectively so that it is actionable. If no separate final report is handed in, these intermittent documents will be treated as such. Any report should not exceed 22,200 characters. It is to be handed in by precisely four weeks after the final presentation.
The final presentation should last 15 minutes. Its key contents are the purpose and explanation of the problem solutions created by the teams (irrespective of whether the ventures chose to implement them), which are to be communicated understandably to all course participants. Of particular interest is students' understanding of interdependencies between the aspects of their problem-solutions, and their creating of an internally consistent problem-solution that takes those interdependencies into account, which would be a testimony to students' ability to develop their own strategy to found a social venture.",Yes,No,"- Basic understanding of the entrepreneurial process, such as from attending an introductory lecture on the topic, founding experience, or closely following the media on the topic
- Interest in applied, social engagement","Having completed the module, students will be capable of understanding basic elements of the entrepreneurial journey and apply them to the context of social entrepreneurship. In addition, students will be able to evaluate information and alternative pathways for action in the area of social entrepreneurship. Furthermore, students will be able to analyze existing social ventures and develop preliminary alternative designs. Finally, students will be able to hone their social skills and consulting skills.","The SEA:lab was developed to bring together the substantial experience of the Social Entrepreneurship Akademie and three of Munich's universities: the LMU, TUM, and the Hochschule München (HM). The SEA:lab will enable future change-makers to take an essential part during the early stage of social start-ups from the Munich area (such as HIRE.social, social bee, Feierabendglück, reCup, or start2code), to consult them, and to take an active part in their growth. Specifially, participants in the SEA:lab will be tasked to support one social startup (as a team of up to five students) in one crucial problem it is currently facing and to design and possibly implement solution (alternatives) for that issue. To be able to do that, all SEA:lab participants will receive a solid introduction in the topic of social entrepreneurship, including an introduction to the Munich social start-up ecosystem and proven method and tools for this context.

The module will begin with a 1-day blocked seminar, in which key content will be communicated. Furthermore, students will be assigned to team and a start-up there (by the course instructors), and an initial problem definition will be co-designed with the social venture. In their project groups (which cannot be changed after initial assignment), participants will then refine that definition and develop a solution. In each course meeting, they will present their progress, preceded by a meeting with a specifically assigned coach. Further required content will be communicated in these course meetings. The problem solution will be presented to the ventures as well as experts from all participating institutions in the final meeting. 

Das Modul startet mit einer 1‐tä gigen Blockveranstaltung. Dort werden allen Teilnehmenden die nötigen Grundlagen vermittelt, um das Eco-System Social Entrepreneurship zu verstehen. Es werden fünf von der Social Entrepreneurship Akademie ausgewählte Social Start-up Ideen präsentiert. Die Modulteilnehmenden werden in Projektgruppen zur Ausarbeitung von Lösungsansätzen zu den konkreten Herausforderungen der Start ups gematcht. Diese Gruppen werden nach Interesse und Heterogenität gematcht. Finale Entscheidung über die Gruppenzusammensetzung haben die Dozenten. Einmal zusammengestellte Gruppen können nicht mehr gewechselt werden. In den darauffolgenden Wochen werden die Themen individuell von den Teams bearbeitet. Hierzu wird es zwei weitere Blockseminarabende geben, in denen zunächst spezifisches Wissen und Methoden gelehrt werden, welche dann in den Gruppen für die individuelle Social Startup Fragestellung angewendet wird. Erfahrene Mitarbeiter der HM, LMU, TUM und Social Entrepreneurship Akademie begleiten die Projektgruppen und vermitteln den Teilnehmern Social Start-up-relevantes Wissen. In regelmäßigen Treffen werden die Zwischenergebnisse der Projektgruppen den Hochschul-Betreuern präsentiert. Bei der Abschlusspräsentation im Rahmen eines Ergebnisworkshops erhalten die Projektgruppen die Chance, ihre Ergebnisse und Lösungsansätze einer Jury aus Experten der Hochschulen und der Social Entrepreneurship Akademie vorzustellen und Feedback einzuholen.The SEA:lab was developed to bring together the substantial experience of the Social Entrepreneurship Akademie and three of Munich's universities: the LMU, TUM, and the Hochschule München (HM). The SEA:lab will enable future change-makers to take an essential part during the early stage of social start-ups from the Munich area (such as HIRE.social, social bee, Feierabendglück, reCup, or start2code), to consult them, and to take an active part in their growth. Specifially, participants in the SEA:lab will be tasked to support one social startup (as a team of up to five students) in one crucial problem it is currently facing and to design and possibly implement solution (alternatives) for that issue. To be able to do that, all SEA:lab participants will receive a solid introduction in the topic of social entrepreneurship, including an introduction to the Munich social start-up ecosystem and proven method and tools for this context.

The module will begin with a 1-day blocked seminar, in which key content will be communicated. Furthermore, students will be assigned to team and a start-up there (by the course instructors), and an initial problem definition will be co-designed with the social venture. In their project groups (which cannot be changed after initial assignment), participants will then refine that definition and develop a solution. In each course meeting, they will present their progress, preceded by a meeting with a specifically assigned coach. Further required content will be communicated in these course meetings. The problem solution will be presented to the ventures as well as experts from all participating institutions in the final meeting. 

Das Modul startet mit einer 1‐tä gigen Blockveranstaltung. Dort werden allen Teilnehmenden die nötigen Grundlagen vermittelt, um das Eco-System Social Entrepreneurship zu verstehen. Es werden fünf von der Social Entrepreneurship Akademie ausgewählte Social Start-up Ideen präsentiert. Die Modulteilnehmenden werden in Projektgruppen zur Ausarbeitung von Lösungsansätzen zu den konkreten Herausforderungen der Start ups gematcht. Diese Gruppen werden nach Interesse und Heterogenität gematcht. Finale Entscheidung über die Gruppenzusammensetzung haben die Dozenten. Einmal zusammengestellte Gruppen können nicht mehr gewechselt werden. In den darauffolgenden Wochen werden die Themen individuell von den Teams bearbeitet. Hierzu wird es zwei weitere Blockseminarabende geben, in denen zunächst spezifisches Wissen und Methoden gelehrt werden, welche dann in den Gruppen für die individuelle Social Startup Fragestellung angewendet wird. Erfahrene Mitarbeiter der HM, LMU, TUM und Social Entrepreneurship Akademie begleiten die Projektgruppen und vermitteln den Teilnehmern Social Start-up-relevantes Wissen. In regelmäßigen Treffen werden die Zwischenergebnisse der Projektgruppen den Hochschul-Betreuern präsentiert. Bei der Abschlusspräsentation im Rahmen eines Ergebnisworkshops erhalten die Projektgruppen die Chance, ihre Ergebnisse und Lösungsansätze einer Jury aus Experten der Hochschulen und der Social Entrepreneurship Akademie vorzustellen und Feedback einzuholen.","Presentations, discussion, project work, feedback. Each methods will be chosen in accordance with the content to be communicated. For example, new material will be introduced in short presentations by subject matter experts, then discussed in teams or by the entire course, and then applied in the project work. The feedback meetings help to ensure that all materials have been understood and applied correctly (including potential adaptations). These required skills will further be showcased through the final presentation and report, on which additional feedback may be requested.","Presentations, videos, handywork","Garette, B./ Phelps, C./ Sibony, O. Cracked it!: How to solve big problems and sell solutions like top strategy consultants. Palgrave MacMillan, 2018
Martin, L. Design of Business: Why Design Thinking is the Next Competitive Advantage. Harvard Business Press, 2009
Rittel, H. W. & Webber, M. M. 1973. Dilemmas in a general theory of planning. Policy Sciences, 4: 155-169.",51,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1108762/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SG8000160,Sponsorship-linked Marketing (Online-course),6.0,-,from Summer semester 2014,"Königstorfer, Jörg",TUM School of Medicine and Health,-,Master,-,vhb-course,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The module examination consists of a written test (60 min.). The exam is to verify that the students are able to properly select and apply appropriate conceptual bases and methodological procedures (within a limited time and without aids) in the light of various challenges of sponsorship. Firstly, the questions include answers to each question from a set of predetermined multiple answers. Secondly, open-end questions are asked so that we can find out whether students are able to demonstrate the use of strategies and implementation steps as part of sponsorship.",Yes,No,Basic skills in Marketing,"At the end of the module students understand how sponsorship portfolios are created from the perspective of different stakeholders (sponsors and ambushers, event organizers, individuals, media). This includes sponsorship in sports, arts and culture, social causes, science and education, ecological causes, as well as the media. The students understand the basics in sponsorship and sponsorship-linked marketing, including recent developments and the chain of effects of the sponsorship-linked marketing management process. The students also understand the mechanisms of how recipients process sponsorship messages. They are able to use different methodological concepts in order to quantify the effects of sponsorship messages on recipients and relate these measures to the predefined goals of the stakeholders. The students are able to identify success factors of sponsorship-linked marketing and they can use methods that measure the success of sponsorship. The students are able to create both innovative sponsorship strategies as part of the sponsorship portfolio management and strategies that help sponsors protect the sponsorship rights against ambushers.","- Introduction and Overview of the Sponsorship-linked Marketing Management Process
- Introduction to Sponsorship and Sponsorship-linked Marketing
- The Sponsorship-linked Marketing Management Process
- How Sponsorship-linked Marketing Activities Influence Stakeholders
- The Effects of Sponsorship-linked Marketing Activities on Recipients
- Theories on the Processing of Sponsorship Messages (I)
- Theories on the Processing of Sponsorship Messages (II)
- Visual Attention to Sponsors at the Site of Events and in the Media
- Outcome Measurement and Controlling in Sponsorship-linked Marketing
- Measuring and Interpreting Sponsorship Outcome Variables
- Sponsorship-linked Marketing and the Financial Success of Brands
- Sponsorship-linked Marketing Implementation
- Leveraging Tools in Sponsorship-linked Marketing
- Non-sponsor Brand Behaviors: Official Sponsorship versus Ambush Marketing
- The Sponsor Perspective: How to Create Unique Sponsorship Portfolios
- The Sponsored Property Perspective: How to Recruit and Retain Sponsors- Introduction and Overview of the Sponsorship-linked Marketing Management Process
- Introduction to Sponsorship and Sponsorship-linked Marketing
- The Sponsorship-linked Marketing Management Process
- How Sponsorship-linked Marketing Activities Influence Stakeholders
- The Effects of Sponsorship-linked Marketing Activities on Recipients
- Theories on the Processing of Sponsorship Messages (I)
- Theories on the Processing of Sponsorship Messages (II)
- Visual Attention to Sponsors at the Site of Events and in the Media
- Outcome Measurement and Controlling in Sponsorship-linked Marketing
- Measuring and Interpreting Sponsorship Outcome Variables
- Sponsorship-linked Marketing and the Financial Success of Brands
- Sponsorship-linked Marketing Implementation
- Leveraging Tools in Sponsorship-linked Marketing
- Non-sponsor Brand Behaviors: Official Sponsorship versus Ambush Marketing
- The Sponsor Perspective: How to Create Unique Sponsorship Portfolios
- The Sponsored Property Perspective: How to Recruit and Retain Sponsors","Online lectures that cover the state of the art in the field of sponsorship and its implementation are provided using software technology. Students can access the materials using Internet technology. Learning progress monitoring questions are asked when students go through the content of the class. Students also take part in online training using case studies. They are provided with the relevant material to work on the cases, solve problems, and find solutions. They do so in the form of homework. Answers to the case studies are presented to the students after they have handed in their homework.",Online lectures,https://www.researchgate.net/profile/David_Woisetschlaeger/publication/317035913_Inferring_Corporate_Motives_How_Deal_Characteristics_Shape_Sponsorship_Perceptions/links/59916244458515b87b4d6b40/Inferring-Corporate-Motives-How-Deal-Characteristics-Shape-Sponsorship-Perceptions.pdf,52,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1073242/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000977,Stochastic Modeling and Optimization,6.0,-,Always,"Minner, Stefan",Chair of Logistics and Supply Chain Management (Prof. Minner),-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The grading is based on a written exam (90 minutes) consisting of 4 questions, the participants can choose 3 out of 4. Each question has several parts assessing the different competence levels. Students show that they understand a set of advanced stochastic methods. Each question requires the application of a stochastic method, or combinations of several methods. That shows students’ ability to compare, choose and, combine different stochastic methods. Students have to conduct 1) practical implementation exercises and 2) theoretical proofs. The exam is open-book, students are allowed to use their own laptops for solving the programming exercises.",Yes,No,"The module requires a solid knowledge in probability theory and linear optimization. The knowledge of a programming language is helpful and the course “Modelling, Optimization, and Simulation” due to extensive use of Mixed-Integer Programming and Simulation methods.","After participating in this module, students are able to understand and interpret a set of advanced stochastic methods. They are able to apply these concepts in practice and transfer the methods to real life. Students further comprehend the weaknesses and strengths of the methods. They are able to assess which method to apply in which context. Students further have the ability  to make appropriate use of related software. Through (voluntary) homework and the discussion and presentation of different solutions in class, students further improve their skills of carrying out discussions within a research environment. They gain insights into academic work, as most material will be learned from scientific papers rather than from books. The course will prepare the students for their master thesis.","The module covers different state-of-the art methods for decision support in stochastic real-world environments. This contains methodology for multi-period problems and takes into account different states of the world. The module covers both, the mathematical theory behind the methods and presents their applications to industry problems such as inventory management or call center staffing.
Specifically, the module covers the topics:
• Uncertainty Modeling: Probability Theory, Stochastic Processes, 
• Fuzzy Set Theory, 
• Newsvendor Problems, Bayes Updating, Forecast Evolution
• Stochastic Dynamic Programming and Approximate Dynamic Programming
• Markov Chains and Markov Decision Processes: LP, Value Iteration, Policy Iteration 
• Stochastic Programming: Chance Constrained Programming, 
• Two-Stage Models with Recourse, Sample Average Approximation, Sampling Strategies
• Simulation Optimization Applications: Queuing Theory, Queuing Networks, Factory Physics, Inventory Theory (single echelon, multi-echelon)The module covers different state-of-the art methods for decision support in stochastic real-world environments. This contains methodology for multi-period problems and takes into account different states of the world. The module covers both, the mathematical theory behind the methods and presents their applications to industry problems such as inventory management or call center staffing.
Specifically, the module covers the topics:
• Uncertainty Modeling: Probability Theory, Stochastic Processes, 
• Fuzzy Set Theory, 
• Newsvendor Problems, Bayes Updating, Forecast Evolution
• Stochastic Dynamic Programming and Approximate Dynamic Programming
• Markov Chains and Markov Decision Processes: LP, Value Iteration, Policy Iteration 
• Stochastic Programming: Chance Constrained Programming, 
• Two-Stage Models with Recourse, Sample Average Approximation, Sampling Strategies
• Simulation Optimization Applications: Queuing Theory, Queuing Networks, Factory Physics, Inventory Theory (single echelon, multi-echelon)","In lectures, students learn to understand the mathematical theory and obtain insights in applications of the stochastic methods to a practice context. Students get exercise sheets with problems that go beyond the examples in the lecture and allow them to reproduce and extend their knowledge. For solving the exercises, they are provided with the necessary software, such as Matlab or Xpress. In exercise classes, students discuss their solutions of the homework, and find out about the differences in practicability of one method over the other. In addition, there are guest lectures of practitioners who apply advanced methodology in their daily work and motivate new fields of application of the models beyond the scope of the lectures.","Literature, Slides, Case studies, Exercises, Software","• Tijms, H.C. (2003), A First Course in Stochastic Models, Wiley
• King, A.J., Wallace, S.W. (2012), Modeling with Stochastic Programming, Springer 
• Kleijnen, J.P.C. (2008), Design and Analysis of Simulation Experiments, Springer
• Powell, W. (2011), Approximate Dynamic Programming, 2nd ed., Wiley",53,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/737291/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001180,Tech Challenge,6.0,UTUM,Always,"Patzelt, Holger",Chair of Entrepreneurship (Prof. Patzelt),-,Master,-,-,one semester,-,English,-,180.0,60.0,120.0,"Overview of Final Deliverables

1. Functional Prototype (in hard- and/or software): 40% of grade
2. Final Demo (7 minutes incl. video): 30% of grade
3. Technical Project Description: 15% of grade
4. Read Deck (up to 10 slides max.): 15% of grade

Details of final deliverables below.

Final Deliverable 1: Functional Prototype

- Functional prototype in hard- and/or software
- Not a final product, but should showcase at least one key aspect of your product/service
- For software, use any framework, IDE, language etc. that works
- For hardware, use MakerSpace & prototype budget (up to 250€ per team, only redeemable with invoice!)

Final Deliverable 2a: Final Demo…

- You will have exactly 7 minutes, incl. your video of up to 2 minutes; and Q&A thereafter
- Your demo (incl. video) should include: Team, Customer Need, Value Proposition, Prototype, Competition, Differentiation, Future Roadmap (Note: content is same as the read deck)
- All team members must present
- Slides should not distract from the presenter (e.g. too much text, low contrast, …)

Final Deliverable 2b: …and Video

- Cannot be longer than 2 minutes max. (and should be at least 1 minute long)
- Can be real-life video, powerpoint slides, animations, cartoons or any other video format
- Should not be silent - audio can be spoken text, real world sound, music, …
- Should cover: Customer Need, Value Proposition (Prototype optional), Differentiation
- Think of it as a marketing or sales tool

Final Deliverable 3: Technical Project Description

- Description of all hardware components and software modules/frameworks used, as well as step-by-step instructions to re-create your prototype (e.g. see project descriptions at Hackster.io)
- Link to an online code repository (e.g. GitHub, GitLab, BitBucket) is mandatory

Final Deliverable 4: Read Deck

- Needs to be understandable as stand-alone with no further explanation (assume reader has not seen demo or video!)
- Use presentation format (i.e. slides); different than the presentation used in demo!
- Cannot be more than 10 slides max. (excl. appendix)
- Your read deck should include: Team, Customer Need, Value Proposition, Prototype, Competition, Differentiation, Future Roadmap (note: content is same as final pitch)",Yes,No,"Knowledge: Willingness to participate; affinity with tech and entrepreneurship trends preferred 
Abilities: Identifying opportunities; proactiveness; communication; teamwork; commitment 
Skills: openness; analytical thinking; design thinking; self-motivation; networking","Upon successful completion of this module, students are able to: 

-	identify latest technology trends related to topics such as smart city, mobility, digital healthcare, Industry 4.0 and smart grid  
-	understand opportunities and challenges in applying cutting-edge technology (e.g., cloud, IoT, AI, AR/VR) to address a specific industrial challenge
-	conduct project-based interdisciplinary teamwork 
-	carry out an individualized learning process by utilizing referenced online resources as well as on demand expert coaching regarding team development, technology development and product design
-	evaluate own ideas, prototypes and project findings with experts, users, and customers, and work closely with their feedback
-	recognize and utilize contemporary web platforms for digital project creation and sharing
-	operate in a high-tech prototyping workshop equipped with latest technology and devices
-	create functional prototypes to demonstrate own proposed solution to a specific industrial challenge
-	devise a showcase of own project results to a broad audience of peers, academics and practitioners
-	create short business plans to effectively communicate business value of own project results

Thus, students get familiarized with the many facets of entrepreneurship. In doing that, they are enabled to see, realize, and experience the multiplicity in the everyday life of an entrepreneur, entrepreneurial personalities, as well as entrepreneurial skills and motivations.","-	Kick-off: Introduction to challenges, resources, objectives. “Challenge fair” at the end. Students are sensitized, inspired and stimulated to develop feasible, viable and holistic solutions to address current industrial topics as smart city, mobility, digital healthcare, Industry 4.0 and smart grid by utilizing cutting-edge technologies as cloud, IoT, AI, AR/VR.
-	Challenge workshops: 1 day is reserved for each corporate to hold an interactive workshop with the batch of students interested to know more about the respective challenge (known needs, available technologies, boundary conditions, etc.).
-	Interdisciplinary teams and ideas registration as pertaining to a specific challenge (choice made by teams): Team, Vision, Project Plan
-	Ideation workshop: Design thinking, empathic exploration, needfinding, concept generation, evaluation, and selection
-	Work-in-progress: Prototyping, testing, generating feedback, iterating, creating new insights and elaborating use cases. On demand office hours and consulting sessions with experts for ideation, technology development, product design, and team development. 
-	Customer Value Proposition, Market and Positioning with respect to competition, Unique Selling Proposition, Business Model, Value Chain, Market Entry
-	Business Plan, pitch training 
-	Pre-Demo Day Meetup: User Acceptance Testing with respective challenge owners. Teams present, respective corporate provides feedback.
-	Feedback integration to finalize project results 
-	Demo Day: Teams showcase their final concepts by means of their prototypes, videos, posters, and short business plans-	Kick-off: Introduction to challenges, resources, objectives. “Challenge fair” at the end. Students are sensitized, inspired and stimulated to develop feasible, viable and holistic solutions to address current industrial topics as smart city, mobility, digital healthcare, Industry 4.0 and smart grid by utilizing cutting-edge technologies as cloud, IoT, AI, AR/VR.
-	Challenge workshops: 1 day is reserved for each corporate to hold an interactive workshop with the batch of students interested to know more about the respective challenge (known needs, available technologies, boundary conditions, etc.).
-	Interdisciplinary teams and ideas registration as pertaining to a specific challenge (choice made by teams): Team, Vision, Project Plan
-	Ideation workshop: Design thinking, empathic exploration, needfinding, concept generation, evaluation, and selection
-	Work-in-progress: Prototyping, testing, generating feedback, iterating, creating new insights and elaborating use cases. On demand office hours and consulting sessions with experts for ideation, technology development, product design, and team development. 
-	Customer Value Proposition, Market and Positioning with respect to competition, Unique Selling Proposition, Business Model, Value Chain, Market Entry
-	Business Plan, pitch training 
-	Pre-Demo Day Meetup: User Acceptance Testing with respective challenge owners. Teams present, respective corporate provides feedback.
-	Feedback integration to finalize project results 
-	Demo Day: Teams showcase their final concepts by means of their prototypes, videos, posters, and short business plans","Innovatively addressing complex themes as smart city and Industry 4.0 often requires the use of cutting-edge technologies within an entrepreneurial process. Based on this premise and to get the students understand and apply such a process, the module deploys hands-on project-based learning and interdisciplinary teamwork.

Each semester several industrial challenges are spotlighted as proposed by the participating corporates, who provide access to their proprietary technologies, resources, experts and coaches specific to their respective challenge. An industrial challenge is formulated to be broad, with the potential of breeding many specific projects in return.  Students are encouraged to propose which challenge to address in which way (i.e., project idea) and within which team.

Through interactive team exercises and a semester-long project, the students experience peer-learning while gaining practice in assessing and optimizing usage of their team resources. They are also provided with team coaching sessions, individual mentoring, tutorials as necessary (challenge-dependent), and hands-on courses to operate machines and devices (3D printer, laser cutter, waterjet cutter, sensors etc.) at the high-tech prototyping workshop (team- and challenge-dependent).","-	Online access to slides, hand-outs, materials through dedicated e-Learning account
-	Online discussion forum connecting students and involved experts
-	Accounts on contemporary web platforms for digital project creation and sharing (e.g., hackster, kaggle, datacamp)","A maintained list of references to relevant online course materials (e.g., UnternehmerTUM MOOC videos, Coursera, Udacity, edX, Udemy) to support an individualized learning process suited to students’ various levels of expertise",54,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1412293/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000813,Technology Entrepreneurship Lab,6.0,UTUM,Always,"Patzelt, Holger",Chair of Entrepreneurship (Prof. Patzelt),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The  grading is based on a project work.
With the project work students show their understanding of the processes associated with the recognition and development of entrepreneurial opportunities. Students show that they are able to analyze the development of entrepreneurial teams. Moreover, they show their ability to apply coaching tools.
Throughout the project work each student has to hand in regular written documentation of maximum one page in which to describe the continuous development of the entrepreneurial idea as well as the team (60%). At the end of the project work each student has to hand in a summary documentation of maximum three pages (40%) covering idea development, team development and used tools.",Yes,No,"First entrepreneurial experience (in any field)
First team development experience (in any filed)
Ideally already taken part in Tech Challenge (WI 001180) or Business Plan Basic Seminar (WI000159)","After module participation students are able to understand the processes associated with the recognition and development of entrepreneurial opportunities. In addition, they are able to analyze the development of
entrepreneurial teams and to apply coaching tools for this purpose. Further, they are able to develop an opportunity assessment plan as well as guide others in this process.","In cooperation with UnternehmerTUM GmbH.
The module Technology Entrepreneurship Lab offers a ""hands-on-experience"" for the development of entrepreneurial business ideas and opportunities with
teams. Students work full-time for three consecutive days on the development of their entrepreneurial, technological and coaching skills. The students document both, the opportunity development process and the parallel team development
process and present both processes. Subsequently, they will work on their teams’ development of an opportunity assessment plan for the respective business ideas.In cooperation with UnternehmerTUM GmbH.
The module Technology Entrepreneurship Lab offers a ""hands-on-experience"" for the development of entrepreneurial business ideas and opportunities with
teams. Students work full-time for three consecutive days on the development of their entrepreneurial, technological and coaching skills. The students document both, the opportunity development process and the parallel team development
process and present both processes. Subsequently, they will work on their teams’ development of an opportunity assessment plan for the respective business ideas.","The module consists of a three-day introductory lecture on entrepreneurial, technological and coaching skills as well as a hands-on 3 month execution phase with teams. A coach accompanies this process. The business ideas and team development processes are supervised and presented.","PowerPoint, Flipchart, online communication tool, virtual meetings, online webinars","Hisrich, R. D./Peters, M. P./Shepherd, D. A.: Entrepreneurship, 8th edition, McGraw-Hill, 2010",55,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/584574/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000978,Transportation Logistics,6.0,S,Always,"Minner, Stefan",Chair of Logistics and Supply Chain Management (Prof. Minner),-,Bachelor,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The grading is based on a written exam (90 minutes) consisting of 4 questions, the participants can choose 3 out of 4. Each question has several parts assessing the different competence levels. In a first theory part, the student has to reproduce knowledge about transportation logistics concepts. In a second part, different calculation methods need to be applied with given data and the results be analyzed and interpreted. In a third part, the students need to develop ideas and concepts beyond the reproduction of knowledge and application of methods. In order to facilitate calculations and for backup of some formulas, a formula sheet and a pocket calculator can be used.",Yes,No,"Produktion und Logistik, Management Science","Students will be able to give an overview on characteristics of different transportation modes. They will be able to model transportation, routing and network design problems as mixed­integer linear program and to solve these problems with heuristics to provide practical decision support and to understand the concepts and methods behind commercial decision support software.","The module will give an overview on different problems in freight and public transportation and present the basic concepts and algorithms for the solution of various problems.

Besides different variants of the classical transportation problem, the content covers:
-	the travelling salesman problem,
-	vehicle routing problems with several extensions,
-	train routing problems,
-	packaging problems,
-	fleet sizing, and
-	transportation network design.The module will give an overview on different problems in freight and public transportation and present the basic concepts and algorithms for the solution of various problems.

Besides different variants of the classical transportation problem, the content covers:
-	the travelling salesman problem,
-	vehicle routing problems with several extensions,
-	train routing problems,
-	packaging problems,
-	fleet sizing, and
-	transportation network design.","The module includes lectures where students obtain knowledge about transportation modeling and optimization techniques. In exercise sessions, the students solve problems with the obtained knowledge, perform optimizations, interpret the findings and present and discuss their results to the others participants in the classroom. Guest lectures given by industry professionals supplement the theory parts and give the participants the opportunity to recognize problems, discover interesting challenges for choosing their thesis work and discuss with practitioners.","Literature, Slides","Toth, P., & Vigo, D. (Eds.). (2014). Vehicle routing: problems, methods, and applications (Vol. 18). Siam.
Ghiani, G., Laporte, G., & Musmanno, R. (2013). Introduction to logistics systems management. John Wiley & Sons.",56,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/737297/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001195,Value-based Business Strategy & Innovation,6.0,-,Always,"Henkel, Joachim",Chair of Technology and Innovation Management  (founded by Dr. Theo Schoeller) (Prof. Henkel),-,Master,VBSI,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The grade results from a two-hour closed book exam. The exam will take place in presence at the university (as long as the pandemic situation allows it).
During the exam, students demonstrate that they know the fundamental concepts taught in the course, understand the mechanisms and tools that were introduced, and are able to use them to analyze and evaluate problems of value capture.",Yes,No,"Good mathematical skills corresponding to a Bachelor's course in mathematics (e.g., calculating derivatives, solving systems of equations, doing integrations), and an interest in translating real-world problems into formal representations. Recommended: Bachelor-level knowledge of strategy and of technology and innovation management.","At the end of the module students will know the theoretical concepts explaining when firms profit from their innovations, or other activities, and when they do not. They will know and understand the applicable mechanisms and tools from game theory, and will able to use them to analyze and solve real-world problems of value capture. Students will also be able to translate real-world situations into formal representations and explain the latter to others.  In addition, students will improve their teamworking, moderation, and presentation skills by giving a presentation in a small group of students and leading an academic discussion.","The central question of the course is, how do firms capture value from innovation and from other activities? The business world is full of examples of firms that created considerable value, through innovation or otherwise, but had to give up most of that value to competitors, complementors, customers, or other parties. We tackle this question from various directions. Qualitative approaches such as the Resource-Based View (RBV) and Teece's Profiting-From-Innovation (PFI) framework provide a conceptual understanding. Game-theoretic approaches, using both non-cooperative and cooperative game theory, provide an analytical understanding of the drivers of value capture. Emphasis will be on mathematical models from Value Capture Theory, a stream of research recently reviewed by Gans and Ryall (2017) and initiated by Brandenburger and Stuart's (1996) study of Value-based Business Strategy. We will test predictions of Value Capture Theory through negotiation experiments in class.The central question of the course is, how do firms capture value from innovation and from other activities? The business world is full of examples of firms that created considerable value, through innovation or otherwise, but had to give up most of that value to competitors, complementors, customers, or other parties. We tackle this question from various directions. Qualitative approaches such as the Resource-Based View (RBV) and Teece's Profiting-From-Innovation (PFI) framework provide a conceptual understanding. Game-theoretic approaches, using both non-cooperative and cooperative game theory, provide an analytical understanding of the drivers of value capture. Emphasis will be on mathematical models from Value Capture Theory, a stream of research recently reviewed by Gans and Ryall (2017) and initiated by Brandenburger and Stuart's (1996) study of Value-based Business Strategy. We will test predictions of Value Capture Theory through negotiation experiments in class.",The module consists of lectures; exercises in which students solve problems; voluntary presentation of homework assignments by students; presentations by groups of students; literature study; and guest lectures by practitioners.,"PowerPoint, whiteboard, exercise sheets, course material is available via Moodle.","""Brandenburger, A., Stuart, H. (1996) Value-based business strategy. Journal of Economics & Management Strategy, 5(1), 5-24.
Ceccagnoli, M., Rothaermel, F.T. (2008) Appropriating the returns to innovation. In: Advances in Study of Entrepreneurship, Innovation, and Economic Growth 18, 11-34.
Gans, J., Ryall, M.D. (2017) Value capture theory: A strategic management review. Strategic Management Journal, 38(1), 17-41.""",57,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1548947/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WIB26004,What’s New about New Forms of Organizing?,6.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,A Primer on Organization Theory,-,one semester,winter semester,English,-,180.0,60.0,120.0,"This module is examined via exercises (“Übungsleistung”), using four elements to assess the different learning goals of this course. 
- Oral, individual: 40%. For each session of class, you will be given in advance a set of question to prepare. We will assess your contributions to solving these question in class to see whether you can define, explain, and apply key organization theories; describe, compare, and appraise existing organization design solutions; and compose new organization designs . Students do not have to be active or even present in every session to achieve full marks; given to be defined circumstances and instructor permission, students may also submit written solutions prior to class as a basis of grading 
- Written, individual: 20%. At the end of the course, you will submit an individual reflection paper, highlighting one key learning in this course, so as to show that you can distinguish the newly learned theories of organizations from previously learned perspectives
- Written, group: 20%. as a group, you analyze one non-traditional organization drawing on concepts learned in class to showcase that you can interpret, classify, and assess the conduct and performance of any organization
- Poster, group: 20%. for same non-traditional organization as for the group paper, you will create a poster to highlight the viability of the same organization for the future, to show you can evaluate how environmental change affects existing organizations",No,Yes,"English. Given the highly interactive nature of the module (entirely in English), students should feel comfortable expressing their opinion and interacting in English. Therefore, very good written and spoken English language skills are required. 

While there are no formal perquisites to attend this course, we very strongly recommend that you have previously attended an introductory course on economics (such as “Principles of Economics”) and management (such as “International Management”). These introductory courses should have given you some first insights into what organizations are and how they operate – that means how organizations are structured, and why they are structured in a certain way – very often building on microeconomic theory. Courses on strategy will be similarly helpful; courses on leadership, HR, or marketing most likely not. While we will not block you from joining the course per se, we want to clearly point out that we will not go back to re-explain some of the first principles taught in such courses, but we will assume that you know them, or freshen up on them on your own time. Indeed, understand how the perspective on organizations you will receive in this course is different from the perspectives you have gotten to know in other course may be one of the key learnings you will achieve.","Knowledge-related outcomes

Upon completion of this module, students will be able to:
- Define, explain, and apply in practice key theories of organizations
- Interpret, classify, and assess the conduct and performance of any organization
- Describe, compare, and appraise different existing organization design solutions for a given situation
- Distinguish the newly learned theories of organizations from previously learned perspectives
- Evaluate how environmental change may affect existing organization designs and theories
- Compose new organization designs
Skill-related outcomes
- Improve diagnostic and analytical skills (i.e., structured problem-solving)
- Build up critical thinking and interpretation skills
- Enhance verbal and argumentation skills via presentations and group discussions
- Hone ability to integrate into and interact with a team professionally, academically, and socially (including leadership and project management skills, intercultural competences) through the group tasks","Why do organizations exist? Why do they exist in the way that they are existing? Put differently – what purpose do organizations really serve, and why? How can it be that after over a century of theories about organizing, we still not have found the right way? And how shall we expect that to change in the future? Is there anything we can learn about organizations of the past—irrespective if they are real or fictional, for profit or not—that will help us design better organizations to solve the problems of today, or leverage future opportunities such as the Internet of Things, Blockchain, robotics, artificial intelligence, and so on?

This lecture introduces students to theories of organizations and their relevance to practice. Based on key readings in organization theory, newspaper and magazine articles, and case studies, students will learn about why organizations exist and how they function, use that knowledge to analyze a non-characteristic organization, and showcase their versatility in dissecting organization in a poster competition. As a result, this lecture will equip students with a thorough understanding of why organizations are the way they are, are run the way they are run, and how they may change – or not – in the future. Hence, students will be able to comment and analyze on existing organizations, and ideally capable of becoming future organization designers. 

Hence, topics include, but are not limited to:
- What is (not) an organization? 
- The role of organization structure: does structure follow strategy or strategy follow structure?
- Simple perspectives on organization structure: contingency and configuration perspectives
- Organizing as farce: institutional theory
- Deterministic perspectives: population ecology, imprinting, and path-dependence
- Growing organizations
- Organizing as searching: the behavioral theory of the firm
- Organizations as power and networks: resource dependence and network theory
- Open forms of organization
- Organizing under extreme uncertainty: design thinking, abduction, and temporary organizations
- Holacracy and agile organizations
- The Future of Organizing – Organizations of the Future?Why do organizations exist? Why do they exist in the way that they are existing? Put differently – what purpose do organizations really serve, and why? How can it be that after over a century of theories about organizing, we still not have found the right way? And how shall we expect that to change in the future? Is there anything we can learn about organizations of the past—irrespective if they are real or fictional, for profit or not—that will help us design better organizations to solve the problems of today, or leverage future opportunities such as the Internet of Things, Blockchain, robotics, artificial intelligence, and so on?

This lecture introduces students to theories of organizations and their relevance to practice. Based on key readings in organization theory, newspaper and magazine articles, and case studies, students will learn about why organizations exist and how they function, use that knowledge to analyze a non-characteristic organization, and showcase their versatility in dissecting organization in a poster competition. As a result, this lecture will equip students with a thorough understanding of why organizations are the way they are, are run the way they are run, and how they may change – or not – in the future. Hence, students will be able to comment and analyze on existing organizations, and ideally capable of becoming future organization designers. 

Hence, topics include, but are not limited to:
- What is (not) an organization? 
- The role of organization structure: does structure follow strategy or strategy follow structure?
- Simple perspectives on organization structure: contingency and configuration perspectives
- Organizing as farce: institutional theory
- Deterministic perspectives: population ecology, imprinting, and path-dependence
- Growing organizations
- Organizing as searching: the behavioral theory of the firm
- Organizations as power and networks: resource dependence and network theory
- Open forms of organization
- Organizing under extreme uncertainty: design thinking, abduction, and temporary organizations
- Holacracy and agile organizations
- The Future of Organizing – Organizations of the Future?","The largest share of this course will be co-developed by the course participants and the instructor(s) through discussions of course materials and newspaper articles, as well as short presentations. The lecturer will help facilitate and guide the course discussion through questions, by taking notes on whiteboards, and by providing links across the different course sessions. Students are strongly encouraged to take notes to facilitate cumulative learning across sessions of class. Specific topics and definitions may be presented using PowerPoint slides. We will frequently use the hall in the Entrepreneurship Center for exercises, in which students will apply and inductively further develop content. Finally, a large share of learning will occur through students preparing individually and in groups for the in-class session. Techniques to do so will be introduced in the first session of class. Information on what materials to prepare will be provided for each course session—this information will be available in the course syllabus, which will be available weeks before the course on TUMonline.",-,"Specific & mandatory readings will be specified in the course syllabus, which will be available weeks before the course on TUMonline. 
Students interested in the topics of the course more broadly may also find the following books helpful for this module. However, there is no obligation whatsoever to read them to pass this module successfully: 
- Aldrich, H.E. and Ruef, M. (newest edition). Organizations Evolving. Sage
- Ott, J.S., Shafritz, J.M., and Jang, Y.S. (newest edition). Classic Readings in Organization Theory. Wadsworth.
- Scott, W.R. and Davis, G.F. (newest edition). Organizations and Organizing: Rational, Natural, and Open Systems Perspectives. Pearson International Edition.
- In German: Kieser, A., Ebers, M. (newest edition). Organisationstheorien. Kohlhammer.",58,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1506760/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2003,Efficient Algorithms and Data Structures,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"The exam takes the form of a 150 minutes written test. In the written exam, based on the questions posed, the students are intended to prove that they know the conceptual and mathematical basics of algorithm analysis. Moreover, the students are expected to demonstrate that they have profound and advanced knowledge in the area of efficient data structures and algorithms. They show that they are able to recognize and analyze typical algorithmic problems and to find efficient solutions within a limited scope of time.",No,Yes,"IN0015 Discrete Structures, IN0007 Fundamentals of Algorithms and Data Structures, IN0018 Discrete Probability Theory","After completing the module, the students are able to analyze and to assess the runtime and the memory requirements of algorithms. Furthermore, they have a good understanding of numerous fundamental algorithms and data structures. This understanding enables them to design algorithms and data structures for new algorithmic problems.","First, the basics of algorithm analysis are covered. Then fundamental data structures and basic algorithmic problems are presented.
As for the basics of algorithm analysis, various machine models, complexity measures and the solving of recurrence relations are studied.
Regarding fundamental data structures, various search trees, hashing schemes, priority queues and union-find data structures are investigated.
As for basic algorithms, the focus is on the development of numerous max-flow and min-cut algorithms as well as algorithms for matching problems.First, the basics of algorithm analysis are covered. Then fundamental data structures and basic algorithmic problems are presented.
As for the basics of algorithm analysis, various machine models, complexity measures and the solving of recurrence relations are studied.
Regarding fundamental data structures, various search trees, hashing schemes, priority queues and union-find data structures are investigated.
As for basic algorithms, the focus is on the development of numerous max-flow and min-cut algorithms as well as algorithms for matching problems.","The module consists of lectures and tutorials. The content of the lectures is conveyed by presentations of the scientific material. By solving homework assignments, the students are encouraged to work intensively on the respective topics. The solutions of the assignments are discussed in the tutorials. The homework assignments are graded so that students get an individual feedback on their learning success.","Slides, whiteboard, homework assignments","Alfred V. Aho, John E. Hopcroft, Jeffrey D. Ullman: The Design and Analysis of Computer Algorithms. Addison-Wesley, 1974. 
Thomas H. Cormen, Charles E. Leiserson, Ron L. Rivest, Clifford Stein: Introduction to Algorithms. McGraw-Hill, 1990.
Michael T. Goodrich, Roberto Tamassia: Algorithm Design: Foundations, Analysis, and Internet Examples, John Wiley & Sons, 2002.
Volker Heun: Grundlegende Algorithmen: Einführung in den Entwurf und die Analyse effizienter Algorithmen, 2. Auflage, Vieweg, 2003.
Jon Kleinberg, Eva Tardos: Algorithm Design. Addison-Wesley, 2005.
Donald E. Knuth: The Art of Computer Programming. Vol. 1: Fundamental Algorithms. 3. Auflage, Addison-Wesley, 1997. 
Donald E. Knuth: The Art of Computer Programming. Vol. 3: Sorting and Searching. 3. Auflage, Addison-Wesley, 1997. 
Christos H. Papadimitriou, Kenneth Steiglitz: Combinatorial Optimization: Algorithms and Complexity. Prentice Hall, 1982. 
Uwe Schöning: Algorithmik. Spektrum Akademischer Verlag, 2001. 
Steven S. Skiena: The Algorithm Design Manual. Springer, 1998.",63,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456350/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2004,Efficient Algorithms and Data Structures II,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"In the 150 minutes written exam students show, based on exemplary test problems, their (basic and advanced) knowledge of algorithm analysis and how to apply this successfully. Also based on exemplary and representative test questions, they solve test problems on data structures and algorithmic problems (mainly in the area of combinatorial optimization) based on the advanced techniques taught in class. Students also show that they are able to understand and analyze advanced problems and find efficient solutions within limited time.",No,Yes,"IN0015 Discrete Structures, IN0018 Discrete Probability Theory, IN2003 Efficient Algorithms and Data Structures","After attending the module students have a good knowledge about advanced algorithmic methods from the area of linear optimization. In addition they know about approximation algorithms and their importance when dealing with NP-hard problems. They know about several fundamental techniques for obtaining approximate solutions for combinatorial optimization problems, and they can apply these techniques to new problems.","Linear Optimization
- Modelling
- Simplex method
- Seidel's algorithm
- Ellipsoid method
- Karmarkar

Approximation algorithms
- Greedy methods
- Local search
- LP relaxation and rounding
- Primal/dual approachLinear Optimization
- Modelling
- Simplex method
- Seidel's algorithm
- Ellipsoid method
- Karmarkar

Approximation algorithms
- Greedy methods
- Local search
- LP relaxation and rounding
- Primal/dual approach",The module consists of a lecture and a corresponding seminar. By solving assignment sheets students will be actively engaging with the contents of the module. The solutions of assignments will be discussed in the seminar. In addition students receive an individual feedback about their progress via the corrected assignment sheets.,"Slides, white/blackboard, assignment sheets","Thomas H. Cormen, Charles E. Leiserson, Ron L. Rivest, Clifford Stein:
Introduction to Algorithms
McGraw-Hill, 1990

Jon Kleinberg, Eva Tardos:
Algorithm Design
Addison-Wesley, 2005

David P. Williamson, David B. Shmoys:
The Design of Approximation Algorithms
Cambridge University Press, 2011

Vijay Vazirani:
Approximation Algorithms
Springer, 2001

Christos H. Papadimitriou, Kenneth Steiglitz:
Combinatorial Optimization: Algorithms and Complexity,
Prentice Hall, 1982

Theory of Integer and Linear Programming
Alexander Schrijver
John Wiley & Sons, 1998",64,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/455704/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2007,Complexity Theory,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"The exam takes the form of a 120 minutes written test. In the written exam, based on the questions posed, the students are intended to prove that they have fundamental and advanced knowledge in the area of complexity theory. The students demonstrate that they are able to recognize and analyze problems in complexity theory and to find efficient solutions within a limited scope of time.",No,Yes,"IN0011 Introduction to Theory of Computation, IN0015 Discrete Structures, IN0007 Fundamentals of Algorithms and Data Structures","The students know the important methods of the complexity theory. They have knowledge of computational models, complexity classes, reductions and completeness. Moreover, they have a profound knowledge of advanced concepts such as diagonalization, the polynomial hierarchy, space complexity, alternation, Boolean circuits, randomization and interactive proof systems. Furthermore, they can apply the appropriate methods and concepts to analyze new problems in their complexity.","First, Turing Machines are covered thoroughly. Time and space complexity are studied. Moreover, circuits as computational models are investigated. The complexity classes L, NL, P, NP, PSPACE, EXP, NEXP, PH are introduced. Afterwards, completeness and fundamental structural relationships between complexity classes are established. Furthermore, the concept of alternation, Boolean Circuits, randomization and interactive proof systems are covered in the module.First, Turing Machines are covered thoroughly. Time and space complexity are studied. Moreover, circuits as computational models are investigated. The complexity classes L, NL, P, NP, PSPACE, EXP, NEXP, PH are introduced. Afterwards, completeness and fundamental structural relationships between complexity classes are established. Furthermore, the concept of alternation, Boolean Circuits, randomization and interactive proof systems are covered in the module.","The module consists of lectures and tutorials. The content of the lectures is conveyed by presentations of the scientific material. In solving homework assignments, the students are encouraged to work intensively on the respective topics. The solutions of the assignments are discussed in the tutorials. The homework assignments are graded so that students get an individual feedback on their learning success.","Slides, whiteboard, homework assignments","Sanjeev Arora, Boaz Barak: Computational Complexity - A Modern Approach. Cambridge University Press: Cambridge-New York-Melbourne, 2009. 
Giorgio Ausiello, Pierluigi Creszenzi, Giorgio Gambosi, Viggo Kann, Alberto Marchetti-Spaccamela, Marco Protasi: Complexity and approximation - Combinatorial optimization problems and their approximability properties. Springer-Verlag: Berlin-Heidelberg, 1999.
Jose L. Balcazar, Josep Diaz, Joaquim Gabarro: Structural Complexity I (and II). EATCS Monographs on Theoretical Computer Science, Springer-Verlag: Berlin-Heidelberg, 1995. 
Christos H. Papadimitriou: Computational Complexity. Addison-Wesley Publishing Company: London-Amsterdam-New York, 1994. 
Christos H. Papadimitriou, Kenneth Steiglitz: Combinatorial optimization: Algorithms and complexity. Prentice-Hall, Englewood Clis, NJ, 1982.
Karl Rudiger Reischuk: Komplexitätstheorie - Band I: Grundlagen. B.G. Teubner: Stuttgart-Leipzig, 1999. 
Michael Sipser: Introduction to the Theory of Computation. International Edition, Thomson Course Technology: Australia-Canada-Mexico-Singapore-Spain-United Kingdom-United States, 2006. 
Ingo Wegener: The complexity of Boolean functions. Wiley-Teubner Series in Computer Science: Stuttgart-Chichester-New York, 1987.",65,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/455706/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2011,Parallel Algorithms,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,240.0,90.0,150.0,"The exam takes the form of written test (120 minutes). 

Questions allow to assess acquaintance with fundamentals of parallel computation, of parallel complexity theory and the analysis of parallel algorithms. Programming tasks assess the ability to design and evaluate basic parallel algorithms.",No,Yes,"IN0015 Discrete Structures, IN2003 Efficient Algorithms and Data Structures, IN0018 Discrete Probability Theory","After successfully completing the course, students know the fundamentals of (massively) parallel computation, of parallel complexity theory and the analysis of parallel algorithms, and they are able to design and evaluate basic parallel algorithms.","Basic parallel machine models
Elementary parallel algorithms
Advanced algorithms and methods for routing and sortingBasic parallel machine models
Elementary parallel algorithms
Advanced algorithms and methods for routing and sorting","lecture, tutorial, homework assignments","Slides, whiteboard, homework assignments","F. Thomson Leighton: Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. Morgan Kaufman Publishers 1992. 
Joseph JáJá: Parallel Algorithms. Addison-Wesley Publishing Company 1992",66,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456364/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2158,Advanced Network and Graph Algorithms,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,240.0,90.0,150.0,In the written 120 minutes exam students should prove to be able to identify a given problem and find solutions within limited time.,No,No,"IN0007 Fundamentals of Algorithms and Data Structures, IN2003 Efficient Algorithms and Data Structures, IN2004 Efficient Algorithms and Data Structures II","After attending the lectures, participants shall be able to evaluate specialized network problems w.r.t. their complexity and to solve them using advanced graph algorithms. In particular, this includes the analysis and evaluation of typical properties like robustness or vulnerability of complex networks. Further, participants shall be able to develop algorithms for the optimization of different network parameters.","More insights into algorithmics of graphs following the lectures ""Fundamentals of Algorithms and Data Structures"", ""Efficient Algorithms and Data Structures 1/2"" with respect to new algorithmic methods, analysis, and application fields

Key aspects:
- Centrality indices and related algorithms
- Density in (sub-)graphs
- Advanced algorithms for connectivity problems
- Assignment Problem / Hungarian Method

Further topics:
- Graph coloring
- Clustering
- Network statistics
- Network comparison
- Algebraic methods
- Spectral analysis
- RobustnessMore insights into algorithmics of graphs following the lectures ""Fundamentals of Algorithms and Data Structures"", ""Efficient Algorithms and Data Structures 1/2"" with respect to new algorithmic methods, analysis, and application fields

Key aspects:
- Centrality indices and related algorithms
- Density in (sub-)graphs
- Advanced algorithms for connectivity problems
- Assignment Problem / Hungarian Method

Further topics:
- Graph coloring
- Clustering
- Network statistics
- Network comparison
- Algebraic methods
- Spectral analysis
- Robustness","lecture, exercise course, problems for individual study","beamer presentation, whiteboard, practice sheets","U. Brandes, Th. Erlebach (Eds.): Network Analysis - Methodological Foundations. Springer, 2005.",67,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458189/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2160,Randomized Algorithms,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"The exam takes the form of a 120 minutes written test. In the written exam, based on the questions posed, the students are intended to prove that they have fundamental and advanced knowledge in the area of randomized algorithms. The students prove that they are able to recognize and analyze relevant algorithmic problems and to find efficient solutions within a limited scope of time.",No,Yes,"IN2003 Efficient Algorithms and Data Structures, IN0015 Discrete Structures, IN0018 Discrete Probability Theory","The participants have a profound knowledge of various fundamental principles of randomized algorithms, computational models, the corresponding mathematical analyses (deriving bounds using Markov, Chebyshev, Chernoff) and of several paradigmatic applications.","The module first presents basic results in the area of randomized algorithms. Specifically, the randomized Quicksort algorithm as well as randomized algorithms for the problems min-cut, binary planar partition and verifying matrix multiplication are studied.
The concepts of Las Vegas and Monte Carlo Algorithms are discussed and various randomized complexity classes are defined. Game-theoretic techniques such as Yao’s minimax principle are investigated and applied to the problem of game tree evaluation.
Moments are covered and fundamental inequalities, such Markov’s Inequality and Chebyshev’s Inequality are established. They are then used for detailed analyses of the Coupon Collector Problem, the problem of computing the median and finding stable matchings. Furthermore, Chernoff bounds are introduced and used to analyze routing and wiring problems.
The probabilistic method is introduced and applied to numerous problems. Finally, randomized data structures such as treaps as well as universal and perfect hashing are analyzed.The module first presents basic results in the area of randomized algorithms. Specifically, the randomized Quicksort algorithm as well as randomized algorithms for the problems min-cut, binary planar partition and verifying matrix multiplication are studied.
The concepts of Las Vegas and Monte Carlo Algorithms are discussed and various randomized complexity classes are defined. Game-theoretic techniques such as Yao’s minimax principle are investigated and applied to the problem of game tree evaluation.
Moments are covered and fundamental inequalities, such Markov’s Inequality and Chebyshev’s Inequality are established. They are then used for detailed analyses of the Coupon Collector Problem, the problem of computing the median and finding stable matchings. Furthermore, Chernoff bounds are introduced and used to analyze routing and wiring problems.
The probabilistic method is introduced and applied to numerous problems. Finally, randomized data structures such as treaps as well as universal and perfect hashing are analyzed.","The module consists of lectures and tutorials. The content of the lectures is conveyed in presentations of the scientific material. By solving homework assignments, the students are encouraged to work intensively on the respective topics. The solutions of the assignments are discussed in the tutorials. The homework assignments are graded so that students get an individual feedback on their learning success.","Slides, whiteboard, homework assignments","R. Motwani, P. Raghavan: Randomized Algorithms. Cambridge University Press, 1995.
M. Mitzenmacher, E. Upfal: Probability and Computing: Randomized Algorithms and Probabilistics Analysis. Cambridge University Press 2005.",68,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458193/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2239,Algorithmic Game Theory,5.0,-,Always,"Brandt, Felix",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The exam takes the form of a 120 minutes written test. In the exam students should prove to be able to
- identify a given game-theoretic problem,
- establish connections to related questions discussed in the lectures, and
- find solutions to these problems within a given time limit.
Furthermore, based on APSO Section 6 Subsection 5(2), there are 10-20 voluntary online mid-term exercises. The grade for these exercises can be used to improve the grade of a passed exam, i.e., if you pass the exam and your midterm grade is better than your exam grade, then your final grade will be the 80:20 weighted average of your exam grade and your midterm grade.
The only resource permitted during the exam is a hand-written “cheat sheet” prepared by the candidate.",No,No,Modul IN0015 Discrete Structures (or equivalent),"Upon completion of the module students are able to
- understand the foundations of algorithmic game theory,
- analyze different representations of n-player games,
- compute and discuss various solutions concepts,
- reason about the computational complexity of these solution concepts, and
- analyze and sketch simple algorithms to find solutions for game-theoretic problems.","Algorithmic game theory is a young research area at the intersection of theoretical computer science, mathematics, and economics that deals with the optimal strategic behavior in interactive situations. In this course, particular attention will be paid to algorithmic aspects of game-theoretic solution concepts such as Nash equilibrium and the design of economic mechanisms.Algorithmic game theory is a young research area at the intersection of theoretical computer science, mathematics, and economics that deals with the optimal strategic behavior in interactive situations. In this course, particular attention will be paid to algorithmic aspects of game-theoretic solution concepts such as Nash equilibrium and the design of economic mechanisms.",The module conists of lectures and accompanying tutorials. The contents of the course will be primarily presented in the form of lectures. The students are encouraged to independently deal with problems that are provided in the form of exercise sheets. Solutions to these exercises will be discussed in the tutorials.,"Slides, whiteboard sketches","Noam Nisan, Tim Roughgarden, Eva Tardos, and Vijay Vazirani: Algorithmic Game Theory (Cambridge University Press, 2007)

Martin Osborne and Ariel Rubinstein: A Course in Game Theory (MIT Press, 1994)

Robert Aumann: Game Theory, in J. Eatwell, M. Milgate, and P. Newman: The New Palgrave, A Dictionary of Economics, Vol. 2 (MacMillan, 1987)

Yoav Shoham, Kevin Leyton-Brown: Multiagent Systems: Algorithmic, Game-Theoretic, and Logical Foundations (Cambridge University Press, 2009)",69,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/629351/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2211,Auction Theory and Market Design,5.0,-,Always,"Bichler, Martin",Department of Computer Science,seit WS15/16 5 ECTS und 4 SWS,Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"The examination takes the form of a written 90 minutes test, in which students solve problems to prove they are able to use, analyze and assess the game theoretical models of auctions. The additional answering of theory questions ensures participants understand the fundamental challenges of combinatorial auctions. Moreover, the correct responses require independent defense of the choice of auction format based on desired properties of the market allocation such as efficiency or revenue maximization for example. All problems and questions demand the students to phrase their individual responses.",No,No,"IN0022 Informations Systems II or IN0024 Operations Research, linear programming","After successful completion of the module students understand the economic properties of various auction formats. They know different game theoretical approaches to model the strategic interactions between the auctioneer and bidders. Furthermore, they understand the fundamental strategical challenges of various auction mechanisms and computational questions related to the determination of allocations and payments. Moreover, they can independently defend the choice of auction format based on desired properties of the market allocation such as efficiency or revenue maximization for example.","-        Basic game theoretical concepts (dominant strategies, Nash equilibrium under complete and incomplete information), -        Mechanism Design Theory, 
-        basics of auction theory (sealed bid and open auction formats, Revenue Equivalence, Optimal Auctions),
-        Combinatorial Auctions, 
-        Assignment Markets, 
-        challenges of combinatorial auction design (iterative combinatorial auctions and combinatorial clock auctions), applications of combinatorial auctions (spectrum and procurement auctions), 
-        approximation mechanisms, 
-        Matching Markets-        Basic game theoretical concepts (dominant strategies, Nash equilibrium under complete and incomplete information), -        Mechanism Design Theory, 
-        basics of auction theory (sealed bid and open auction formats, Revenue Equivalence, Optimal Auctions),
-        Combinatorial Auctions, 
-        Assignment Markets, 
-        challenges of combinatorial auction design (iterative combinatorial auctions and combinatorial clock auctions), applications of combinatorial auctions (spectrum and procurement auctions), 
-        approximation mechanisms, 
-        Matching Markets","The module consists of a lecture and a content-aligned tutorial. The lecturer presents the content of the module, parts of the corresponding literature and application examples for various auctions interactively. Students are accustomed with different auction formats and their modeling, and learn to differentiate their applications. In the tutorial participants solve exercises in single person and team work, and evaluate the respective game- and auction theoretical models. Thus, students learn particularly to assess the basic challenges of combinatorial auction design and to constructively criticize their own work.","Script, exercise sheets, PowerPoint, PC and E-Learning platform","Y. Shoham and K. Leyton-Brown: Multiagent Systems: Algorithmic, Game-Theoretic, and Logical Foundations. Chapters 3, 5, 6, 10, 11, 12. For class 2 and 3.: N. Nisan, T. Roughgarden, E. Tardos and V. Vazirani (editors): Algorithmic Game Theory. Chapters 9 and 11 by Nisan. For class 2, 4 and 6: V. Krishna: Auction Theory. Chapters 16 and 17 on multi-object auctions.",70,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/487476/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3410,Selected Topics in Algorithms,5.0,-,Always,-,Former TUM Department of Informatics,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,71,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498116/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330006,Communication Networks Modeling and Optimization,5.0,-,from Summer semester 2023,"Kellerer, Wolfgang",Department of Computer Engineering,-,Master,CMO,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The module examination consists of a graded written exam of 120 minutes duration and homework problems (6-7 sets). In the written exam, students demonstrate their analytical skills acquired in this course by solving problems related to modeling and optimization of communication networks. Students also demonstrate their ability in deeper understanding different stochastic processes. 
In the homework the students demonstrate their practical skills acquired in the course related to their capability for implementing original solutions and comparing them against other approaches by using different optimization tools (CVX, Gurobi, etc.).  The homework will consist of 6-7 programming assignments to be solved using available optimization software tools.

The final grade is composed of the following components:
- 60% final exam
- 40% from homework",Yes,No,"The knowledge of following modules are recommended:
- Data Networking","Upon successful completion of the module, students are able to understand and apply analytical tools that can be used in modeling the network operation (both wireless and wireline) and its optimization. They are able to formulate optimization problems in different solvers.",Introduction to probability and stochastic processes. Discrete-time Markov chains. Continuous-time Markov chains. Introduction to queueing theory. M/G/1 queues. Special queues. Queueing networks. Real-world examples. Math for the Internet architecture. Statistical multiplexing and packet buffering. Scheduling. Network optimization problems. Power optimization application.Introduction to probability and stochastic processes. Discrete-time Markov chains. Continuous-time Markov chains. Introduction to queueing theory. M/G/1 queues. Special queues. Queueing networks. Real-world examples. Math for the Internet architecture. Statistical multiplexing and packet buffering. Scheduling. Network optimization problems. Power optimization application.,"During the lectures students are instructed in a teacher-centered style. In the exercises, analytical problems will be solved. Also, students will have access to software for solving optimization problems (optimization solvers) and will be guided through several examples. Students will need to solve analytical problem on their own.","Lectures: Presentation slides
Tutorials: Solving problems on board/notebook","1. M. H. Balter “Performance Modeling and Design of Computer Systems: Queueing Theory in Action”
2. R. Srikant, L. Ying “Communication Networks: An Optimization, Control, and Stochastic Networks Perspective”",72,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3384222/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2229,Computational Social Choice,6.0,-,Always,"Brandt, Felix",Department of Computer Science,ab WS12/13 6 Credits,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"The examination takes the form of a 120-minute written exam, which consists of several tasks in which the following skills are tested:
* grasping social-choice-theoretic problems and understanding and classifying new concepts
* proving or refuting axiomatic properties of aggregation functions using mathematical arguments or counterexamples
* applying algorithms from the lecture to concrete problems in the context of ​social choice theory
The only resources permitted during the exam are one or more “cheat sheets” prepared by the candidate. The permitted number of cheat sheets will be announced in good time before the exam.

It will be possible to improve the module grade by 0.3 by correctly completing exercise sheets or online quizzes over the course of the semester. This grade bonus is only applicable if the exam has been passed and cannot be transferred to subsequent semesters. There will be no retake exam.",No,No,"Module IN0015: Discrete Structures (or equivalent). 
It is expected that participants are experienced in formally proving statements and are familiar with standard theorem proving techniques. Additionally, basic knowledge of complexity theory is useful (e.g., Module IN0011).","Upon completion of the module students are able to
* understand the foundations of social choice theory,
* to investigate axiomatic properties of aggregation functions,
* to compute and compare different aggregation functions, and
* to analyze the algorithmic properties of these functions.","Social choice theory deals with the aggregation of individual preferences into a collective choice. This course focusses on the analysis and comparison of aggregation functions that are based on majority rule. Particular attention will be paid to computational aspects. List of topics: Preferences, voting rules, choice theory (rationalizability, consistency), May?s theorem, Arrow?s impossibility theorem, scoring rules, Fishburn?s classification of Condorcet rules, McGarvey?s theorem, top cycle, uncovered set, Slater set, Banks set, minimal covering set, tournament equilibrium set, Kemeny-Young-rule, computational complexity of voting rules.Social choice theory deals with the aggregation of individual preferences into a collective choice. This course focusses on the analysis and comparison of aggregation functions that are based on majority rule. Particular attention will be paid to computational aspects. List of topics: Preferences, voting rules, choice theory (rationalizability, consistency), May?s theorem, Arrow?s impossibility theorem, scoring rules, Fishburn?s classification of Condorcet rules, McGarvey?s theorem, top cycle, uncovered set, Slater set, Banks set, minimal covering set, tournament equilibrium set, Kemeny-Young-rule, computational complexity of voting rules.",The module conists of lectures and accompanying tutorials. The contents of the course will be primarily presented in the form of lectures. The students are encouraged to independently deal with problems that are provided in the form of exercise sheets. Solutions to these exercises will be discussed in the tutorials.,"Slides, whiteboard sketches","D. Austen-Smith and J. Banks: Positive Political Theory I, University of Michigan Press, 1999.
M. R. Garey and D. S. Johnson. Computers and Intractability: A Guide to the Theory of NP-Completeness. W. H. Freeman, 1979.
W. Gärtner: A Primer in Social Choice Theory, Oxford University Press, 2009.
J. Laslier. Tournament Solutions and Majority Voting. Springer-Verlag, 1997.
H. Moulin. Axioms of Cooperative Decision Making. Cambridge University Press, 1988.
A. Taylor. Social Choice and the Mathematics of Manipulation, Cambridge University Press, 2005.",73,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/557075/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI74351,Convex Optimization,6.0,-,from Winter semester 2017/18,"Utschick, Wolfgang",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"Written examination, 90 min (evaluation of basic theoretical concepts presented in the lecture and tutorials). Up to 20% of the examination can be conducted in the form of multiple choice questions.With maximally 5 sheets of A4 paper as helping material, the students formulate, classify, and solve convex optimization problems. They answer comprehension questions and are able to discuss the different algorithms to obtain the solutions.",Yes,No,Linear Algebra and Calculus.,"After successfully passing the module, the students are able to characterize given mathematical optimization problems in terms of convex analysis on convex sets and convex functions and to derive optimality conditions related to F. John (FJ) and W. Karush, H. W. Kuhn and A. W. Tucker (KKT) for equality and inequality constraints, including the discussion of qualification constraints. Furthermore, the students are able to derive and to apply the weak and strong duality theorem and the saddle point theorem for the analysis and the appropriate reformulation of given optimization problems into prior and dual optimization problems and their related primal reconstruction algorithms. The student will be able to derive and apply gradient and subgradient based optimization methods and to take into account respective algorithms for a step size control. The students are also able to derive and apply the cutting plane method to reformulate convex optimization problems into a series of linear master problems. Finally, the students are able to derive and to apply a variety of state-of-the art algorithms, namely the simplex algorithm for linear programs, the gradient descent and the Newton algorithms for convex optimization problems, the Armijo-Goldstein rule for step-size control, and a few basis versions of interior point solvers.","Introduction: basic definitions and fundamentals, problem statement.
Convex analysis: convex sets, convex functions.
Linear programming: extremal points and directions, simplex algorithm.
Optimality conditions: Fritz John conditions, Karush-Kuhn-Tucker conditions, constraint qualifications.
Lagrangian duality: duality theorems.
Algorithms: general concept, unconstrained optimization, constrained optimization.
Solutions for the dual problem: sub gradient method, cutting plane algorithm.
Interior-point method: barrier functions, IP algorithm.
Applications: problems form multi-user information theory, resource allocation, parameter optimization in layered and distributed communication systems.Introduction: basic definitions and fundamentals, problem statement.
Convex analysis: convex sets, convex functions.
Linear programming: extremal points and directions, simplex algorithm.
Optimality conditions: Fritz John conditions, Karush-Kuhn-Tucker conditions, constraint qualifications.
Lagrangian duality: duality theorems.
Algorithms: general concept, unconstrained optimization, constrained optimization.
Solutions for the dual problem: sub gradient method, cutting plane algorithm.
Interior-point method: barrier functions, IP algorithm.
Applications: problems form multi-user information theory, resource allocation, parameter optimization in layered and distributed communication systems.","Learning method:
In addition to the individual methods of the students, consolidated knowledge is aspired by repeated lessons in exercises and tutorials.
Teaching method:
During the lectures, students are instructed in a teacher-centric style. The exercises are held in a student-centenered way.","The following kinds of media are used:
- Presentations
- Lecture notes
- Exercises with solutions as download.","The following literature is recommended:
- M. S. Bazare, H. D. Serail, and C. M. Shetty. Nonlinear Programming: Theory and Algorithms. Wiley, 2006.
- D. Bertsekas and A. Nedic. Convex Analysis and Optimization. Athena Scientific, 2003.
- S. Boyd and L. Vandenberghe. Convex Optimization. Cambridge, 2004.",74,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1408213/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT413031,Fundamentals of Optimization for Machine Learning,5.0,-,from Winter semester 2023/24,"Sra, Suvrit",Department of Mathematics,-,Master,-,-,one semester,irregularly,English,-,150.0,45.0,105.0,-,No,Yes,-,-,--,-,-,-,75,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3863914/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2360,Advanced Algorithms,6.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,180.0,75.0,105.0,"The exam takes the form of a written test of 120 minutes. In the written exam, based on the questions posed, the students are intended to prove that they have fundamental and advanced knowledge in the design and analysis of algorithms. The students demonstrate that they are able to recognize and analyze algorithmic problems and to find efficient solutions within a limited amount of time.",No,Yes,"IN2007 Foundations: Algorithms and Data Structures, 
IN0015 Discrete Structures, 
IN0018 Discrete Probability Theory","The participants have a profound knowledge of various fundamental principles in the design and analysis of algorithms, as listed above, and of several paradigmatic applications.","The module covers fundamental and classical material in the area of advanced algorithms. The material focuses on basic algorithm design and analysis principles. Specifically, it addresses greedy approaches, divide and conquer, dynamic programming, randomization, and amortization. These techniques are applied to develop solutions to cornerstone algorithmic problems. The agenda of the course encompasses the following topics.
Divide and Conquer: Introduction -- deterministic Quicksort; geometric divide and conquer; closest pair problem; line segment intersection; Fast Fourier Transform (FFT).

Introduction to Randomized Algorithms: Las Vegas and Monte Carlo algorithms; primality test;
RSA cryptosystem; verifying matrix multiplication.

Data Structures: Treaps -- randomized search trees; universal and perfect hashing; construction of suffix trees.

Amortized Analysis: Dynamic tables; Fibonacci heaps.

Greedy Algorithms: Interval scheduling; scheduling to minimize lateness; shortest paths in a graph.

Dynamic Programming: Matrix-chain multiplication; construction of optimal search trees; segmented least squares; edit distance; approximate string matching; sequence alignment.

Graph Problems: Maximum-flow problem; computation of minimum cuts.

Complexity: PSPACE -- A class of problems beyond NP; extending the limits of tractability. 

Selected topics: Stable marriage; local search; median computation; routing on the hypercube;
the probabilistic methodThe module covers fundamental and classical material in the area of advanced algorithms. The material focuses on basic algorithm design and analysis principles. Specifically, it addresses greedy approaches, divide and conquer, dynamic programming, randomization, and amortization. These techniques are applied to develop solutions to cornerstone algorithmic problems. The agenda of the course encompasses the following topics.
Divide and Conquer: Introduction -- deterministic Quicksort; geometric divide and conquer; closest pair problem; line segment intersection; Fast Fourier Transform (FFT).

Introduction to Randomized Algorithms: Las Vegas and Monte Carlo algorithms; primality test;
RSA cryptosystem; verifying matrix multiplication.

Data Structures: Treaps -- randomized search trees; universal and perfect hashing; construction of suffix trees.

Amortized Analysis: Dynamic tables; Fibonacci heaps.

Greedy Algorithms: Interval scheduling; scheduling to minimize lateness; shortest paths in a graph.

Dynamic Programming: Matrix-chain multiplication; construction of optimal search trees; segmented least squares; edit distance; approximate string matching; sequence alignment.

Graph Problems: Maximum-flow problem; computation of minimum cuts.

Complexity: PSPACE -- A class of problems beyond NP; extending the limits of tractability. 

Selected topics: Stable marriage; local search; median computation; routing on the hypercube;
the probabilistic method","The module consists of a lecture and a tutorial. The content of the lectures is conveyed by oral presentations. By solving the homework assignments, the students are encouraged to work on the various scientific topics. The solutions of the assignments are discussed in the tutorials. The students get individual feedback on their learning success by having their homework assignments corrected..","Slides, whiteboard, homework assignments","T.H. Cormen, C.E. Leiserson, R.L. Rivest, C. Stein: Introduction to Algorithms. MIT Press, 2009.
J. Kleinberg, E. Tardos: Algorithm Design. Pearson. Addison Wesley, 2006. 
M. Mitzenmacher, E. Upfal: Probability and Computing: Randomized Algorithms and Probabilistic Analysis. Cambridge University Press, 2005.
T. Ottmann, P. Widmayer: Algorithmen und Datenstrukturen. Springer Verlag, 2012.",76,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1493752/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI7356,Network Planning,5.0,-,from Summer semester 2013,"Kellerer, Wolfgang",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,45.0,105.0,Written examination,Yes,No,"Basic Knowledge of Communication Networks

The following modules should be passed before taking the course:
- Communication Networks Lab
- Broadband Communication Networks","The aim is to have detailed knowledge of the methods for planning of communication networks and the skills to apply them. 
Students will practically model and solve planning problems with the student version of AMPL.","Introduction: Motivation, Range of Tasks, Application Areas, Classification, Planning Process, Traffic Engineering
Related Optimization Fundamentals: Mathematical Formulation, Categories, Solution Methods (principles of exact and heuristic methods)
Traffic and Demand Modeling: Traffic Types, Modeling, Forecasting
Network Topology Design: Initial Planning, Extension Planning, Site Selection
Network Dimensioning: Approaches for Circuit and Packet Switched Networks, Optimization Problems, Representative Heuristics
Resilience Planning: Redundancy Concepts, Disjointness, Resource Sharing
Generalizations: Multilayer Planning, Multiperiod Planning
Access Networks Planning: Overview, Selected Problems
Mobile Networks Planning: Overview (delineation with  Resource Management in Wireless Networks  course)
Post-Planning Analysis: Network Simulation, Availability Analysis
In Practice: Network Planning Tools, Economics AspectsIntroduction: Motivation, Range of Tasks, Application Areas, Classification, Planning Process, Traffic Engineering
Related Optimization Fundamentals: Mathematical Formulation, Categories, Solution Methods (principles of exact and heuristic methods)
Traffic and Demand Modeling: Traffic Types, Modeling, Forecasting
Network Topology Design: Initial Planning, Extension Planning, Site Selection
Network Dimensioning: Approaches for Circuit and Packet Switched Networks, Optimization Problems, Representative Heuristics
Resilience Planning: Redundancy Concepts, Disjointness, Resource Sharing
Generalizations: Multilayer Planning, Multiperiod Planning
Access Networks Planning: Overview, Selected Problems
Mobile Networks Planning: Overview (delineation with  Resource Management in Wireless Networks  course)
Post-Planning Analysis: Network Simulation, Availability Analysis
In Practice: Network Planning Tools, Economics Aspects","Lerning method:
In addition to the individual methods of the students further knowledge is gained by own lab experiments and reading of books. Sample examinations are available.

Teaching method:
During the lectures students are instructed in a teacher-centered style. The exercises are a mixture of question-based exercises and lab experiments. Interation between students and teacher is steadily performed.","The following kinds of media are used:
- Presentations: slides, software usage
- Exercises and slides as download
- Whiteboard
- Software at terminals in lecture room","The following literature is recommended:
- W: D. Grover,  Mesh-based Survivable Networks,"" Prentice Hall, 2003.
- M. Pioro and D. Medhi, ""Routing, Flow, and Capacity Design in Communication and Computer Networks,"" Morgan Kaufmann, 2004.",77,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/965554/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2304,Online and Approximation Algorithms,8.0,-,Always,"Albers, Susanne",Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,English,-,240.0,90.0,150.0,"The examination will be in the form of a 120-minute written examination. In this exam, students demonstrate that they have fundamental and advanced knowledge in the field of online and approximation algorithms. The students prove that they can recognize and analyze corresponding algorithmic problems in a limited time and find ways to an efficient solution.",No,Yes,"IN0007 Fundamentals of Algorithms and Data Structures, IN0011 Introduction to Theory of Computation, IN0015 Discrete Structures","The participants of the module know the results of the fundamental online problems investigated, especially in the area of resource management, data structuring and scheduling, as well as the NP-hard graph, fulfillability and packing problems studied. Furthermore, they master the analysis concept of amortization and the algorithm design technique based on LP formulations. They can apply the results and concepts learned to solve new algorithmic problems.","In the international algorithms community one research focus over the past years has been the design of online and approximation algorithms. Here the general goal is to develop approximate solutions to problems for which the computation of exact solutions is hard or even impossible.
Online algorithms: Classical algorithm theory assumes that, for a given problem, all data is known in advance. However, in practice, many problems are online, i.e. relevant input arrives incrementally over time. We will design algorithms that can cope with the handicap of not knowing the future. We will study problems in data structuring, the resource management in operating systems, robotics and large networks.
Approximation algorithms: Many optimization problems that arise in practice are NP-hard. Assuming that P is not equal NP, these problems cannot be solved optimally in polynomial time. Again, one resorts to approximations. Of particular interest are polynomial time approximation schemes that compute (1+epsilon)-approximations, for any epsilon > 0, in polynomial time. We will study approximation algorithms for classical optimization problems.
Emphasis of the course, beside algorithm design, is the careful and thorough mathematical analysis of the various strategies and solutions.In the international algorithms community one research focus over the past years has been the design of online and approximation algorithms. Here the general goal is to develop approximate solutions to problems for which the computation of exact solutions is hard or even impossible.
Online algorithms: Classical algorithm theory assumes that, for a given problem, all data is known in advance. However, in practice, many problems are online, i.e. relevant input arrives incrementally over time. We will design algorithms that can cope with the handicap of not knowing the future. We will study problems in data structuring, the resource management in operating systems, robotics and large networks.
Approximation algorithms: Many optimization problems that arise in practice are NP-hard. Assuming that P is not equal NP, these problems cannot be solved optimally in polynomial time. Again, one resorts to approximations. Of particular interest are polynomial time approximation schemes that compute (1+epsilon)-approximations, for any epsilon > 0, in polynomial time. We will study approximation algorithms for classical optimization problems.
Emphasis of the course, beside algorithm design, is the careful and thorough mathematical analysis of the various strategies and solutions.","The module consists of a lecture and an accompanying exercise. The contents of the lecture are conveyed in the lecture and through presentation. In particular, students are stimulated to deal with the content of the topics by solving exercise sheets. The solution of the exercises will be discussed in the exercise. In addition, the students receive individual feedback on their learning success by correcting the exercise sheets.","Slides, black-/whiteboard, assignment sheets","-A. Borodin und R. El-Yaniv. Online Computation and Competitive Analysis. Cambridge University Press, Cambridge, 1998. ISBN 0-521-56392-5.
- V.V. Vazirani. Approximation Algorithms. Springer Verlag, Berlin, 2001. ISBN 3-540-65367-8.",78,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/977328/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MW2249,Optimization and Model Analysis,5.0,2014W,from Winter semester 2014/15,"Kremling, Andreas",Associate Professorship of Systems biotechnology (Prof. Kremling),-,Master,-,-,one semester,winter semester,German/English,-,150.0,60.0,90.0,The strived learning results will be controlled by questions to selected topics of the module and by short arithmetic problems. The exam lasts 90 minutes (written exam). No auxiliary means are allowed. The exam will be offered in every semester.,Yes,No,Prerequisite for a successful participation is basic mathematical knowledge that is taught at scientific university.,"After visiting the course the participants are able to formulate optimization problems in mathematical terms, they possess basic knowledge on the solution strategies for optimization problems, and they can perform a sensitivity and stability analysis.","In the course basics of different optimization strategies, tools for model analysis and numerical algorithms will be taught. 
Main topics are: 
- Maxima and minima for one and two variables 
- Linear programming 
- Optimization problems with stoichiometric networks 
-  Linear regression 
- dynamic optimization 
- Mixed Integer programmingIn the course basics of different optimization strategies, tools for model analysis and numerical algorithms will be taught. 
Main topics are: 
- Maxima and minima for one and two variables 
- Linear programming 
- Optimization problems with stoichiometric networks 
-  Linear regression 
- dynamic optimization 
- Mixed Integer programming",The matter of the course will be taught by sketches on the blackboard and with the help of PowerPoint presentations. Important topics will be recapitulated and will be deepened in exercises. The students get exercise problems that will be solved by the lecturer and will be discussed with the audience. This allows self-control of the students.,Slides used during the lectures will be available for all students in time. Exercise problems will be provided regularly and sample solutions will be discussed with the students.,"Textbooks to specific topics are available: Metabolic Engineering: Principles and Methodologies (v. G. Stephanopoulos, J. Nielsen und G. Stephanopoulos, Academic Press, 1998),  Linear programming with MATLAB (v. M. C. Ferris u. a., MPS- SIAM Series on Optimization, 2007), Theory of linear and integer programming (v. A. Schrijver, J. Wiley and Sons, 2000), Systems Biology (A. Kremling, 2013)",79,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1085813/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI5052,Time-Varying Systems and Computations,6.0,-,Always,"Diepold, Klaus",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,90.0,90.0,"During an oral exam students proof taht they are able to extrapolate their abilitys acquired during the module to given problems.

The ability of team-oriented problem solving is assessed by problem-based homeworks (programming tasks) during the lecture period. For the assessment 4 work-sheets are handed out and graded.

Reading- and understanding competence as well as written communication skills are assesses with home-written essays. For the assessment 4 reading tasks are handed out for the students to answer questions and discuss.

Oral communication skills are assessed by a short presentation. Students present and explain topic-related and application-oriented literature to each other.

The final grade consists of:
exam: 50%
programming tasks: 30%
essays: 10%
presentation: 10%",Yes,No,"Working Knowledge of (numerical) Linearer Algebra, Linear Time-Invariant System Theory, Fundamentals of Signal Processing, Programming Skills in Matlab;

We expect students to have knowledge of material, which is taught  in the following Bachelor courses at TUM:
-  Signale, Systeme, Regelungstechnik, Lineare Algebra (1.Semester), Numerische Mathematik (4.Semester)

It is recommended to have particpated in the courses: 
- Projektkurs Matlab (MSc)
- Numerical Methods of Electrical Engineering (MSc)",After the course the student can create Matlab programs implementing efficient algorithms for solving large-scale and structured computational linear algebra problems for engineering applications. Students can analyse the effectiveness and efficiency of comutational linear algebra algorithms. The can analyse compuational engineering problems and express them in terms of linear time-varying systems concepts. Students can read and understand current research papers on the subject of efficient computations and explain their learnings to others in terms of oral and written communication.,"Review of time-invariant systems and signals, Large scale computations in engineering and science, Computational problems involving Toeplitz matrices, Realization theory for LTI systems, Computational linear algebra and time-varying systems, State-space representation of LTV systems, Realization theory for LTV systems, Isometric and inner operators, inner-outer factorization, and operator inversion, Semi-seperable matrix structure. Mapping algorithms onto GPU architectures.Review of time-invariant systems and signals, Large scale computations in engineering and science, Computational problems involving Toeplitz matrices, Realization theory for LTI systems, Computational linear algebra and time-varying systems, State-space representation of LTV systems, Realization theory for LTV systems, Isometric and inner operators, inner-outer factorization, and operator inversion, Semi-seperable matrix structure. Mapping algorithms onto GPU architectures.","The course consists of a lecture given on a black board, which includes discussions of reading assignements (concept of inverted classroom; classical or current research papers on the subject), the exercises consists mainly of tipps, tricks and hints for the students to support them to accomplish their project tasks (programming), as well as answering specific questions asked by students, the exercises may also contain complementary presentations to selected mathematical topics, the students shall work in small teams (3-4 persons) in order to deliver about 5 project tasks throughout the semester, those project tasks will be problems that students need to write a program in Matlab to produce the requested results, the delivered solutions will be discussed with students to provide detailed feedback on their status. Students will also be asked to read literature, to produce correpsonding posters and present the content to all fellow students.","The following media types will be used:
- Frontal Presentation using Blackboard
- Guest Lecturers
- student presentations
- Write-up of lecture material (via download from Website), 
- Literature reading assignments
- team-oriented programming tasks 
- Matlab-Demos","The course will be based on material contained in the following books:
- P. Dewilde, A.-J. van der Veen. Time-Varying Systems and Computations. Kluwer Academic Publishers, 1998.
- G. Strang. Linear Algebra and its Applications. Hartcourt Brace Jovanovich Publishers, San Diego, 1988.
- G. Strang. Computational Science and Engineering. Wellesley-Cambridge Press, 2007.
- T. Kailath. Linear Systems. Prentice Hall, 1980.
- A.C. Antoulas. Approximation of Large-Scale Dynamical Systems. Advances in Design and Control. SIAM, Philadelphia, 2005.",80,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/452550/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3200,Selected Topics in Computer Graphics and Vision,5.0,-,Always,Westermann,Department of Computer Science,5 ECTS from SS18,Master,-,-,one semester,irregularly,German/English,-,,,,The academic assessment will be done by a written exam. Assignments checking knowledge verify the familiarity with the main concepts of selected topics in Computer Graphics and Vision. Transfer assignments and small scenarios check the ability to apply and evaluate these concepts systematically and in a qualified manner.,No,Yes,Bachelor in Informatics,Participants know the state of the art in selected topics in Computer Graphics and Vision and are able to deal with current research projects.,Different lecturers offer courses about selected topics in Computer Graphics and Image Understanding with a varying amount of credits. Master students in Informatics may choose this module only once as an elective module in the field of Computer Graphics and Image Understanding (CGV).Different lecturers offer courses about selected topics in Computer Graphics and Image Understanding with a varying amount of credits. Master students in Informatics may choose this module only once as an elective module in the field of Computer Graphics and Image Understanding (CGV).,"By means of a presentation, either by slides or whiteboard, the lecture presents selected concepts and techniques 
from the area of Computer Graphics and Image Understanding and illustrates these by examples.
Possbly accompanying assignments for individual study may deepen the understanding of the concepts explained in the 
module, train students to apply the learnt concepts and techniques to solve reasonably sized tasks on their own.","Slides, whiteboard, exercise sheets, excercises, presentation","Primary source scientific literature (e.g. journals, conference proceedings), depending on the topic",82,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/480428/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2389,Advanced Deep Learning for Computer Vision: Dynamic Vision,8.0,-,from Summer semester 2021,Leal,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,English,-,240.0,75.0,165.0,"- Written test of 60 minutes at the end of the course (for lecture)
- The lecture will have reading assignments (e.g., from the DeepLearning book and recent CVPR/ICCV/ECCV papers)
- After each practical session, the students will have to provide the written working code to the teaching assistant for evaluation. The students will be awarded a bonus in case they successfully complete all practical assignments.
- In the written exam, we will ask questions regarding lecture theory
- In addition, to the written exam, the results of the projects will be evaluated; we will evaluate projects on a (bi-)weekly basis including reports (33.33%), oral presentations (33.33%), and code/submissions (33.33%).",No,Yes,"MA0902 Analysis for Informatics
MA0901 Linear Algebra for Informatics
IN2346 Introduction to Deep Learning (expert knowledge required!)
IN2375 Computer Vision 3: Detection, Segmentation, and Tracking

This is the advanced lecture for deep learning with a specific focus on computer vision for video analysis. Taking the “Introduction to Deep Learning” course is expected.","Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks, in particular in the context of video analysis for computer vision tasks. In addition to the theoretical foundations, a significant aspect lies on the practical realization and training of neural networks.","Note, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Visual Computing”. The two lectures share some theoretical content, but the “Dynamic Vision” module provides a clear focus on video analysis tasks, which is especially important for the practical part in the form of a semester-long project.

Common lectures with “ADL4CV: Visual Computing” lecture:
- Recap of Neural Networks and CNNs
- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)
- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs) 
- Autoregressive Networks and their parallelization
- Probabilistic vs deterministic generative methods
- Graph neural networks
- Transformers
- Open Problems in Deep Learning for Computer Vision

Unique lectures for this module:
- Siamese neural networks and deep metric learning
- Visualization techniques
- Multi-dimensional CNNs: spatio-temporal neural networks.
- Active learning and semi-supervised learningNote, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Visual Computing”. The two lectures share some theoretical content, but the “Dynamic Vision” module provides a clear focus on video analysis tasks, which is especially important for the practical part in the form of a semester-long project.

Common lectures with “ADL4CV: Visual Computing” lecture:
- Recap of Neural Networks and CNNs
- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)
- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs) 
- Autoregressive Networks and their parallelization
- Probabilistic vs deterministic generative methods
- Graph neural networks
- Transformers
- Open Problems in Deep Learning for Computer Vision

Unique lectures for this module:
- Siamese neural networks and deep metric learning
- Visualization techniques
- Multi-dimensional CNNs: spatio-temporal neural networks.
- Active learning and semi-supervised learning","The lectures will provide extensive theoretical aspects of neural networks and in particular deep learning architectures, specifically for advanced methods in the field of Computer Vision for video analysis. 
The practical sessions will be key, students shall get familiar with Deep Learning through hours of training and testing. They will work with PyTorch and implement advanced network architectures. The project will have a clear focus on video analysis, following the research topics of the group, including the following topics:
-	Multi-object tracking
-	Video object segmentation
-	Trajectory prediction
-	Panoptic segmentation
-	Active learning for videos
-	Video anonymization with GANs
-	Pose estimation
We recommend to take a look at the recent list of publications at https://dvl.in.tum.de to get a better idea of recent research projects.","Projector, blackboard, PC","- Slides given during the course
- www.deeplearningbook.org",83,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2809077/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2238,Analysis of Three-Dimensional Shapes,8.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,English,-,240.0,90.0,150.0,At the end of the semester the understanding of the covered topics will be evaluated in an oral exam of 30 minutes. Content from the lecture as well as from the exercises will be part of the exam. Questions allow to assess acquaintance with the foundations of Differential geometry and discretizations of continuous objects and operators. Small programming tasks assess the ability to conceive appropriate algorithmic solutions to analyze and compare three-dimensional shapes.,No,Yes,"The requirements for the class are knowledge in basic mathematics, in particular multivariate analysis and linear algebra.","At the end of the module, students are familiar with continuous and discrete representations of three-dimensional shapes. Participants understand methods to analyze and compare three-dimensional shapes given in different representations and are able to implement these methods.","It is a classical problem in Machine Vision to represent, analyze and compare three-dimensional shapes. In the last years this field has known a fast development leading to a number of very powerful algorithms with a solid mathematical foundation. In this course we will present some of these, discussing both, the mathematics involved and the practical issues for the implementation.

Topics we plan to cover include:
- Foundations of Differential Geometry of surfaces (tangent spaces, shape operator, metric, geodesics and their discrete versions)
- Detection of intrinsic symmetries
- Matching pairs or a collection of shapes
- The Gromov-Hausdorff distance and its variants
- Spectral methods (i.e. Laplace-Beltrami operators and their eigenspaces)
- Conformal geometry applied to shape analysis
- Shape matching based on continuum mechanics
- Pointwise feature descriptors
- Machine learning applied to 3D shape analysisIt is a classical problem in Machine Vision to represent, analyze and compare three-dimensional shapes. In the last years this field has known a fast development leading to a number of very powerful algorithms with a solid mathematical foundation. In this course we will present some of these, discussing both, the mathematics involved and the practical issues for the implementation.

Topics we plan to cover include:
- Foundations of Differential Geometry of surfaces (tangent spaces, shape operator, metric, geodesics and their discrete versions)
- Detection of intrinsic symmetries
- Matching pairs or a collection of shapes
- The Gromov-Hausdorff distance and its variants
- Spectral methods (i.e. Laplace-Beltrami operators and their eigenspaces)
- Conformal geometry applied to shape analysis
- Shape matching based on continuum mechanics
- Pointwise feature descriptors
- Machine learning applied to 3D shape analysis","Lecture, exercise course (theory and programming)",-,"Differential Geometry of Surfaces:
- Do Carmo: Differential Geometry of Curves and Surfaces, Prentice-Hall 1976
- Kühnel: Differentialgeometrie, Kurven – Flächen – Mannigfaltikeiten

Gromov-Hausdorff Distance:
- Memoli, Sapiro: A theoretical and computational framework for the isometry invariant recognition of point cloud data, Foundations of Computational Mathematics, 2005
- Bronstein, Bronstein, Kimmel: Numerical Geometry of Non-Rigid Shapes, Srpinger 2008

Spectral Methods: 
- Reuter et al.: Laplace-Beltrami spectra as ""Shape-DNA"" of surfaces and solids, Computer-Aided Design 2006

Conformal Geometry:
- Gu, Vemuri: Matching 3D Shapes Using 2D Conformal Representations. MICCAI 2004
- Lipman, Daubechies: Surface Comparison With Mass Transportation, Technical report 2009, available on arxiv.org

Continuum Mechanics:
- Rumpf, Wirth: Variational methods in shape analysis, In: Handbook of Mathematical Methods in Imaging, 2010",84,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/608652/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2124,Basic Mathematical Methods for Imaging and Visualization,5.0,-,Always,"Navab, Nassir",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"Type of Assessment: written exam.

The exam takes the form of a 75-minute written test, in which the students, based on the questions posed, are intended to demonstrate their knowledge of the basic mathematical methods as well as their ability to apply those methods successfully when solving basic abstract mathematical problems. In addition, by answering questions about concrete applications in image processing and computer vision, the students are expected to show that they can formulate applied problems mathematically, that they can analyze their mathematical properties, and that they can solve them using suitable methods.",No,Yes,"IN0015 Discrete Structures, IN0018 Discrete Probability Theory, IN0019 Numerical Programming, MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics","Upon successful completion of the module, participants understand the basic mathematical techniques and methods. They are then able to formulate real problems in the field of imaging and visualization mathematically, and to select methods for solving the problem, to optimize them and to evaluate them. They will also be able to apply these techniques and methods to other engineering disciplines such as artificial intelligence, machine learning, computer graphics, robotics etc.","Basic and most commonly applied techniques will be presented in the lectures and demonstrated in example applications from Image Processing and Computer Vision. The same mathematical methods are also applied in other engineering disciplines such as artificial intelligence, machine learning, computer graphics, robotics etc.

The module IN2124 is covering topics such as:
- Linear Algebra
	++ linear spaces and bases
	++ linear mappings and matrices
	++ linear equation systems, solving linear equation systems
	++ least squares problems
	++ eigen value problems and singular value decomposition
- Analysis
	++ metric spaces and topology
	++ convergence, compactness
	++ continuity and differentiability in multiple dimension, taylor expansion
- Optimization
	++ existence and uniqueness of minimizers, identification of minimizers
	++ gradient descent, conjugate gradient
	++ Newton method, fixed point iteration
- Probability theory
	++ probability spaces, random variables
	++ expectation and conditional expectation
	++ estimators, expectation maximization method

In the exercises the participants have the opportunity to gain deeper understanding and to collect practical experience while implementing or applying the methods in order to solve real problems, .Basic and most commonly applied techniques will be presented in the lectures and demonstrated in example applications from Image Processing and Computer Vision. The same mathematical methods are also applied in other engineering disciplines such as artificial intelligence, machine learning, computer graphics, robotics etc.

The module IN2124 is covering topics such as:
- Linear Algebra
	++ linear spaces and bases
	++ linear mappings and matrices
	++ linear equation systems, solving linear equation systems
	++ least squares problems
	++ eigen value problems and singular value decomposition
- Analysis
	++ metric spaces and topology
	++ convergence, compactness
	++ continuity and differentiability in multiple dimension, taylor expansion
- Optimization
	++ existence and uniqueness of minimizers, identification of minimizers
	++ gradient descent, conjugate gradient
	++ Newton method, fixed point iteration
- Probability theory
	++ probability spaces, random variables
	++ expectation and conditional expectation
	++ estimators, expectation maximization method

In the exercises the participants have the opportunity to gain deeper understanding and to collect practical experience while implementing or applying the methods in order to solve real problems, .","The module consists of lectures and tutorial sessions. The content of the lectures is conveyed in presentations of scientific material via slides and blackboard. By solving homework assignments, the students are encouraged to work intensively on the respective topics and their applications. The solutions of the assignments are discussed in the tutorial sessions.","slide presentation, blackboard","MATLAB
- Cleve Moler, first chapter of Numerical Computing with MATLAB, SIAM Linear Algebra
- Yousef Saad, Iterative Methods for Sparse Linear Systems, SIAM
- Lloyd N. Trefethen and David Bau, Numerical Linear Algebra, SIAM
- Gilbert Strang, Introduction to Linear Algebra, Wellesley-Cambridge Press Analysis
- Walter Rudin, Real and Complex Analysis, McGraw-Hill Optimization
- Ake Björck, Numerical Methods for Least Squares Problems, SIAM
- Jonathan Shewchuk, An Introduction to the Conjugate Gradient Method Without the Agonizing Pain
- Uri Ascher, A first course in numerical methods, SIAM Probability Theory
- Heinz Bauer, Measure and Integration Theory, deGruyter
- Sheldon Ross, Introduction to probability and statistics for engineers and scientists, Elsevier PDEs
- Lloyd Nick Trefethen , Finite Difference and Spectral Methods for Ordinary and Partial Differential Equations
- Cleve Moler, chapter 11 of Numerical Computing with MATLAB, SIAM",85,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/480825/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2023,Image Understanding I: Machine Vision Algorithms,3.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,neuer Titel ab WS 11/12,Master,-,-,one semester,summer semester,German,-,90.0,30.0,60.0,"The exam takes the form of a 60 minutes written test. Application questions assess the ability to analyze, evaluate, and create realistic machine vision applications. Knowledge questions assess the acquaintance with the hardware components and algorithms of machine vision as well as the suitability of the choice of hardware components and algorithms to solve a particular application.",No,Yes,"The lecture requires basic knowledge of the following fields: linear algebra (linear transformations between vector spaces expressed in matrix algebra), calculus (in particular, sums and differentiation and integration of one- and two-dimensional functions).","Participants of this lecture will have a thorough understanding of the essential hardware components of a machine vision system as well as the theory, data structures, and implementation of the most important machine vision algorithms. They are capable of analyzing and evaluating machine vision tasks and can use their knowledge and skills to create machine vision applications.","The lecture provides a detailed description of methods and algorithms that are relevant in practice for solving industrial vision applications. The selection of methods is based on the most important application domains of image processing in industry: positioning/alignment, metrology, and object recognition. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. In detail, the following topics are covered:
- Image acquisition
- Image enhancement
- Segmentation and feature extraction
- Morphology
- Edge extraction
- Segmentation and fitting of geometric primitives
- Camera calibration
- Template matchingThe lecture provides a detailed description of methods and algorithms that are relevant in practice for solving industrial vision applications. The selection of methods is based on the most important application domains of image processing in industry: positioning/alignment, metrology, and object recognition. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. In detail, the following topics are covered:
- Image acquisition
- Image enhancement
- Segmentation and feature extraction
- Morphology
- Edge extraction
- Segmentation and fitting of geometric primitives
- Camera calibration
- Template matching",Lecture (presentation of slides and interactive examples),PowerPoint,"Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision Algorithms and Applications; Wiley-VCH, Weinheim, 2007",86,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473853/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2016,Image Understanding II: Robot Vision,4.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,neuer Titel seit WS 11/12,Master,-,-,one semester,winter semester,German/English,-,120.0,45.0,75.0,"The exam takes the form of a written 60 minutes test. Application questions assess the ability to analyze, evaluate, and create realistic robot vision and machine vision applications. Knowledge questions assess the acquaintance with the algorithms of robot vision and machine vision as well as the suitability of the choice of algorithms to solve a particular application.",No,Yes,"IN2023 Image Understanding I: Machine Vision Algorithms;
basic knowledge of the following fields:
- linear algebra (linear transformations between vector spaces expressed in matrix algebra)
- calculus (in particular, sums and differentiation and integration of one- and two-dimensional functions)
- Probability theory","Participants of this lecture will have a thorough understanding of the theory, data structures, and implementation of the most important algorithms that are used in robot vision and machine vision. They are capable of analyzing and evaluating machine vision tasks and can use their knowledge and skills to create robot vision and machine vision applications.","The lecture provides a detailed description of methods and algorithms that are relevant in practice for solving robot vision and machine vision applications. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. The topics topics that are covered include:
- Feature extraction
- Classification
- Color image processing
- Identification (bar codes, OCR)
- Hand-eye calibration
- Object recognitionThe lecture provides a detailed description of methods and algorithms that are relevant in practice for solving robot vision and machine vision applications. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. The topics topics that are covered include:
- Feature extraction
- Classification
- Color image processing
- Identification (bar codes, OCR)
- Hand-eye calibration
- Object recognition",Lecture (presentation of slides and interactive examples),PowerPoint,"Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision
Algorithms and Applications; Wiley-VCH, Weinheim, 2007",87,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458310/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2246,Computer Vision I: Variational Methods,8.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,seit WS15/16 neuer Titel und 8 ECTS,Master,-,-,one semester,irregularly,English,-,240.0,90.0,150.0,The exam takes the form of a 120 minutes written test. In the written exam students should prove that they understood the basic concepts of variational methods. The questions will focus on the key concepts which have been discussed during the lecture and the tutorials. Mathematical proofs of the central concepts and questions about the implementation in Matlab assess acquaintance with the concepts in variational image processing.,No,Yes,"MA0901 Linear Algebra for Informatics
MA0902 Analysis for Informatics","Upon successful completion of the module the participants understand the basic concepts of variational methods on a fundamental, scientific and practical level. 
They are able to efficiently solve variational problems and to implement the solution with Matlab.","Variational Methods are among the most classical techniques for optimization of cost functions in higher dimension. 
Many challenges in Computer Vision and in other domains of research can be formulated as variational methods. 
Exemples include denoising, deblurring, image segmentation, tracking, optical flow estimation, depth estimation from stereo images or 3D reconstruction from multiple views.
In this class, the basic concepts of variational methods will be introduced :
- The Euler-Lagrange calculus and partial differential equations
- Formulation of computer vision and image analysis challenges as variational problems
- Efficient solution of variational problems
- Discussion of convex formulations and convex relaxations to compute optimal or near-optimal solutions in the variational setting
The key concepts will be implemented in Matlab to provide hands-on experience.Variational Methods are among the most classical techniques for optimization of cost functions in higher dimension. 
Many challenges in Computer Vision and in other domains of research can be formulated as variational methods. 
Exemples include denoising, deblurring, image segmentation, tracking, optical flow estimation, depth estimation from stereo images or 3D reconstruction from multiple views.
In this class, the basic concepts of variational methods will be introduced :
- The Euler-Lagrange calculus and partial differential equations
- Formulation of computer vision and image analysis challenges as variational problems
- Efficient solution of variational problems
- Discussion of convex formulations and convex relaxations to compute optimal or near-optimal solutions in the variational setting
The key concepts will be implemented in Matlab to provide hands-on experience.","The main concepts will be presented in the lecture. During the tutorial, related exercises and discussions will deepen the understanding. Besides theoretical exercises, there will be programming exercises.","Tutor presentation, interactive problem solving, discussion","Mathematical Image Processing (Bredies, Lorenz)",88,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/672363/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2228,Computer Vision II: Multiple View Geometry,8.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,seit WS15/16 neuer Titel,Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,The exam takes the form of a 120 minutes written test. In the written exam students should prove that they understood the reconstruction of 3D geometry and camera motion from multiple images. The questions will focus on the key concepts which have been discussed during the lecture and the tutorials. Mathematical proofs of the central concepts and questions about the implementation in Matlab assess acquaintance with the concepts in multiple view geometry.,No,Yes,"MA0901 Linear Algebra for Informatics
MA0902 Analysis for Informatics","Upon successful completion of the module, students understand the mathematics of image formation and are able to recover camera motion and 3D geometry from images. Moreover, the students are able to implement the basic concepts in Matlab.","The module is focused on the mathematical aspects of multiple view geometry. The central challenge addressed in this class is the reconstruction of 3D geometry and camera motion from multiple images. To this end, the students will get a brief review of the main concepts of linear algebra (including matrix rank, SVD, various matrix groups). Students will learn about camera motion and perspective projection, camera calibration, epipolar geometry, the epipolar constraint, the 8-point algorithm, multiview matrices, rank constraints, bundle adjustment. Finally they will learn about the reconstruction of dense geometry. The key concepts will be implemented in Matlab to provide hands-on experience.The module is focused on the mathematical aspects of multiple view geometry. The central challenge addressed in this class is the reconstruction of 3D geometry and camera motion from multiple images. To this end, the students will get a brief review of the main concepts of linear algebra (including matrix rank, SVD, various matrix groups). Students will learn about camera motion and perspective projection, camera calibration, epipolar geometry, the epipolar constraint, the 8-point algorithm, multiview matrices, rank constraints, bundle adjustment. Finally they will learn about the reconstruction of dense geometry. The key concepts will be implemented in Matlab to provide hands-on experience.","The main concepts will be presented in the lecture. During the tutorial, related exercises and discussions will deepen the understanding. Besides theoretical exercises, there will be programming exercises.","Tutor presentation, interactive problem solving, discussion","An Invitation to 3D Vision (Y. Ma, S. Soatto, J. Kosecka, S. Sastry)
Multiple View Geometry in Computer Vision (R. Hartley, A. Zissermann)",89,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/608655/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2375,"Computer Vision III: Detection, Segmentation, and Tracking",6.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The exam takes the form of a written test. Questions allow to assess acquaintance with concepts and algorithms of deep learning for object detection, segmentation (both object as well as semantic) and multiple object tracking. Students demonstrate the ability to design, train, and optimize neural network architectures to solve these basic computer vision problems. 

- Written test of 90 minutes at the end of the course.
- The students will be awarded a rade bonus of 0.3 in the written exam in case they successfully complete all practical assignments. The processing and submission of the tasks is voluntary.
The assignments consist of programming tasks and analytical problems which closely follow the lecture material.
The submitted assignments receive evaluation from the teaching assistants to determine its successful completion and its count towards the grade bonus.",No,Yes,"IN2346 Introduction to Deep Learning
MA0902 Analysis für Informatiker 
MA0901 Lineare Algebra für Informatiker

Knowledge of Python and Pytorch is a must to complete the course practical assignments.","Upon completion of this module, students will have acquired theoretical concepts behind the object detection, segmentation and tracking algorithms. They will be able to implement their own solution to solve these practical real-world problems with deep learning.","-	Proposal-based object detection (Faster-RCNN)
-	One-stage detectors (YOLO, SSD, RetinaNet)
-	Point-based detection
-	Instance segmentation (Mask-RCNN)
-	Semantic segmentation
-	Panoptic segmentation
-	Video object segmentation (OSVOS)
-	Visual object tracking
-	Multiple object tracking 
-	Graph neural networks for object tracking
-	3D object tracking
-	Trajectory prediction-	Proposal-based object detection (Faster-RCNN)
-	One-stage detectors (YOLO, SSD, RetinaNet)
-	Point-based detection
-	Instance segmentation (Mask-RCNN)
-	Semantic segmentation
-	Panoptic segmentation
-	Video object segmentation (OSVOS)
-	Visual object tracking
-	Multiple object tracking 
-	Graph neural networks for object tracking
-	3D object tracking
-	Trajectory prediction","The lectures will provide extensive theoretical aspects of neural networks and in particular deep learning architectures for the problems of object detection, segmentation and tracking.
The practical sessions will allow the students to get familiar with state-of-the-art algorithms (implemented in PyTorch) and the tricks of trainings them for the aforementioned Computer Vision tasks.","Projector, blackboard, PC","Textbook (optional): Richard Szeliski. ""Computer Vision: Algorithms and Applications"". Springer Nature, 2022 (2nd Ed.)
The material is based primarily on recent research publications.
References will be provided during the lecture.",90,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1733754/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN0037,Game Physics,6.0,-,Always,Th,Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"The examination takes the form of a written test (90 minutes). Questions about knowledge check whether the students are familiar with concepts of physicals simulations. Short programming tasks with pseudo-code check their ability to perform physical calculations with suitable algorithms, and they're knowledge of realizing them with C++. Simple calculations check whether participants are familiar with the required calculations for the algorithms.",No,Yes,"IN0038 Real-time Computer Graphics, MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics","Participants acquire knowledge of the physical simulation of real phenomena, and effects which are increasingly prevalent in computer games. Participants will know about the physical models which were discussed, and can assess and apply corresponding numerical approaches for solving them with simple example calculations. Additionally, they are able to implement them. They can algorithmically explain these methods, and their usefulness for interactive environments and real-time applications. An additional goal of the curriculum is the ability to implement simulation algorithms and integration methods with the C++ programming language. Four non- mandatory exercises are offered during the semester. Here, students can check that they understood central simulation algorithms and integration methods, and that they can implement them with C++. The four exercises are integration methods, rigid-body simulation, collision detection, and a concluding project of choice (based on the topics covered in the lecture).","Concepts and methods from the areas: Foundations of animation and animation technologies, technical mechanics (kinematics, dynamics, contact), and rigid body modeling, methods for collision detection, deformable bodies and springs, fluid modeling and simulation, basics of numerical simulation, and particle systems.Concepts and methods from the areas: Foundations of animation and animation technologies, technical mechanics (kinematics, dynamics, contact), and rigid body modeling, methods for collision detection, deformable bodies and springs, fluid modeling and simulation, basics of numerical simulation, and particle systems.","The core of the module are lectures that include PowerPoint slides, blackboard scribbles and practical demonstrations. There are also a number of four self-study programming tasks. With four voluntary exercises during the semester, participants can prove that they have understood central simulation algorithms and integration techniques and are able to implement them with C++. The four exercises are integration methods, rigid-body simulations, collision detection, and a final free project (based on the lecture contents).","Slides, whiteboard, exercise sheets","- Grundlagen (Pflicht):    
  ++ David M. Bourg: Physics for game developers, O´Reilly Media 2001 (ISBN 10:0-596-00006-5).  
- zur Vertiefung (freiwillig):    
  ++ David H. Eberly: Game Physics, Morgan Kaufmann 2003 (ISBN 13: 978- 1558607408).   
  ++ David H. Eberly: 3D game engine design: a practical approach to real++time computer graphics, Morgan Kaufmann 2001, ISBN 1558605932, 9781558605930.",91,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/708343/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2297,Geometry Processing,6.0,-,Always,Westermann,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The exam takes the form of a 90 minutes written test. The students demonstrate that they can answer questions concerning the mathematical and algorithmic foundations of computer-aided geometric modeling and character animation. They can analyse and categorize available techniques in terms of quality, efficiency, and suitability for a particular modelling or animation task, and they can build upon these techniques to develop new approaches considering application-specific requirements. They know the basic functionalty of common geometric modelling and computer animation tools.",No,Yes,"MA0902 Analysis for Informatics, MA0901 Linear Algebra for Informatics","At the end of the semester the students have gained advanced knowledge concerning the mathematical foundations underlying geometric modelling and character animation, and they know the different methods which are typically used in these areas. They are familiar with the mathematical descriptions of curves and surfaces, their internal representation on a computer, and advanced modelling approaches such as subdivision techniques. They are familiar with the different stages in the character animation pipeline, and they can describe the basic methods used in each of these stages. The students can analyse and categorize availaible techniques in terms of functionality, quality and efficiency, and they can model and develop new approaches considering specific requirements. In the lecture the students learn about the different parts and functionality of commonly used modelling and animation tools, and they can use these tools to create own models and animations.","Introduction to polynomial interpolation and approximation, parametric and implicit curve and surface representations, Spline curves and surfaces, surface subdivision schemes, CSG, surface analysis using differential geometry, level-of-detail representations, surface reconstruction from point sets, introduction to character animation, riging, scinning and layering, locomotion, motion capturing and (space-time) control, character modeling.Introduction to polynomial interpolation and approximation, parametric and implicit curve and surface representations, Spline curves and surfaces, surface subdivision schemes, CSG, surface analysis using differential geometry, level-of-detail representations, surface reconstruction from point sets, introduction to character animation, riging, scinning and layering, locomotion, motion capturing and (space-time) control, character modeling.","The modul consists of the lecture, where the lecturer conveys to the students the area-specific knowledge, points towards relevant articles and ecourages the students to read and put into relation the presented approaches. The lecturer demonstrates online the capabilities of some of the discussed approaches and uses the white board to exercise specific modeling and animation tasks. The students should become familiar with common modeling and animation tools, and use these tools to create own models. At the end of the semester, the students give short presentations of these tools, and they demonstrate to the class their results.","Powerpoint course slides, white board, online tutorials and demonstrations","Mortensen, Geometric Modeling, 2nd Edition, Wiley Publishers; Farin, Curves and Surfaces for Computer Aided Geometric Design, Academic Press; Parent, Computer Animation: Algorithms and Techniques, Morgan Kaufmann; Kerlow, The Art of 3D Computer Animation and Effects, Whiley; Blender User’s Manual http://wiki.blender.org/index.php/Manual;",92,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1528921/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2133,Principles of Computer Vision,4.0,-,Always,"Burschka, Darius",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,120.0,45.0,75.0,"The examination is performed in the form of a 60-minute written exam. In this, the candidates demonstrate that they can analyze the radiometric properties of the light source and the objects in the scene, can set up a suitable optical system for a specific requirement in terms of field of view and accuracy, and carry out a calibration of a camera system. They should be able to use different methods for 3D reconstruction from lighting properties, motion stereo and binocular arrangements and to understand different matching methods for image regions.",No,Yes,Not specified,"The main goal of the lecture is to develop an image processing system for measurement and control tasks on a robot system, in which real-time capability and accuracy estimation play an essential role. After completing the module, the participants will master the process of image creation and processing, starting with radiometric surface properties, modeling cameras and lens systems, and ending with the image processing algorithms that are used for filtering and abstracting image information. They also master the basics required for 3D reconstruction from binocular arrangements (stereo).","The ""Principles of Computer Vision"" lecture follows the image formation process starting with  radiometric surface properties (Lambertian Surfaces, specular surfaces), considering the modeling of cameras and lens systems to image processing algorithms that are used for filtering and abstracting image information. It covers the basics required for 3D reconstruction from binocular systems (stereo), shape from shading and structure-from-motion. Lecture content:
- Reflective properties of surfaces
- Camera parameters/camera calibration
- Filtering. edge detection algorithms,
- Segmentation algorithms and calculation of camera movement from image projections
- Matching procedure
- 3D reconstruction for robot systemsThe ""Principles of Computer Vision"" lecture follows the image formation process starting with  radiometric surface properties (Lambertian Surfaces, specular surfaces), considering the modeling of cameras and lens systems to image processing algorithms that are used for filtering and abstracting image information. It covers the basics required for 3D reconstruction from binocular systems (stereo), shape from shading and structure-from-motion. Lecture content:
- Reflective properties of surfaces
- Camera parameters/camera calibration
- Filtering. edge detection algorithms,
- Segmentation algorithms and calculation of camera movement from image projections
- Matching procedure
- 3D reconstruction for robot systems","The lecture content is explained to the students in a lecture and deepened in an interactive discussion. There are also recorded lectures from previous years that can be used for self-study. Individual learning is supported by tutorials, which the students should solve independently and which will be discussed in the lecture.
Practical examples from research on the presented topics will also be shown and guest lectures from industry will be organized.",Blackboard and slides,"Introductory Techniques for 3-D Computer Vision. Emanuele Trucco (Autor), Alessandro Verri (Autor)
Computer Vision: A Modern Approach. David A. Forsyth (Autor), Jean Ponce (Autor)",93,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473871/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2015,Image Synthesis,5.0,-,Always,Westermann,Department of Computer Science,5 Credits ab WS 14/15,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The exam takes the form of written 75 minutes test. The students demonstrate that they can answer questions concerning the physical laws underlying photorealistic image synthesis, as well as the mathematical and algorithmic foundations of the rendering process. They demonstrate the ability to apply the discussed concepts and methods, such as the GPU-based techniques, precomputed radiance transfer, and image-based approaches, to derive solutions for specific problems in image synthesis. Small tasks using public domain rendering tools assess the ability to apply suitable rendering techniques and let the students become familiar with common rendering options.",No,Yes,IN0038 Real-time Computer Graphics or IN2017 Computer Graphics,"After successful completion of the module, the students have gained advanced knowledge concerning the image synthesis process, including the simulation of local and global illumination effects as well as typical image and compositing operations. The students know the methods which are used in computer games, animation films, and virtual reality scenarios to simulate and render realistic illumination effects. They can analyse and categorize availaible techniques in terms of quality and efficiency, and they can model and develop new approaches considering specific requirements. The students are familiar with the functionality of commonly used image synthesis tools, they can evaluate available tools based on their functionality, and they can apply these tools to create own renderings of given models and scenes.","Programmable graphics pipeline, graphics APIs and shader programming, multi-pass techniques, shadow techniques, ambient occlusion, hardware tessellation and displacement mapping, global illumination techniques (ray-tracing, radiosity, photon tracing), light volumes, image formats and image processing, filtering, HDRI, compositing and after effects.Programmable graphics pipeline, graphics APIs and shader programming, multi-pass techniques, shadow techniques, ambient occlusion, hardware tessellation and displacement mapping, global illumination techniques (ray-tracing, radiosity, photon tracing), light volumes, image formats and image processing, filtering, HDRI, compositing and after effects.","The modul consists of the lecture and an accompanying practical exercise. In the lecture, the lecturer conveys to the students the area-specific knowledge, points towards relevant articles and encourages the students to read and put into relation the presented approaches, and gives examples demonstrating the application of these approaches. In the practical exercises, state-of-the-art tools for image synthesis are demonstrated online. The students are introduced to these tools so that they can use them on their own.  The students are supposed to apply some of the tools for the synthesis of images of given models and scenes.","Powerpoint course slides, white board exercises, online tutorials and demonstrations","Akenine-Möller, Haines: Real-time Rendering, AK Peters; Watt, Watt: Computer Graphics, Addison-Wesley; Glassner: Principles of digital image synthesis, Morgan Kaufman",94,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456368/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2369,Machine Vision,6.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,German,-,180.0,60.0,120.0,"Type of Assessment: written exam (90 min) or oral exam (30 min)
The exam takes the form of written or oral test. Application questions assess the ability to analyze, evaluate, and create realistic machine vision applications. Knowledge questions assess the acquaintance with the hardware components and algorithms of machine vision as well as the suitability of the choice of hardware components and algorithms to solve a particular application.",No,Yes,"The lecuture requires a completed Bachelor's degree in an engineering or natural science discipline. In particular, the lecture requires knowledge of the following fields:
- linear algebra (linear transformations between vector spaces
expressed in matrix algebra)
- calculus (in particular, sums and differentiation and integration
of one- and two-dimensional functions)
- Probability theory","Participants of this lecture will have a thorough understanding of the essential hardware components of a machine vision system as well as the theory, data structures, and implementation of the most important machine vision algorithms. They are capable of analyzing and evaluating machine vision tasks and can use their knowledge and skills to create machine vision applications.","The lecture provides a detailed description of methods and algorithms that are relevant in practice for solving machine vision applications. The selection of methods is based on the most important application domains of image processing in industry: positioning/alignment, metrology, identification, and object recognition. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. In detail, the following topics are covered:

- Image acquisition
- Image enhancement
- Segmentation and feature extraction
- Morphology
- Edge extraction
- Segmentation and fitting of geometric primitives
- Camera calibration
- Template matching
- Stereo reconstruction
- Classification
- Color image processing
- Identification (OCR)
- Hand-eye calibration
- Object recognitionThe lecture provides a detailed description of methods and algorithms that are relevant in practice for solving machine vision applications. The selection of methods is based on the most important application domains of image processing in industry: positioning/alignment, metrology, identification, and object recognition. The main focus of the lecture is the description of the methods and their basic principles. Practical examples show the typical applications in which the presented methods are used. In detail, the following topics are covered:

- Image acquisition
- Image enhancement
- Segmentation and feature extraction
- Morphology
- Edge extraction
- Segmentation and fitting of geometric primitives
- Camera calibration
- Template matching
- Stereo reconstruction
- Classification
- Color image processing
- Identification (OCR)
- Hand-eye calibration
- Object recognition",Lecture (presentation of slides and interactive examples),PowerPoint,"Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision Algorithms and Applications; 2. Auflage, Wiley-VCH, Weinheim, 2018",95,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1629494/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2409,Inverse Problems in Medical Imaging,5.0,-,from Summer semester 2022,Daniel,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"Lecture: 75 min written examination (70% of the final grade) to see if the students have acquired deep understanding of the provided mathematical tools
Practical: Six assignments sheets with theoretical and practical coding exercises (30% of the final grade)",No,Yes,Good knowledge of mathematics (Bachelor course),"The students will learn basic mathematical tools to analyze and solve inverse problems. The aim of this lecture is to provide sufficient understanding of the underlying inverse problems and strategies for solving these problems. At the end of the lecture, the students will be able to theoretically and practically analyze, experimentally design and implement the required algorithms to solve various inverse problems in medical imaging.","Introduction and examples of inverse problems; vector spaces; definition of inverse problem; well-posedness according to Hadamard; injection, surjection, bijection of functions; Null-space and range space of operators; linear inverse problems; eigenvalue problem; decomposition theorem; singular value decomposition; inverse methods based on length; least squares and determinancy; minimum length; the generalized inverse; nonlinear inverse problems; regularization methods and comparison of different classes; Computed Tomography; Radon transform; backprojection; Fourier-slice theorem; filtered backprojection; deconvolution methods.Introduction and examples of inverse problems; vector spaces; definition of inverse problem; well-posedness according to Hadamard; injection, surjection, bijection of functions; Null-space and range space of operators; linear inverse problems; eigenvalue problem; decomposition theorem; singular value decomposition; inverse methods based on length; least squares and determinancy; minimum length; the generalized inverse; nonlinear inverse problems; regularization methods and comparison of different classes; Computed Tomography; Radon transform; backprojection; Fourier-slice theorem; filtered backprojection; deconvolution methods.","Interactive Lecture, theoretical and practical Exercises","PowerPoint, Whiteboard, interactive Whiteboard (Miro)","R. M. Richardson and G. Zandt. Inverse Problems in Geophysics, 2003. (Lecture Notes)
O. Dössel. Bildgebende Verfahren in der Medizin: Von der Technik zur medizinischen Anwendung, 1999.
G. L. Zeng. Medical Image Reconstruction: A Conceptual Tutorial, 2010.",96,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3126247/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2330,Convex Optimization for Computer Vision,6.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The final exam will be a written test of 90 minutes. 
In the exam, the students will show to what extend they understand the theory of convex analysis required to solve nonsmooth, i.e. not classically differentiable, convex optimization problems. The latter will cover the theory of subdifferentials, convex conjugates and duality. Furthermore, students are supposed to demonstrate their knowledge of several numerical methods to solve the aforementioned problems in practice, including proximal point, primal-dual and augmented Lagrangian based techniques. The students are expected to know advantages and drawbacks of different methods in particular practical applications. The latter also depend on the architecture used for the methods' implementation.",No,Yes,"Being interested in mathematics and having a solid background in basic mathematics like analysis and linear algebra is required as well as being able to write basic programs in a programming language of your choice, preferably (or most easily) in Matlab.","Upon completion of this module, students will be proficient in the practically relevant aspects of convex analysis. They are able to understand, apply and implement different numerical methods for convex optimization problems involving constraints and non-differentiable functions. The students are also able to reformulate energy minimization problems in a saddle-point and dual form. They will understand the convergence analysis of the proximal point algorithm and can apply the result to several other algorithms by deriving their proximal point form. Students will be able to solve convex optimization arising from standard computer vision problems on their own.","The following topics will be covered in this module: 
Elements in convex analysis: 
- Convexity 
- Existence and uniqueness of minimizers 
- Subdifferential
- Convex conjugate
- Duality 
Numerical methods: 
- Gradient-based methods, Majorization-minimization algorithm, line search method
- Proximal point algorithms, primal-dual hybrid gradient method, alternating direction method of multipliers
- Convergence analysis
- Preconditioning
Bilevel optimization:
- Generalized implicit function theorem
- Adjoint approach for numerical solution
Example applications in computer vision and signal processing problems: 
- Total-variation image restoration
- Image segmentation 
- Low-rank and sparse matrix decomposition
- Multiframe blind deconvolution
- Implementation of the above numerical methods for the example applications in MatlabThe following topics will be covered in this module: 
Elements in convex analysis: 
- Convexity 
- Existence and uniqueness of minimizers 
- Subdifferential
- Convex conjugate
- Duality 
Numerical methods: 
- Gradient-based methods, Majorization-minimization algorithm, line search method
- Proximal point algorithms, primal-dual hybrid gradient method, alternating direction method of multipliers
- Convergence analysis
- Preconditioning
Bilevel optimization:
- Generalized implicit function theorem
- Adjoint approach for numerical solution
Example applications in computer vision and signal processing problems: 
- Total-variation image restoration
- Image segmentation 
- Low-rank and sparse matrix decomposition
- Multiframe blind deconvolution
- Implementation of the above numerical methods for the example applications in Matlab","Lecture with exercises. 
The lecture will present and explain the main theory of the module. Some questions at the beginning of each lecture about the previously learned content will be used to reveal and adapt to difficulties students have with the subject (JiTT). In the exercises the students will deepen their understanding of the lecture’s content by working on particular problems highlighting theoretical as well as practical questions arising from the lecture.","Beamer, blackboard, PC","- Lecture notes. 
- Stephen Boyd, Lieven Vandenberghe. Convex Optimization. Cambridge University Press. 2003. 
- R. Tyrrell Rockafellar. Convex analysis. Princeton University Press. 1970. 
- Jean-Baptiste Hiriart-Urruty, Claude Lemaréchal. Fundamentals of convex analysis. Springer. 2004. 
- Yurii Nesterov. Introductory lectures on convex optimization. Kluwer-Academic. 2003. 
- H. H. Bauschke and P. L. Combettes. Convex Analysis and Monotone Operator Theory in Hilbert Spaces. 2011. 
- Jorge Nocedal, Stephen J. Wright. Numerical optimization. 2006.
- Dimitri Bertsekas. Nonlinear programming. Athena Scientific. 1999. 
- J. Outrata and M. Kocvara and J. Zowe. Nonsmooth Approach to Optimization Problems with Equilibrium Constraints. 1998.

Further references to recent literature will be given in the lecture.",97,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1199527/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2392,Machine Learning for 3D Geometry,6.0,-,from Summer semester 2021,"Dai, Angela",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The exam takes the form of a written test of 90 minutes. Questions assess knowledge of geometry foundations and representations, with a focus on machine learning methods for generative 3D modeling of shapes and scenes, 3D classification, and semantic segmentation. Students demonstrate the ability to analyze deep neural architectures for various 3D data representations such as point or graphs. Students additionally demonstrate familiarity with algorithmic techniques for associating semantic information with 3D objects or scenes, as well as generative models for 3D data. Exam questions will thoroughly cover the lecture content as well as practical content from the exercises and projects of the course.",No,Yes,"IN2346 Introduction to Deep Learning
MA0901 Lineare Algebra für Informatiker","Upon completion of this module, students will have gained advanced knowledge of theoretical concepts behind machine learning techniques for 3D geometric data, including deep learning architectures for both discriminative and generative tasks on 3D shapes and scenes. In addition to the theory, students are introduced to practical implementations of aforementioned approaches and familiarize themselves with them by execution in real-world applications.","Geometric Foundations; Recap of machine learning and graphical models; Shape descriptors, shape similarity, shape segmentation and labeling; Shape modeling, reconstruction, and synthesis; Deep learning for multi-view, volumetric, point cloud, and graph dataGeometric Foundations; Recap of machine learning and graphical models; Shape descriptors, shape similarity, shape segmentation and labeling; Shape modeling, reconstruction, and synthesis; Deep learning for multi-view, volumetric, point cloud, and graph data","The lecture provides theoretical knowledge regarding shape and scene analysis by machine learning techniques, including deep learning architectures. Lectures also include discussion of practical applications of these approaches. Exercises will accompany the class as homework for students. In addition to the classes and regular accompanying exercises, the students will work on a final project over the latter 2 months of the course. The final project allows students to demonstrate their learned knowledge with hands-on experience, proposing and executing small research projects (e.g., reconstruction of shapes from a single image, semantic segmentation of 3D scenes, with the opportunity to bring in their own ideas).","Projector, blackboard, PC","- Slides given during the course
- “ Geometric Deep Learning”,   http://geometricdeeplearning.com/
-  ""Graphical models in a nutshell"", by Daphne Koller, Nir Friedman, Lise Getoor and Ben Taskar
- “ Geometric deep learning: going beyond euclidean data”, by  Michael M. Bronstein, Joan Bruna, Yann LeCun, Arthur Szlam, and Pierre Vandergheynst",98,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2808442/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2384,Numerical Algorithms in Computer Vision and Machine Learning,5.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"- Written test of 90 minutes at the end of the module. In case of a low number of participants, the exam can be conducted orally.",No,Yes,"It is expected that all participants have a good working knowledge of linear algebra (Linear Algebra for Informatics MA0901) and calculus (Analysis for Informatics MA0902). Furthermore, a basic understanding of the following areas is necessary:
- mathematical optimization (e.g. Efficient Algorithms and Data Structures I IN2003, or II IN2004; or Operations Research IN0024; etc.),
- computer vision (e.g. Computer Vision I IN2246, or II IN2228, or III IN2375; or Tracking and Detection in Computer Vision IN2210; etc.), and 
- machine learning (e.g. Machine Learning for Computer Vision IN2357; or Introduction to Deep Learning IN2346; or Statistical Foundations of Learning IN2378; etc.).
Moreover, there will be programming exercises in Matlab.","Upon completion of this module, students will be able to implement basic numerical algorithms, and they will understand their strengths and their shortcomings. Moreover, students will gain a good intuition which algorithm is best applied for which problem in computer vision and machine learning, so that they can solve practical problems in these areas.","This module focuses on numerical methods that frequently occur in the fields computer vision (CV) and machine learning (ML). In addition to algorithms, this module will also cover modelling aspects that are relevant for solving practical problems in CV and ML. The contents include:
- Error analysis and conditioning of problems
- Linear systems (solvability, algorithms, stability, regularization), and applications and modelling in CV and ML (e.g. linear regression, image alignment, deconvolution)
- Spectral methods (eigenvalue decomposition, singular value decomposition, respective algorithms), and their applications and modelling in CV and ML (e.g. clustering, Procrustes analysis, point-cloud alignment, principal components analysis)
- Numerical optimization (gradient-based methods, second-order methods, large-scale optimization) and applications and modelling in CV and ML.This module focuses on numerical methods that frequently occur in the fields computer vision (CV) and machine learning (ML). In addition to algorithms, this module will also cover modelling aspects that are relevant for solving practical problems in CV and ML. The contents include:
- Error analysis and conditioning of problems
- Linear systems (solvability, algorithms, stability, regularization), and applications and modelling in CV and ML (e.g. linear regression, image alignment, deconvolution)
- Spectral methods (eigenvalue decomposition, singular value decomposition, respective algorithms), and their applications and modelling in CV and ML (e.g. clustering, Procrustes analysis, point-cloud alignment, principal components analysis)
- Numerical optimization (gradient-based methods, second-order methods, large-scale optimization) and applications and modelling in CV and ML.","The main concepts will be presented in the lecture. During the tutorial, related exercises and discussions will deepen the understanding. Besides theoretical exercises, there will be programming exercises.","Beamer, blackboard, PC","- Slides given during the course
- Selected publications
- Solomon. Numerical Algorithms: Methods for Computer Vision, Machine Learning, and Graphics, 2015",99,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2632102/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2329,Probabilistic Graphical Models in Computer Vision,5.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"The written final exam lasts 75 minutes. In the exam, the students will show to what extent they understand the theory of probabilistic graphical models applied in various computer vision problems (eg., binary image segmentation, stereo matching, object detection). The students are supposed to demonstrate their knowledge of several inference methods corresponding to exact inference (in particular Belief propagation, Binary graph cuts) or approximate inference (in particular Mean field approximation, Graph cuts, Linear programming relaxations) of the underlying directed or undirected graphical models.

Furthermore, the students are expected to know about the advantages and drawbacks of those approaches and to know bout several parameter learning techniques as well. 

By handing in reasonable solutions to 60% of the exercises (both in theory and programming) one can obtain a bonus of 0.3 in the final exam. Note that neither 1.0 nor 5.0 can be improved.",No,Yes,"The requirements for the class are solid knowledge in basic mathematics, in particular linear algebra and multivariate analysis, and in basic computer science, in particular programming (e.g. dynamic programming and basic data structures).","Upon completion of the module, students will be familiar with various graphical models applied in computer vision. In particular, students are able to understand and apply Markov Random Field (MRF) models and the underlying optimization techniques to a large variety of practical problems in computer vision. They will also have the ability to solve and implement the corresponding inference and learning algorithms on their own.","Several problems in computer vision can be cast as a labeling problem. Typically, such problems arise from Markov Random Field (MRF) models, which provide an elegant framework of formulating various types of labeling problems in imaging. 
By making use of certain assumptions some „nice“ MRF models can be solved in polynomial time, whereas others are NP hard. We will see both, efficient algorithms for solving the „nice“ problems and relaxation strategies for the „hard“ ones.
The following topics will be covered in this module:
Directed and undirected graphical models
- Bayesian Networks
- Markov Random Fields
- Conditional Random Fields
Parameter learning for MRF and CRF models
- Gradient based optimization
- Stochastic gradient descent
- Structured Support Vector Machines
Exact MAP inference methods for MRFs
- Belief propagation on trees: sum-product algorithm
- Binary graph cuts
- Branch-and-mincut
Approximate MAP inference methods
- Loopy belief propagation
- Mean field approximation
- Graph cuts: alpha expansion, alpha-beta swap
- Linear programming relaxations: fast primal-dual schema
Practical applications that we will cover are:
- binary and multi-label image segmentation
- human pose estimation
- stereo matching
- object detectionSeveral problems in computer vision can be cast as a labeling problem. Typically, such problems arise from Markov Random Field (MRF) models, which provide an elegant framework of formulating various types of labeling problems in imaging. 
By making use of certain assumptions some „nice“ MRF models can be solved in polynomial time, whereas others are NP hard. We will see both, efficient algorithms for solving the „nice“ problems and relaxation strategies for the „hard“ ones.
The following topics will be covered in this module:
Directed and undirected graphical models
- Bayesian Networks
- Markov Random Fields
- Conditional Random Fields
Parameter learning for MRF and CRF models
- Gradient based optimization
- Stochastic gradient descent
- Structured Support Vector Machines
Exact MAP inference methods for MRFs
- Belief propagation on trees: sum-product algorithm
- Binary graph cuts
- Branch-and-mincut
Approximate MAP inference methods
- Loopy belief propagation
- Mean field approximation
- Graph cuts: alpha expansion, alpha-beta swap
- Linear programming relaxations: fast primal-dual schema
Practical applications that we will cover are:
- binary and multi-label image segmentation
- human pose estimation
- stereo matching
- object detection",The lecture will present and explain the theoretical background of the module. In the exercises the students will work on practical problems helping them to understand the lecture’s content.,"Slides (projector), whiteboard","- D. Koller, N. Friedman: Probabilistic Graphical Models: Principles and Techniques, MIT Press, 2009
- S. Nowozin, C. H. Lampert: Structured Learning and Prediction in Computer Vision, Foundations and Trends in Computer Graphics and Vision, 2011
- A. Blake, P. Kohli, C. Rother: Markov Random Fields for Vision and Image Processing, MIT Press, 2011",100,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1199485/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2210,Tracking and Detection in Computer Vision,7.0,-,Always,"Navab, Nassir",Department of Computer Science,seit WS15 7 Credits und 6 SWS,Bachelor/Master,-,-,one semester,winter semester,English,-,210.0,90.0,120.0,"Type of Assessment: written exam (105 minutes)
Mid-term exam is planed after 6 lectures and it is written exam. The final exam takes place at the end of the lectures and it also takes the form of written test. Questions allow to assess acquaintance with concepts thought at the lectures and exercises, small calculation tasks and pseudo codes of the algorithmic solutions.
Programming tasks are not part of the examinations.
For the midterm exam, nothing but your pens and your calculators are allowed.
For the final exam, nothing but your pens, your calculators and one DIN A4 page (handwritten, front and back side) with notes are allowed.
Bonus points can be earned from the homework projects and the intermediate exam.
The final exam brings maximally 100 points. You need to have 50 points in order to pass it. Bonus points are irrelevant for the 50-points-hurdle and are added afterwards to your final exam score.",No,No,"Most of the knowledge required should be part of the normal background in Computer Science, undergraduate/graduate Mathematics and Geometry.","In the end, the students will have a thorough description of the most important tracking and detection techniques. They should be able to understand and implement those solutions and apply them in reasonably complex problems. The concepts described in this course will be accompanied with brief explanations of the necessary mathematical tools. The participants of this course will be given an important basis to follow the vast and growing Computer Vision literature and use the acquired knowledge to solve new practical problems.","Computer Vision, as a relatively young research area, has emerged as a key discipline in computer science.
This is not only evident by a growing and highly competitive research community with a high impact factor in computer science, but also by the emergence of numerous vision companies turning research ideas into a myriad of commercial applications. Besides well-known studies of 3D geometry and camera models, object tracking and detection in images and videos becomes one of the principal research directions of modern Computer Vision. The main objective of this course is to provide students with a gradual introduction to modern tracking, detection and recognition techniques developed in the last years. The course will provide in-depth knowledge of image features, their detection and description, matching techniques, key-point recognition, basic and advanced tracking algorithms based on image features and image intensities, basics of probabilistic and machine learning methods for tracking and object detection. Note that every year the course content is refreshed with new the most promising and potentially the most influential works in the field.
The following topics will be handled

- Introduction (overview of the course)
- Convolution and filtering:
-- Basic of image formation
-- Convolution and correlation
-- Non-linear filtering
-- Gaussian Filtering
-- Image Derivatives
-- Edge Detection
- Local invariant feature detectors: 
-- Harris corner
-- Harris Laplace/Affine
-- Hessian, Hessian-Laplace/Affine
-- FAST 
- Feature descriptors: 
-- Difference of Gaussians and SIFT
-- Integral images and SURF
-- Histogram of Oriented Gradients (HOG)
- Keypoint recognition: 
-- Randomized trees
-- FERNS
-- Keypoint signatures
- Face detection
-- Haar features
-- Ada-boost
-- Viola-Jones Face Detection 
- Camera models and projections
-- Model based tracking
-- Pose estimation from 2D-3D coresspondencies (DLT, P-n-P)
-- Rotation parametrization
- Non-linear optimisation
-- Robust estimators
-- RANSAC 
- Template tracking methods: 
-- Lucas-Kanade, 
-- Compositional Alg.
-- Inverse Compositional
-- ESM
-- Linear Predictor 
- Mean-shift tracking
-- mean-shift for pdf estimation
-- mean-shift for segmentation
-- mean-shift for object tracking
-- multi-scale 
- Template matching approaches
-- basic correlation methods (SAD, NCC etc.)
-- DOT(Dominant Orientation Template)
-- LineMod (LINEarizing the memory multiMODal template matching) 
- Kalman and particle filtering
-- basics Kalman filer
-- basics Particle filer
-- applications to visual tracking
-- applications to camera tracking
- Tracking with Dictionary LearningComputer Vision, as a relatively young research area, has emerged as a key discipline in computer science.
This is not only evident by a growing and highly competitive research community with a high impact factor in computer science, but also by the emergence of numerous vision companies turning research ideas into a myriad of commercial applications. Besides well-known studies of 3D geometry and camera models, object tracking and detection in images and videos becomes one of the principal research directions of modern Computer Vision. The main objective of this course is to provide students with a gradual introduction to modern tracking, detection and recognition techniques developed in the last years. The course will provide in-depth knowledge of image features, their detection and description, matching techniques, key-point recognition, basic and advanced tracking algorithms based on image features and image intensities, basics of probabilistic and machine learning methods for tracking and object detection. Note that every year the course content is refreshed with new the most promising and potentially the most influential works in the field.
The following topics will be handled

- Introduction (overview of the course)
- Convolution and filtering:
-- Basic of image formation
-- Convolution and correlation
-- Non-linear filtering
-- Gaussian Filtering
-- Image Derivatives
-- Edge Detection
- Local invariant feature detectors: 
-- Harris corner
-- Harris Laplace/Affine
-- Hessian, Hessian-Laplace/Affine
-- FAST 
- Feature descriptors: 
-- Difference of Gaussians and SIFT
-- Integral images and SURF
-- Histogram of Oriented Gradients (HOG)
- Keypoint recognition: 
-- Randomized trees
-- FERNS
-- Keypoint signatures
- Face detection
-- Haar features
-- Ada-boost
-- Viola-Jones Face Detection 
- Camera models and projections
-- Model based tracking
-- Pose estimation from 2D-3D coresspondencies (DLT, P-n-P)
-- Rotation parametrization
- Non-linear optimisation
-- Robust estimators
-- RANSAC 
- Template tracking methods: 
-- Lucas-Kanade, 
-- Compositional Alg.
-- Inverse Compositional
-- ESM
-- Linear Predictor 
- Mean-shift tracking
-- mean-shift for pdf estimation
-- mean-shift for segmentation
-- mean-shift for object tracking
-- multi-scale 
- Template matching approaches
-- basic correlation methods (SAD, NCC etc.)
-- DOT(Dominant Orientation Template)
-- LineMod (LINEarizing the memory multiMODal template matching) 
- Kalman and particle filtering
-- basics Kalman filer
-- basics Particle filer
-- applications to visual tracking
-- applications to camera tracking
- Tracking with Dictionary Learning","Lecture, combined with experimental programming assessment targeting practical implementations of the methods explained at the lectures. The practical programming assessments are first explained at the exercises and then given in the form of home works for students to do them in groups.","slides, blackboard, programming experiments","- lecture slides
- accompanied scientific papers and book excerpts
- Computer Vision: a modern approach"" by David Forsyth and Jean Ponce
- Computer Vision: Algorithms and Applications, Rick Szeliski",101,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/487473/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2236,Virtual Physics: Using Modern Modeling Methodologies for Computer Simulation,4.0,-,Always,"Knoll, Alois",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,German/English,-,120.0,45.0,75.0,In the written 90 minutes exam students should prove to be able to identify a given problem and find solutions within limited time using equation-based simulation of physical systems.,No,No,"Basic algebra, Basic numerical computing, Programming knowledge,Physics (High-School Level)","By the completion of the course, the students acquire the ability to model physical systems using equation-based computer languages. In addition they learn to understand the compiler techniques that are needed to process these languages and they are able to select the adequate numerical methods that are required for simulation.","Computer games, driving simulators, control of robots, or optimization of aircraft design: all these applications require suitable and efficient models of their physical processes. This lecture offers an introduction to object-oriented, declarative languages such as Modelica and demonstrates their application for the purpose of computer simulation.

Starting from physical principles, the lecture explains how to model electrical and mechanical systems. The development of extensive modeling-libraries is outlined and illustrated by suitable mechatronic systems. The modeling of further physical domains is briefly sketched.

In addition, the lecture concerns the computational aspects of computer simulation. The processing of the modeling language is explained in detail and the most important algorithms for time-integration are presented.

The corresponding exercise sessions offer the opportunity for the participants to gain their own modelling experience, for instance by creating a mechanic modelling library. Finally, the participants are encouraged to develop a real-time simulation of an electric vehicle. A high interest in physics but no additional prerequisites are expected for this lecture. All important fundamentals will be explained in the lecture.

Language: All written documents will be in English. The lectures are held either in German or in English according to the preference of the audience that will be determined in the first lecture.Computer games, driving simulators, control of robots, or optimization of aircraft design: all these applications require suitable and efficient models of their physical processes. This lecture offers an introduction to object-oriented, declarative languages such as Modelica and demonstrates their application for the purpose of computer simulation.

Starting from physical principles, the lecture explains how to model electrical and mechanical systems. The development of extensive modeling-libraries is outlined and illustrated by suitable mechatronic systems. The modeling of further physical domains is briefly sketched.

In addition, the lecture concerns the computational aspects of computer simulation. The processing of the modeling language is explained in detail and the most important algorithms for time-integration are presented.

The corresponding exercise sessions offer the opportunity for the participants to gain their own modelling experience, for instance by creating a mechanic modelling library. Finally, the participants are encouraged to develop a real-time simulation of an electric vehicle. A high interest in physics but no additional prerequisites are expected for this lecture. All important fundamentals will be explained in the lecture.

Language: All written documents will be in English. The lectures are held either in German or in English according to the preference of the audience that will be determined in the first lecture.","lecture, exercise course, problems for individual study","slides, black board, modelica programs","Peter Fritzson (2011):Introduction to Modelica and Simulation of Technical and Physical Systems with Modelica, Wiley IEEE
Peter Fritzson (2003):Principles of Object?Oriented Modeling and Simulation with Modelica 2.1, Wiley IEEE",102,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/611935/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2026,Visual Data Analytics,5.0,-,Always,Westermann,Department of Computer Science,auf 5 Credits erhöht ab WiSe 13/14,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The exam takes the form of a written test of 75 minutes. Questions allow to assess acquaintance with concepts and algorithms of scientific visualization and visual data analysis, and the application domains where visualization methods are used.",No,Yes,None.,"After successful completion of the module, the students have gained advanced knowledge concerning the visualization pipeline, ranging from data acquisition to the final image of the data. This includes knowledge about the application specific data representations, data interpolation and approximation techniques for discrete data sets, data filtering techniques like convolution, as well as the final mapping stage to generate a renderable representation from the data. The students know the common methods which are used in information visualization to graphically depict abstract data, and in scientific visualization to graphically depict 2D and 3D scalar and vector fields, including isocontouring, direct volume rendering, flow visualization, and terrain rendering. They can analyze and categorize available techniques in terms of quality, efficiency, and suitability for a particular data type, and they can model and develop new approaches considering application-specific requirements. In the practical exercises the student learn about the functionality of commonly used visualization tools, they can evaluate available tools based on their functionality, and they can apply these tools to create own visualizations of given data sets.","Visualization pipeline (data acquisition, filtering, display), information visualization vs. scientific visualization, grids and grid construction (Delaunay triangulation), interpolation in grids (inverse distance weighting, radial basis functions), discretization aspects, visualization of scalar fields (color coding, iso-contours and iso-surfaces, volume rendering, vector field visualization (particle-based visualization, line integral convolution, topological approaches), terrain rendering including adaptive meshing techniques and hierarchical data representations using quadtree and octrees.Visualization pipeline (data acquisition, filtering, display), information visualization vs. scientific visualization, grids and grid construction (Delaunay triangulation), interpolation in grids (inverse distance weighting, radial basis functions), discretization aspects, visualization of scalar fields (color coding, iso-contours and iso-surfaces, volume rendering, vector field visualization (particle-based visualization, line integral convolution, topological approaches), terrain rendering including adaptive meshing techniques and hierarchical data representations using quadtree and octrees.","TThe module consists of the lecture and an accompanying practical exercise. In the lecture, the lecturer conveys to the students the area-specific knowledge, points towards relevant articles and encourages the students to read and put into relation the presented approaches, and gives examples demonstrating the application of these approaches. In the practical exercises, state-of-the-art tools for scientific visualization are demonstrated online. The students are introduced to these tools so that they can use them on their own. The students are supposed to apply some of the tools for the visualization of 3D data sets from a number of different application domains. They learn to differentiate common visualization techniques regarding the data modalities they are suited for. Small tasks using public domain visualization tools assess the ability to apply suitable visualization techniques to specific kinds of data and let the students become familiar with common visualization options.","Powerpoint course slides, white board exercises, online tutorials and demonstrations","Schumann, Müller: Visualisierung - Grundlagen und allgemeine Methoden, Springer Verlag
C. Hansen, C. Johnson (Ed.): The handbook of Visualization, Academic Press",103,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1528428/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2354,3D Scanning & Motion Capture,6.0,-,Always,-,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The exam takes the form of a written test of 90 minutes. Questions allow to assess acquaintance with the basic concepts and algorithms of 3D digitization, in particular 3D scanning and motion capture. Students demonstrate the ability to apply visual computing algorithms to derive solutions for specific sub-problems for capturing static and dynamic environments. Students can classify capture techniques based on RGB and RGB-D scanning, and they are familiar with the main algorithmic tools in the field: implicit functions, pose tracking, face tracking, real-time reconstruction, etc. Exam questions will thoroughly cover the lecture content as well as practical content from the exercises and projects of the course.",No,No,"MA0902 Analysis for Informatics
MA0901 Linear Algebra for Informatics
C++ knowledge is required","After successful completion of the module, the students have gained advanced knowledge in the field of 3D scanning and motion capture regarding the underlying algorithmings, including rigid and non-rigid 3D reconstruction methods and useful optimization techniques to solve them. In the end, students know how to capture data with a commodity RGB-D scanner, they know how basic pose trackers work such as in the Microsoft Kinect, and how movies use 3D digitization in their production process. In addition to the theory, students are well familiarized with practical implementations of aforementioned approaches and execute them in real-world applications.","3D reconstruction, RGB-D scanning (Kinect, Tango, RealSense), ICP, camera tracking, sensor calibration, VolumetricFusion, Non-Rigid Registration, PoseTracking, Motion Capture, Body-, Face-, and Hand-Tracking, 3D DeepLearning, selected optimization techniques to solve the problem statements (GN, LM, gradient descent).3D reconstruction, RGB-D scanning (Kinect, Tango, RealSense), ICP, camera tracking, sensor calibration, VolumetricFusion, Non-Rigid Registration, PoseTracking, Motion Capture, Body-, Face-, and Hand-Tracking, 3D DeepLearning, selected optimization techniques to solve the problem statements (GN, LM, gradient descent).","The lecture conveys to the students the area-specific knowledge, points towards relevant articles and encourages the students to read and put into relation the presented approaches. The lecturer gives online and on-board examples demonstrating the application of these approaches. Exercises will accompany the class which the students will as homework assignments. In addition to the classes and regular accompanying exercises, the students will work on a final project over span of 2 month during the latter part of the lecture (the project summarizes the last assignments); during this time the students will exercise their learned knowledge by proposing and executing small research projects: for instance, students will implement a 3D reconstruction or face tracking method, hand tracker, or RGB-D frame-to-frame alignment while having the opportunity to bring in their own ideas.","PowerPoint course slides, white board exercises, tutorials and demonstrations using RGB-D data from commodity sensors open source capture software (3D reconstruction, face trackers, etc.).","D. A. Forsyth and J. Ponce. Computer Vision: A Modern Approach (2nd Edition). Prentice Hall, 2011.
R. Hartley and A. Zisserman. Multiple View Geometry in Computer Vision. Cambridge University Press, 2003.",104,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1412259/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2032,Electronic Publishing / Document Engineering and the World-Wide Web,5.0,-,Always,Br,Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,150.0,60.0,90.0,The module will be assessed in the form of a 75 minutes written examination. The exam questions check in how far the students master semantic processing of modern digital documents. Other questions relate to the ability to link to other areas of computer science and to discuss the opportunities and risks of this technology.,Yes,No,"Fundamentals of Informatics as provided by e.g. IN0001 Introduction to Informatics 1, IN0006 Introduction to Software Engineering, IN0008 Fundamentals of Databases and IN0011 Introduction to Theory of Computation","Students are able to query modern digital documents semantically and process them in numerous ways, in consideration of the triangle of text, data and programs. This enables them to soundly evaluate the modern possibilities of electronic publishing on the Web. Students throughly comprehend the foundations of Web Publishing, including concepts, models, architectures, technologies, established practices and tools in the context of the Extensible Markup Language (XML). They correctly assess the state of the art with its strengths and deficits and form realistic expectations of future developments. They relate the topic of this module to other Informatics fields; e.g. to Software Engineering via modelling and processes, to Formal Languages and Compiler Construction via language specifications and tool development and to Databases via modelling and query languages. They recognize general Informatics paradigms in the context of Electronic Publishing.","- Introduction, background, orientation
- Document models (structured documents, semistructured data)
- Character encoding (Unicode)
- Encoding of structured documents (XML, XML Namespaces)
- Schema languages and their formal foundation (DTDs, XML Schema, Relax NG, tree automata)
- Addressing of XML fragments (XPath)
- Transformation of XML documents (XSLT, XSL-FO)
- Querying XML documents (XQuery)
- Data input with XML technology (XForms)
- Architectures for XML-based Web applications (XRX)
- Applications- Introduction, background, orientation
- Document models (structured documents, semistructured data)
- Character encoding (Unicode)
- Encoding of structured documents (XML, XML Namespaces)
- Schema languages and their formal foundation (DTDs, XML Schema, Relax NG, tree automata)
- Addressing of XML fragments (XPath)
- Transformation of XML documents (XSLT, XSL-FO)
- Querying XML documents (XQuery)
- Data input with XML technology (XForms)
- Architectures for XML-based Web applications (XRX)
- Applications","Lectures with activating elements and integrated practice phases, in order to communicate the required background knowledge about digital documents and their processing. Assignments for individual study as well as student activities (such as planning and leading a practice session) in order to deepen the practical skills.","Slides, recorded audio, whiteboard, worked examples","Extensive class notes (script) are available.
General literature in textbook format:

- D. Levy: Scrolling Forward. Making Sense of Documents in the Digital Age. Arcade Publishing 2001.
- E.R. Harold u.a.: XML in a Nutshell. O'Reilly 2004.
- G. Kappel u.a.: Web Engineering. DPunkt 2003.
- A. Moller, M. Schwartzbach: An Introduction to XML and Web Technologies. Addison-Wesley 2006.

Current literature for specific topics are given in class.",107,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456388/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2118,Database Systems on Modern CPU Architectures,6.0,-,Always,"Neumann, Thomas",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The academic assessment will be done by a written exam  without aids of 90 minutes.
Assignments checking knowledge verify the familiarity with the interaction between database systems resp. algorithms and modern computer architecture. Transfer assignments check the familiarity with the development of internals of database systems for modern computer architecture. Small scenarios check the ability to modify internals of a database system to make use of the properties of the modern computer architecture.",No,Yes,"IN0004 Introduction to Computer Organization and Technology - Computer Architecture, IN0008 Fundamentals of Databases, Bachelor (recommended)","Students
- understand the interaction between database systems resp. algorithms and modern computer architecture (esp. CPU, Cache, Primary Storage) and
- learn how to develop resp. to modify the internals of database systems in order to make use of the properties of these computer architecture features.","- Modern CPU architecture and the memory hierarchy
- Cache memory, TLB, associative memory
- CPU branch prediction 
- Sequential and random memory access
- Memory access patterns and query evaluation
- Tuple layout in relational DBMS (RDBMS)
- Vertically fragmented RDBMSs and query evaluation
- Cache-conscious database algorithms (e.g. joins, sorting)
- Main memory database systems
- Data compression for throughput maximization- Modern CPU architecture and the memory hierarchy
- Cache memory, TLB, associative memory
- CPU branch prediction 
- Sequential and random memory access
- Memory access patterns and query evaluation
- Tuple layout in relational DBMS (RDBMS)
- Vertically fragmented RDBMSs and query evaluation
- Cache-conscious database algorithms (e.g. joins, sorting)
- Main memory database systems
- Data compression for throughput maximization","Lecture, exercise course, problems for individual study",Lecture with animated slides,"- John L. Hennessy & David A. Patterson. Computer Architecture: A Quantitative Approach. 4th Edition, Morgan Kaufmann, 2007
- Theo Härder, Erhard Rahm. Datenbanksysteme: Konzepte und Techniken der Implementierung. Springer, Berlin; 2nd ed.
- Hector Garcia-Molina, Jeff Ullman, Jennifer Widom. Database Systems: The Complete Book
- D. E. Knuth. The Art of Computer Programming Volume III",108,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473867/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3100,Selected Topics in Databases and Information Systems,5.0,-,Always,"Kemper, Alfons","TUM School of Computation, Information and Technology",5 ECTS from SS18,Master,-,-,one semester,irregularly,German/English,-,,,,The academic assessment will be done by a written exam. Assignments checking knowledge verify the familiarity with the main concepts of selected topics in Databases and Information Systems. Transfer assignments and small scenarios check the ability to apply and evaluate these concepts systematically and in a qualified manner.,No,Yes,Bachelor in Informatics,"Participants know the state of the art in selected topics in Databases and Information Systems and are able to deal with current research projects, thus being enabled to analyze and evaluate their datamanagement concepts.",Different lecturers offer courses about selected topics in Databases and Information Systems. Master students in Informatics may choose this module only once as an elective module in the field of Databases and Information Systems (DBI).Different lecturers offer courses about selected topics in Databases and Information Systems. Master students in Informatics may choose this module only once as an elective module in the field of Databases and Information Systems (DBI).,"By means of a presentation, either by slides or whiteboard, the lecture presents selected concepts and techniques 
from the area of Databases and Information Systems and illustrates these by examples.
Possbly accompanying assignments for individual study may deepen the understanding of the concepts explained in the 
module, train students to apply the learnt concepts and techniques to solve reasonably sized tasks on their own.","Slides, whiteboard, exercise sheets, excercises, presentation","Primary source scientific literature (e.g. journals, conference proceedings), depending on the topic",109,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/767880/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3230002,Cloud Information Systems,5.0,-,from Summer semester 2023,"Leis, Viktor",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,75.0,75.0,The assessment is by means of a written exam of 90 minutes assessing knowledge regarding the fundamental concepts of cloud information systems.,No,Yes,IN0010 Introduction to Computer Networking and Distributed Systems (recommended),"Upon successful completion of this module, students are able to:
- understand and analyze public cloud services. 
- define the requirements and challenges when architecting, implementing and managing cloud-native information systems.
- design cost-efficient and scalable cloud information systems using current cloud technologies.","- Introduction to foundational technologies (virtualization, containers, orchestration)
- Architecture of cloud-native information systems (client/server, middleware, microservices)
- Cost optimization in public clouds (cost and pricing models)
- Economic cloud architecture comparison
- Multi-cloud deployments
- Implications of SaaS (DevOps, security)
- Case studies of public clouds
- Case studies of cloud-native information system architectures and their building blocks (e.g., cloud object stores, key/value stores, OLTP DBMS, OLAP DBMS)- Introduction to foundational technologies (virtualization, containers, orchestration)
- Architecture of cloud-native information systems (client/server, middleware, microservices)
- Cost optimization in public clouds (cost and pricing models)
- Economic cloud architecture comparison
- Multi-cloud deployments
- Implications of SaaS (DevOps, security)
- Case studies of public clouds
- Case studies of cloud-native information system architectures and their building blocks (e.g., cloud object stores, key/value stores, OLTP DBMS, OLAP DBMS)","By means of a presentation, either by slides or whiteboard, the lecture presents fundamental concepts of public clouds and the architecture of scalable and cost-efficient cloud information systems. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture.",Slides and further supporting documents,"- The Cloud Computing Book: The Future of Computing Explained by Douglas E. Comer, CRC 2021
- Cloud Computing: Concepts, Technology & Architecture by Thomas Erl, Ricardo Puttini, and Zaigham Mahomood, Pearson, 2013
- Research papers from systems and database conferences",110,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3453883/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2386,Cloud-Based Data Processing,5.0,-,Always,"Kemper, Alfons",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,The exam takes the form of a 90 minutes written test or an oral exam in case of low number of participants. Assignments that check whether the student can identify the key requirements for a data processing in the cloud and design a scalable system that can meet them for a given scenario.,No,Yes,"IN0008 Fundamentals of Databases
IN0009 Basic Principles: Operating Systems and System Software
IN0010 Introduction to Computer Networking and Distributed Systems","Upon successful completion of this module, students are able to:
* define the requirements and challenges when architecting, building and  managing a large-scale data processing service in the cloud.
* use the theoretical foundations of distributed algorithms to construct the building blocks for a scalable data system design in relation to distributed storage, coordination and computation.
* understand and analyze the different trade-offs when designing scalable data processing systems that need to run in the public cloud. 
* design, implement and evaluate a three-tier system using current cloud technologies.
* identify the scalability bottlenecks and vulnerabilities of a complex computer system.","Introduction
* Intro to Data-centers
* Latest trends in Cloud Computing

Fundamentals for managing distributed data
* Data replication and quorums
* Data partitioning
* Fault-tolerance and unreliable components
* Distributed system model
* Consensus protocols and coordination services
* Consistency models and distributed key value stores

Design of cloud-based data processing systems
* Distributed transactions
* Cloud-native OLTP databases
* Cloud-native data warehouses
* Dataflow computing (i.e., derived data)
* Cloud-scale data streaming systems
* Query-as-a-Service (QaaS) (serverless data processing)
* Resource management and scheduling

Other related topics:
* Novel data storage formats (e.g., data lakes, data-mash, etc.)
* Security and Privacy for data processing in the cloud
* Accelerators and impact of new hardware technologyIntroduction
* Intro to Data-centers
* Latest trends in Cloud Computing

Fundamentals for managing distributed data
* Data replication and quorums
* Data partitioning
* Fault-tolerance and unreliable components
* Distributed system model
* Consensus protocols and coordination services
* Consistency models and distributed key value stores

Design of cloud-based data processing systems
* Distributed transactions
* Cloud-native OLTP databases
* Cloud-native data warehouses
* Dataflow computing (i.e., derived data)
* Cloud-scale data streaming systems
* Query-as-a-Service (QaaS) (serverless data processing)
* Resource management and scheduling

Other related topics:
* Novel data storage formats (e.g., data lakes, data-mash, etc.)
* Security and Privacy for data processing in the cloud
* Accelerators and impact of new hardware technology","Lectures, tutorials, problems for individual study:
The module consists of lectures and accompanying tutorials. The contents of the course will be primarily presented in the form of lectures and discussions of real-world system designs. Solutions to exercises will be discussed in the tutorials.",Lecture with animated slides,"•	Designing Data-Intensive Applications by Martin Kleppmann
•	Distributed Systems by Maarten van Steen, Andrew S. Tanenbaum
•	Principles of Distributed Database Systems by M. Tamer Ozsu, Patrick Valduriez",111,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2690341/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3230001,Code Generation for Data Processing,6.0,-,from Winter semester 2022/23,"Neumann, Thomas",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,180.0,75.0,105.0,"The academic assessment will be done by a written exam of 90 minutes. Assignments verify that students understood and can develop systems for code generation in the context of data processing with respect to domain-specific peculiarities. The exam requires the students to answer in their own words, and possibly completing some code segments.",No,No,"IN0004 	Introduction to Computer Organization and Technology - Computer Architecture; 
IN0008 Fundamentals of Databases","Students are able to implement an efficient execution environment for data processing programs based on code generation. Further, students can design appropriate program representations for high-level languages, database queries, as well as machine code and compile these to performant machine code using appropriate optimizations and sandboxing measures.","- Execution models of programs (interpretation, bytecode, machine code generation, etc.)
- Program representations (source code, intermediate representations (IRs), different forms of bytecode)
- Classical techniques of code generation
- SSA and optimization techniques, exemplary described on LLVM-IR
- Machine code generation: instruction selection and register allocation
- Execution of programs in virtual machines (e.g., WebAssembly, BPF, JavaScript)
- Sandboxing and optimizations for JIT compilation
- Execution of database queries (e.g., SQL, data frame API)
- Execution models and code representations
- Execution of machine code/binary translation (e.g., RISC-V)
- Specifics when translating machine code- Execution models of programs (interpretation, bytecode, machine code generation, etc.)
- Program representations (source code, intermediate representations (IRs), different forms of bytecode)
- Classical techniques of code generation
- SSA and optimization techniques, exemplary described on LLVM-IR
- Machine code generation: instruction selection and register allocation
- Execution of programs in virtual machines (e.g., WebAssembly, BPF, JavaScript)
- Sandboxing and optimizations for JIT compilation
- Execution of database queries (e.g., SQL, data frame API)
- Execution models and code representations
- Execution of machine code/binary translation (e.g., RISC-V)
- Specifics when translating machine code","The lecture describes the topics and concepts with examples and interactive discussions with students. The lecture also aims to motivate students for own research with the topics as well as studying literature. In the accompanying exercises, implement the concepts presented in the lecture to gain a deeper understanding of the covered techniques.","Lecture with slides, exercise sheets","LLVM Documentation: https://llvm.org/docs/
Franz Faerber, Alfons Kemper, Per-Åke Larson, Justin J. Levandoski, Thomas Neumann, Andrew Pavlo. Main Memory Database Systems
James E. Smith, Ravi Nair: Virtual Machines, Versatile Platforms for Systems and Processes, Elsevier/Morgan Kaufmann, 2005",112,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3310961/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3230004,Data Processing on Modern Hardware,5.0,-,from Summer semester 2023,"Kemper, Alfons",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The exam takes the form of a 90 minutes written test or an oral exam in case of low number of participants.
Assignments that assess whether the student can apply the various optimization techniques taught in class on a given data structure/workload set-up or whether the student can correctly identify and explain the performance behavior of a system running on a modern hardware configuration.",Yes,No,"IN0004 Introduction to Computer Organization and Technology – Computer Architecture
IN0008 Fundamentals of Databases
IN0007 Fundamentals of Algorithms and Data Structures","Upon successful completion of this module, students are able to:

* implement data processing engines that run faster on modern machines using a variety of techniques:
- optimize data structures and algorithms for the memory hierarchy
- effectively adjust the program structure of the execution engine and the data pipelines to better exploit modern hardware features (AVX, SGX, 
- apply custom-parallelization techniques to most common data-processing algorithms
- efficiently synchronize data structures

* learn how to best leverage new hardware technologies in the context of (distributed) data processing engines:
- accelerators (e.g., FPGAs, smart NICs, etc.)
- low-latency high-bandwidth networks
- modern storage and memory (non-volatile, memory extensions, far memory, CXL)

* reason about software abstractions and programming models for modern hardware, especially in the context of data-intensive applications.

* apply the knowledge in real data management systems:
- understand what happens in the background
- do performance analysis and debugging of hot spots and bottlenecks
- optimize algorithms and data structures to run well both in isolation and alongside other programs (e.g., multi-tenancy).","* Cache hierarchy awareness and how it influences the design of modern data storage formats and indexes.
* Memory-, threading- and execution models for data processing on modern machines
* Latest practices for query execution, compilation and optimization 
* Exploiting parallelism in multi-core machines for in-memory data management systems, with particular focus on crafting for non-uniformity in memory access latencies
* Building efficient distributed data processing at scale through the use of modern network and storage technologies* Cache hierarchy awareness and how it influences the design of modern data storage formats and indexes.
* Memory-, threading- and execution models for data processing on modern machines
* Latest practices for query execution, compilation and optimization 
* Exploiting parallelism in multi-core machines for in-memory data management systems, with particular focus on crafting for non-uniformity in memory access latencies
* Building efficient distributed data processing at scale through the use of modern network and storage technologies","Lectures, tutorials, problems for individual study:
The module consists of lectures and accompanying tutorials. Solutions to exercises will be discussed in the tutorials. The students will have an opportunity to apply the knowledge acquired in a group/or individual project at the end of the course.",Lecture with animated slides,"„Computer Architecture: A Quantitative Approach” (6th edition) by Hennessy and Patterson.
“Computer Systems: A Programmer’s Perspective” (3rd edition) by Bryant and O’Hallaron
“Software Optimization Resources” by Agner Fog
“What Every Programmer Should Know About Memory” by Ulrich Drepper",113,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3499417/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3230003,Data Structure Engineering,5.0,-,from Summer semester 2023,"Leis, Viktor",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The goal of the course is to teach skills for understanding and developing efficient data structures. We assess that in a written 90-minute exam that tests the acquired knowledge about modern hardware and data structures discussed in the lecture, as well as the ability to apply this knowledge based on usage scenarios.",No,Yes,"IN0007 Fundamentals of Algorithms and Data Structures (recommended)
IN0004 Introduction to Computer Organization and Technology - Computer Architecture (recommended)
Knowledge of low-level language, e.g., C/C++, Rust","Students can design efficient and compact data structures. They are capable of implementing custom, domain-specific data structure variants and of synchronizing them for multi-core processors in a scalable fashion.","Data structure engineering is the process of designing and implementing in-memory and out-of-memory data structures to support the efficient storage, organization, and retrieval of data. On modern hardware a low asymptotic complexity alone does not guarantee high performance; one must also take features of today's processors and storage technologies into account. The course first introduces the necessary hardware background, before studying different data structures such as hash tables, search trees, and tries and how to optimize them for modern hardware.Data structure engineering is the process of designing and implementing in-memory and out-of-memory data structures to support the efficient storage, organization, and retrieval of data. On modern hardware a low asymptotic complexity alone does not guarantee high performance; one must also take features of today's processors and storage technologies into account. The course first introduces the necessary hardware background, before studying different data structures such as hash tables, search trees, and tries and how to optimize them for modern hardware.","By means of a presentation, either by slides or whiteboard, the lecture presents existing high-performance data structures, and teaches basic principles and techniques of data structure engineering. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, train students to implement custom data structures.",Slides and further supporting documents,"John L. Hennessy & David A. Patterson. Computer Architecture: A Quantitative Approach
Research papers from conferences such as SIGMOD, VLDB, and ICDE",114,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3471253/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2031,Application and Implementation of Database Systems,6.0,-,Always,"Kemper, Alfons",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,180.0,75.0,105.0,The academic assessment will be done by a written exam of 90 minutes. No aids are permitted. Assignments checking knowledge verify the familiarity with components of modern database systems; programming assignments verify the ability to implement and critically evaluate advanced algorithms and data structures of the database components; small scenarios with defined architectures and applications have to be set up with the methods learnt which verifies the ability to develop precise partial solutions.,No,Yes,"IN0008 Fundamentals of Databases, IN0007 Fundamentals of Algorithms and Data Structures","Students command the components of modern database systems in detail, they know how to implement and evaluate the underlying algorithms and data structures, and are able to develop them further under different constraints.","- Error Handling
- Concurrency Control
- Security and Privacy
- Object Oriented und Object Relational Database Concepts
- Deductive Databases
- Distributed Databases
- Business Intelligence: Data Warehousing, Data Mining
- Main Memory Database Systems
- XML and Database Systems
- Database Concepts in the Context of Big Data Applications
- Performance Evaluation- Error Handling
- Concurrency Control
- Security and Privacy
- Object Oriented und Object Relational Database Concepts
- Deductive Databases
- Distributed Databases
- Business Intelligence: Data Warehousing, Data Mining
- Main Memory Database Systems
- XML and Database Systems
- Database Concepts in the Context of Big Data Applications
- Performance Evaluation","Lecture, tutorial, problems for individual study",Lecture with animated slides,"- Alfons Kemper, André Eickler: Datenbanksysteme. Eine Einführung. 10., aktualisierte und erweiterte Auflage, Oldenbourg Verlag, 2015
- A. Kemper, M. Wimmer: Übungsbuch: Datenbanksysteme. 3. Auflage Oldenbourg Verlag, 2012
- A. Silberschatz, H. F. Korth, S. Sudarshan: Database System Concepts. Sixth Edition, McGraw-Hill, 2010
- T. Härder, E. Rahm: Datenbanksysteme - Konzepte und Techniken der Implementierung. 2. Auflage, Springer Verlag, 2001
- J. Gray, A. Reuter: Transaction Processing: Concepts and Techniques. Morgan Kaufmann, 1993",115,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261475/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2288,Event Processing,5.0,-,Always,"Mayer, Ruben",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"There is a final exam, which verifies the knowledge of theory.
Exam duration: 90 minutes.",No,No,-,"Processing paradigms. Apply event processing formalisms, patterns and languages to use cases. Analyze capabilities of emerging standards and products on event processing. Know the background and theory of event processing.","Introduction to Event Processing (EP) applications. After the module the student knows the common building blocks EP systems and can apply them. The outline of the module is as following. First, a introduction in EP is given, What EP support is required? What are the characteristics and requirements of EP? Then more theoretical background is given: Event processing terminology, theories of events & philosophical perspectives. Throughout the module multiple distributed, local, and event processing languages are presented which are then used in the course project. Additional in the lecture the following things are presented and discussed: event processing patterns, event generation, event detection, event filtering and event correlation algorithms. To model event-based systems formalisms are presented, e.g., event calculus, event algebra or Petrie nets. Additionally covered are event processing paradigms, models for event stream processing, event processing languages, Publish/Subscribe, Tuple spaces, Rule-based event processing, Trigger processing, Continuous query processing. Additional keywords which are presented are EP Languages and data models, window semantics, matching, filtering, Rete matching, staged-event driven architecture and emerging standards & products as case studies. The content is supported by examples and case studies. Also the content is practically used within the course project.Introduction to Event Processing (EP) applications. After the module the student knows the common building blocks EP systems and can apply them. The outline of the module is as following. First, a introduction in EP is given, What EP support is required? What are the characteristics and requirements of EP? Then more theoretical background is given: Event processing terminology, theories of events & philosophical perspectives. Throughout the module multiple distributed, local, and event processing languages are presented which are then used in the course project. Additional in the lecture the following things are presented and discussed: event processing patterns, event generation, event detection, event filtering and event correlation algorithms. To model event-based systems formalisms are presented, e.g., event calculus, event algebra or Petrie nets. Additionally covered are event processing paradigms, models for event stream processing, event processing languages, Publish/Subscribe, Tuple spaces, Rule-based event processing, Trigger processing, Continuous query processing. Additional keywords which are presented are EP Languages and data models, window semantics, matching, filtering, Rete matching, staged-event driven architecture and emerging standards & products as case studies. The content is supported by examples and case studies. Also the content is practically used within the course project.","The module is organized as combination of lectures slides, invited talks, case studies and required reading material. During the course a event processing system presented in the case studies is used and implemented. At the end of the lecture the implementation is presented and in a discussion advantages and disadvantages of the system discussed. The course project is conduced in teams of two-three students.","Moodle, Lectures, assignments, use case",A reader with several research and white papers.,116,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/819263/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT323001,High Performance Query Processing,5.0,-,from Winter semester 2024/25,"Leis, Viktor",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The goal of the course is to teach skills for understanding and developing high-performance query engines capable of exploiting modern hardware. We asses this in a written 90-minute graded exam that tests the acquired knowledge about modern hardware, data structures, and query processing algorithms discussed in the lecture, as well as the ability to apply this knowledge. No aids or devices are allowed during the exam.",No,Yes,"IN0008 Grundlagen: Datenbanken 
IN2118 Database Systems on Modern CPU Architectures 
(recommended)",Students know how modern database engines execute queries. They are capable of implementing salable and efficient algorithms for executing analytical database queries efficiently on multi-core processors and with modern storage technologies.,"Query processing refers to the series of steps that a database system takes to execute an analytical query given a query plan. High performance query processing is about executing analytical queries with performance close to what the hardware allows. To achieve high performance, it is not enough to know about the algorithms that database systems use; one must also take features of today's processors and storage technologies into account. This course covers database query processing paradigms, algorithms, SIMD parallelization, multi-core parallelization, distributed query processing, and out-of-memory processing.Query processing refers to the series of steps that a database system takes to execute an analytical query given a query plan. High performance query processing is about executing analytical queries with performance close to what the hardware allows. To achieve high performance, it is not enough to know about the algorithms that database systems use; one must also take features of today's processors and storage technologies into account. This course covers database query processing paradigms, algorithms, SIMD parallelization, multi-core parallelization, distributed query processing, and out-of-memory processing.","By means of a presentation, either by slides or whiteboard, the lecture presents query processing paradigms, and teaches the engineering required to implement high performance query processing engines. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture and train students to implement parts of a concurrent high performance query engine.","Slides, Moodle, Whiteboard, Code Assignments","John L. Hennessy & David A. Patterson. Computer Architecture: A 
Quantitative Approach  
Research papers from conferences such as SIGMOD, VLDB, and 
ICDE",117,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4116906/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2219,Query Optimization,6.0,-,Always,"Neumann, Thomas",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,The academic assessment will be done by a written exam of 90 minutes. Assignments checking knowledge verify the familiarity with the main optimization techniques for query processing. Transfer assignments check the familiarity with the problem-specific development of optimization techniques for query processing. Small scenarios check the ability to analyze the complexity of concrete queries resp. evaluate them corresponding to their potential for improvement.,No,Yes,IN0008 Fundamentals of Databases,"Participants master the main optimization techniques of query processing, may develop them problem-specific, can analyze the complexity of concrete queries resp. evaluate the queries for improvement.",Query processing in relational data bases; fundamental techniques for query processing; determination of the optimal join order; techniques of dynamic programming; cost models for query processing; optimization with consideration of physical propertiesQuery processing in relational data bases; fundamental techniques for query processing; determination of the optimal join order; techniques of dynamic programming; cost models for query processing; optimization with consideration of physical properties,"Lecture, exercise course, problems for individual study",Lecture with animated slides,"- J.D. Ullman. Database and Knowledge Base Systems. Computer Science Press, 1989.
- T. Özsu and J. Blakeley. Modern Database Systems. Addison Wesley, 1995.
- H. Garcia-Molina and J.D. Ullman and J. Widom. Database System Implementation. Prentice Hall, 1999.
- P. Gassner, G. Lohman, and K. Schiefer. Query optimization in the IBM DB2 family. IEEE Data Engineering Bulletin, 16:4 18, Dec. 1993.
- S. Chaudhuri. An Overview of Query Optimization in Relational Systems. PODS, 1998
- G. Moerkotte. Building Query Compilers. (draft)",118,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/487478/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2267,Transaction Systems,6.0,-,Always,"Neumann, Thomas",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The academic assessment will be done by a written exam; the duration is 90 minutes Assignments checking knowledge verify the familiarity with the interaction of transaction management and recovery. Transfer assignments and small scenarios check the ability to develop safe (preserving the ACID properties) but nevertheless efficient (high concurrency) transactions.

Bonus: There will be optional home assignments. If you achieve 75% or more in the home assignments, you will receive a 0.3 bonus on the exam grade (iff your exam grade is between 1.3 and 4.0).",No,No,"- IN0015 Discrete Structures
- IN0008 Fundamentals of Databases","The students
- understand the interaction of transaction management and recovery
- can develope transactions in a safe but nevertheless efficient manner, such that ACID transactions with high concurrency are attained","- Notions of Correctness
- Concurrency Control Algorithms
- Multiversion Concurrency Control
- Concurrency Control on Objects
- Concurrency Control on Relational Databases
- Concurrency Control on Search Structures
- Concurrency Control Implementation
- Transaction Recovery
- Crash Recovery
- Media Recovery
- Application Recovery
- Distributed Concurrency Control
- Distributed Transaction Recovery- Notions of Correctness
- Concurrency Control Algorithms
- Multiversion Concurrency Control
- Concurrency Control on Objects
- Concurrency Control on Relational Databases
- Concurrency Control on Search Structures
- Concurrency Control Implementation
- Transaction Recovery
- Crash Recovery
- Media Recovery
- Application Recovery
- Distributed Concurrency Control
- Distributed Transaction Recovery","The module is offered as a lecture with accompanying exercises.
In the lecture, the contents are conveyed in lectures by means of illustrative examples as well as by discussion with the students. The lecture should also serve as motivation for the students to deal with the topics independently and to study the literature.
In accordance with the lecture content, assignment sheets are offered, which the students should use for independent control as well as for the deepening of the learned methods and concepts. The work is done independently in small groups. Furthermore, concrete example scenarios with material from the lecture are presented, from which questions arise, which the students work on theoretically or also in small projects, which are handed in, commented and evaluated as well as discussed in the exercise sessions.",Lecture with animated slides,"Gerhard Weikum, Gottfried Vossen. Transactional Information Systems: Theory, Algorithms, and the Practice of Concurrency Control and Recovery. Morgan Kaufmann Publishers, 2002.",119,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/757477/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3420,Selected Topics in Digital Biology and Digital Medicine,5.0,-,Always,-,Department of Computer Science,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,121,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498120/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230001,Computational Modeling for System Genetics,6.0,-,from Winter semester 2022/23,"Gagneur, Julien",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The students are individually evaluated on a project work, by the project supervisors, according to their performance:
- During the project work (motivation, problem solving capacity, data analysis skills, programming capabilities).
- At the final presentation (clearness of presentation and slides, used methods, achieved results). 10 minutes.
- In the written report (conciseness, language, used methods). 20 pages maximum.
The final mark will be given by the supervisors who attend the final lectures.",No,Yes,"Bachelor in mathematics, bioinformatics, computer science,
physics, statistics or a related field. Students from medicine with background in statistics and some basic programming experience could also join. One basic lecture in statistics (e.g. IN0018, IN2339) or in machine learning (e.g IN2064; MA4802). Strong interest in biological and medical research questions.","At the end of the module, students understand / are able to practically implement:
- the challenges of complex trait genetics
- statistical models for QTL mapping and GWAS
- methods for adjustment for multiple testing
- regularized linear models and its applications in genetics
- linear mixed models to deal with population structure
- experimental techniques to measure gene expression
- efficient algorithms for expression QTL analysis
- statistical concepts for causal inference such as Mendelian randomization
- network inference methods such as Graphical Gaussian models and application to omics data (metabolome, transcriptome)
- apply some of the above-mentioned techniques on an actual problem from systems genetics. Evaluate model performance, calibration and provide biological interpretation of its application to real data.","This is a two-part module: (1) Seven lectures
introduce basics of systems genetics, and statistical models employed. The six lectures are supported with exercise sessions in R or python. This is followed by (2) an eight-week hands-on project.
 
The lectures are organized around the following topics:
- Introduction to human genetics and genome-wide association studies (GWAS)
- Populations structure
- Polygenic risk score
- Gene-mapping and variant fine-mapping
- Gene expression QTLs (eQTLs)
- Causal inference with omics data (metabolomics, transcriptomics, etc.) 
- Omics approaches for rare diseases
 
Over these lectures, computational methods are introduced including:
- Linear regression and hypothesis testing
- Linear mixed models
- Regularized linear models
- Multiple testing correction
- Graphical Gaussian models
- Denoising autoencodersThis is a two-part module: (1) Seven lectures
introduce basics of systems genetics, and statistical models employed. The six lectures are supported with exercise sessions in R or python. This is followed by (2) an eight-week hands-on project.
 
The lectures are organized around the following topics:
- Introduction to human genetics and genome-wide association studies (GWAS)
- Populations structure
- Polygenic risk score
- Gene-mapping and variant fine-mapping
- Gene expression QTLs (eQTLs)
- Causal inference with omics data (metabolomics, transcriptomics, etc.) 
- Omics approaches for rare diseases
 
Over these lectures, computational methods are introduced including:
- Linear regression and hypothesis testing
- Linear mixed models
- Regularized linear models
- Multiple testing correction
- Graphical Gaussian models
- Denoising autoencoders","We design this module as a two-part module: (1) Seven lectures introduce the students to the most relevant topics and methods for systems genetics. This is followed by (2) an eight-week project work where students focus on specific systems genetics topics in one partner research lab to get hands-on experience.
Lectures provide the state-of-the-art of systems genetics modeling approaches. These concepts are first applied with in-class exercise sessions following each lecture. During the project work, these concepts are applied on real problems under mentoring of the teaching team. The results of the project work are summarized in a final talk and a written report.","Weekly posted exercises online, slides, script, live demo","Civelek, M., & Lusis, A. J. (2014). Systems genetics approaches to understand complex traits. Nature Reviews Genetics, 15(1), 34–48. http://doi.org/10.1038/nrg3575

Genome-Wide Association Studies, Krishnarao Appasani, Cambridge University Press",122,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3307984/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2319,Computational Physiology for Medical Image Computing,6.0,-,Always,"Menze, Bj",Department of Computer Science,-,Master,-,-,one semester,irregularly,English,-,180.0,60.0,120.0,"During the course of the module the participants will define and pursue a small project dealing with the analysis of clinical image data. They will implement and analyze computational algorithms for processing these data using the methods and tools presented in the lecture. They will pursue this project work in small teams and will actively participate in the discussion of results from other teams. 
Each team will document their project work and the contributions of the different team members. They will present their results at the end of the course in an oral presentation with subsequent discussion. They will be evaluated by their model implementation, their model analysis, and their presentation. Moreover, they will be evaluated based on their participation in the discussion of the projects of other participants.",No,Yes,"CAMP 1, or other introductory lecture on image processing; proficiency in a computing language such as Matlab, Python, or CPP.","Upon completion of the module, the participants will be able to use computational models for extracting diagnostic information from different types of clinical image data sets. These data sets may provide information, for example, about blood perfusion or microstructural tissue properties, about metabolic processes, or patterns of disease progression. The participants will understand the physiological concepts underlying the computational algorithms employed, and will know of advantages and shortcomings of different modeling strategies. This will allow them to analyze clinical imaging protocols with respect to the underlying physiological information, and to propose diagnostic algorithms that combine anatomical and physiological information of different imaging modalities.","1) Physiological imaging: Computational models for extracting local physiological information from imaging modalities such as magnetic resonance, computed tomography, or positron emission topography (e.g., MR and PET models for blood flow, metabolism, tissue microstructure)

2) Organ models: Computational models describing anatomy and function at the organ level as well as its variation across the population (e.g., 3D and 4D population atlases describing structure and shape)

3) Disease and diagnostics: Computational models describing pathophysiological processes and the progression of diseases (functional models from biophysics and theoretical biology, empirical models for clinical decisions)

4) Use cases, for example, from cardiac imaging, tumor analysis, and neuro-degenerative diseases1) Physiological imaging: Computational models for extracting local physiological information from imaging modalities such as magnetic resonance, computed tomography, or positron emission topography (e.g., MR and PET models for blood flow, metabolism, tissue microstructure)

2) Organ models: Computational models describing anatomy and function at the organ level as well as its variation across the population (e.g., 3D and 4D population atlases describing structure and shape)

3) Disease and diagnostics: Computational models describing pathophysiological processes and the progression of diseases (functional models from biophysics and theoretical biology, empirical models for clinical decisions)

4) Use cases, for example, from cardiac imaging, tumor analysis, and neuro-degenerative diseases","Weekly lecture, discussion of project work; final presentation (written and oral)","Slides, additional reading material (review papers, book chapters); publicly available clinical data sets and software tools.",An updated list will be maintained on the homepage of the lecture,123,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1102305/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2021,Computer Aided Medical Procedures,6.0,-,Always,"Navab, Nassir",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"Type of Assessment: exam

The exam takes the form of a written test. The duration is 90 minutes and no material is allowed (closed book). Questions allow to assess whether the student is able to understand fundamentals, differences and application areas of medical imaging modalities as well as methods for medical image processing and computer aided surgery. 

Participants who successfully complete voluntary small case studies receive a grade bonus of 0,3 on their exam grade. The grade bonus is only applied to passed examinations (grades including 1,3 to 4,0). The case studies are used to check whether participants are independently able to select an appropriate imaging modality or algorithm for a specific application.",No,Yes,Bachelor in informatics or another scientific or technological course of studies,"Upon successful completion of the module participants are able to understand and assess fundamental physical principles of medical imaging techniques as well as the fundamentals of algorithms for medical image processing and computer aided surgery. 
Moreover, participants are able to identify problems in the area of diagnosis and therapy as well as to develop corresponding solution strategies based on the methods covered in the areas image processing, navigation and visualization.","The module IN2021 is concerned with topics such as:
- Overview
++ Computer aided medical procedures
++ History of radiology and surgical procedures
- Medical Imaging Modalities
++ X-ray
++ Computed tomography
++ Angiography
++ Magnetic resonance imaging
++ Ultrasound
++ Positron emission tomography
++ Optical imaging
- Computer Aided Systems for Diagnosis, Treatment, Surgery, and Follow-up
++ Image segmentation
++ Rigid and deformable image registration
++ Tracking systems
++ Visualization and augmented reality

These topics are augmented by invited talks of clinical or industrial experts.The module IN2021 is concerned with topics such as:
- Overview
++ Computer aided medical procedures
++ History of radiology and surgical procedures
- Medical Imaging Modalities
++ X-ray
++ Computed tomography
++ Angiography
++ Magnetic resonance imaging
++ Ultrasound
++ Positron emission tomography
++ Optical imaging
- Computer Aided Systems for Diagnosis, Treatment, Surgery, and Follow-up
++ Image segmentation
++ Rigid and deformable image registration
++ Tracking systems
++ Visualization and augmented reality

These topics are augmented by invited talks of clinical or industrial experts.","Lecture, tutorial, problems for individual study. Guest lectures will be held by experts from local hospitals and med-tech companies to ensure that the covered topics are relevant for clinical practice. The assignments are provided on a weekly basis via the teaching portal. They are discussed in the next tutorial class, and a solution is presented. Work on the assignments and participation in the tutorial class are voluntary. They serve as a means for students to deepen and test their acquired knowledge – as a self-monitoring aid to prepare for the written exam.","Slide show, blackboard","Terry M. Peters, Kevin Cleary: Image-Guided Interventions: Technology and Applications. Springer, 1st edition 2008
Terry M. Peters: Image-guided surgery: From X-rays to Virtual Reality. Comput Methods Biomech Biomed Engin, 4(1):27-57, 2000",124,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473851/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2022,Computer Aided Medical Procedures II,5.0,-,Always,"Navab, Nassir",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"Type of Assessment: exam

The exam takes the form of a written test. The duration is 90 minutes and no material is allowed (closed book). Questions assess whether the student is able to understand the fundamentals, differences, and application areas of advanced algorithms for medical image processing and computer aided surgery.
Small case studies assess whether the student is able to select an appropriate algorithm for a given task or to assess the application of an algorithms as well as its outcome for a given application, respectively.",No,Yes,"IN2021 Computer Aided Medical Procedures, Bachelor in informatics or another scientific or technological course of studies.

Attendance of the lecture IN2021 (Computer Aided Medical Procedures) is beneficial but not mandatory.","Upon successful completion of the module participants are able to understand the fundamentals, differences, and application areas of advanced methods for image processing, image segmentation and image registration as well as are able to implement them in MATLAB. Moreover, participants are able to understand the fundamentals of machine learning and 3D volume visualization. Furthermore, participants are able to understand complex problems in the area of computer aided diagnosis and interventions as well as to develop solution strategies based on the covered algorithms in the aforementioned areas.","The following contents will be covered as examples and, where appropriate, supplemented by industrial or clinical case studies by experts from local clinics and medical technology companies:
- Image processing
++ Image filtering in the local domain
++ Image filtering in the frequency domain 
++ Image transformations
- Image segmentation
++ Pixel-based methods
++ Graph-based methods and graphical models
++ Variation methods
- Image registration
++ Intensity and landmark-based methods
++ Registration of inter/intra patient data and inter/intra modalities
++ Graph-based methods and graphical models
++ Variation methods
- Basics of Machine Learning
++ Clustering
++ Principal Component Analysis
- Fundamentals of 3D Volume Visualization
++ Physical Basics
++ Overview of rendering techniques

In the exercises, there is the possibility for the participants to gain a deeper understanding and practical experience in the implementation or application of the methods to solve real problems.The following contents will be covered as examples and, where appropriate, supplemented by industrial or clinical case studies by experts from local clinics and medical technology companies:
- Image processing
++ Image filtering in the local domain
++ Image filtering in the frequency domain 
++ Image transformations
- Image segmentation
++ Pixel-based methods
++ Graph-based methods and graphical models
++ Variation methods
- Image registration
++ Intensity and landmark-based methods
++ Registration of inter/intra patient data and inter/intra modalities
++ Graph-based methods and graphical models
++ Variation methods
- Basics of Machine Learning
++ Clustering
++ Principal Component Analysis
- Fundamentals of 3D Volume Visualization
++ Physical Basics
++ Overview of rendering techniques

In the exercises, there is the possibility for the participants to gain a deeper understanding and practical experience in the implementation or application of the methods to solve real problems.","Lecture, tutorial, problems for individual study. Guest lectures will be held by experts from local hospitals and med-tech companies to ensure that the covered topics are relevant for clinical practice. The assignments are provided on a weekly basis via the teaching portal. They are discussed in the next tutorial class, and a solution is presented. Work on the assignments and participation in the tutorial class are voluntary. They serve as a means for students to deepen and test their acquired knowledge – as a self-monitoring aid to prepare for the written exam.","Slide show, blackboard, programming exercises","[Peters2000] Terry M. Peters: Image-guided surgery: From X-rays to Virtual Reality. Comput Methods Biomech Biomed Engin, 4(1):27-57, 2000
[MICCAI] Various Proceedings of MICCAI (International Society and Conference Series on Medical Image Computing and Computer-Assisted Intervention)
[TMI] Various IEEE Transactions on Medical Imaging",125,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456378/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2292,Introduction to Surgical Robotics,6.0,-,Always,"Navab, Nassir",Department of Computer Science,-,Master,ISR,-,one semester,winter semester,English,-,180.0,60.0,120.0,-,No,Yes,none,"Students learn about the foundations of applying robotic technology to surgical applications: 
+ Analyzing the pros and cons of the use of robots in existing surgical workflows 
+ Fundamentals of modes of operation, compiling requirements, specifying components and integration aspects of systems
+ Conception and modeling of solutions for problems based on technical and algorithmic approaches
+ Definition of a clinical project for enhancing surgical applications by the use of robotics
This class teaches the fundamental skill sets for working in the field of surgical robotics combined with a project to apply the learned approaches.","The application-oriented course begins with a presentation of surgical interventions in cooperation with surgeons. State-of-the-art methods and methods with robotic assistance will be presented and compared. Then, background knowledge for surgical robotics is presented. Eventually, the acquired knowledge is applied to develop a solution to an existing clinical problem using robotics assistance.

Lecture:
+ Basics of robotic assistance in several surgical applications (potential, challenges and problem definitions)
+ Introduction to robotics: 
++ System
++ Kinematics
++ Dynamics
++ Mechanics 
++ Electronics
++ Sensors
++ Control
++ Software-Infrastructure
++ Safety
++ Workflow
++ Calibration and registration
++ User interface
+ Analysis of current surgical techniques and current trends in related domains (e.g. industry, service robotics, automotive). Identification of innovation potential for future applications of robotics in surgery
++ Current surgical techniques
+++ Workflow, time requirements
+++ Data recording, “digital gaps” (monitoring, repeatability)
+++ Tools
+++ Challenges (what makes it a difficult intervention?)
++ Which technologies are mature?
+++ Sensors, medical imaging, actuators, cognition, machine learning
++ Conception and development of new surgical applications using robotic assistance
+++ Estimation of efforts
+++ First steps
+++ Project schedule

Project Assignments (3-4 Assignments in team with 3-5 students each):
++ Brainstorming, description of the surgical intervention and the problem to be solved (product requirements), description of solution to be implemented (functional specification) 
++ Draft of project schedule and analysis of feasibility
++ Implementation of a functional model (using simulation, prototyping etc.) and presentation  (including a project report – max. 15 pages)The application-oriented course begins with a presentation of surgical interventions in cooperation with surgeons. State-of-the-art methods and methods with robotic assistance will be presented and compared. Then, background knowledge for surgical robotics is presented. Eventually, the acquired knowledge is applied to develop a solution to an existing clinical problem using robotics assistance.

Lecture:
+ Basics of robotic assistance in several surgical applications (potential, challenges and problem definitions)
+ Introduction to robotics: 
++ System
++ Kinematics
++ Dynamics
++ Mechanics 
++ Electronics
++ Sensors
++ Control
++ Software-Infrastructure
++ Safety
++ Workflow
++ Calibration and registration
++ User interface
+ Analysis of current surgical techniques and current trends in related domains (e.g. industry, service robotics, automotive). Identification of innovation potential for future applications of robotics in surgery
++ Current surgical techniques
+++ Workflow, time requirements
+++ Data recording, “digital gaps” (monitoring, repeatability)
+++ Tools
+++ Challenges (what makes it a difficult intervention?)
++ Which technologies are mature?
+++ Sensors, medical imaging, actuators, cognition, machine learning
++ Conception and development of new surgical applications using robotic assistance
+++ Estimation of efforts
+++ First steps
+++ Project schedule

Project Assignments (3-4 Assignments in team with 3-5 students each):
++ Brainstorming, description of the surgical intervention and the problem to be solved (product requirements), description of solution to be implemented (functional specification) 
++ Draft of project schedule and analysis of feasibility
++ Implementation of a functional model (using simulation, prototyping etc.) and presentation  (including a project report – max. 15 pages)",-,-,"+ John J. Craig. 1989. Introduction to Robotics: Mechanics and Control (2nd ed.). Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA.

+ Hagn, U., Nickl, M., Jörg, S., Tobergte, A., Kübler, B., Passig, G., Gröger, M., Fröhlich, F., Seibold, U., Konietschke, R., Le-Tien, L., Albu-Schäffer, A., Grebenstein, M., Ortmaier, T. & Hirzinger, G. (2008) DLR MiroSurge – towards versatility in surgical robotics. 7. Jahrestagung der Deutschen Gesellschaft für Computer- und Roboterassistierte Chirurgie e.V. Proceedings of CURAC, 2008, pp. 143 – 146.

+ Jacob Rosen; Blake Hannaford; Richard M. Satava (Eds.) (2011) Surgical Robotics – Systems Applications and Visions, Springer, ISBN 978-1-4419-1125-4",126,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/936739/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2393,Machine Learning for Regulatory Genomics,6.0,-,from Summer semester 2021,"Gagneur, Julien",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The students are individually evaluated on a project work by the project supervisors, according to their performance:
- During the project work (motivation, problem solving
capacity, data analysis skills, programming
capabilities).
- At the final presentation (clearness of presentation
and slides, used methods, achieved results). 10 minutes.
- In the written report (conciseness, language, used
methods). 20 pages maximum.
The final mark will be given by the supervisors who attend the final lectures.",No,Yes,"Bachelor in mathematics, bioinformatics, computer science,
physics, statistics or a related field. One lecture on machine
learning (e.g IN2064; MA4802). Strong interest in
biological and biomedical research questions.","Gene expression refers to how cells read the information encoded in genomes. At the end of the module students are able to:
1. Describe major steps of gene expression from accessing DNA to determining protein abundance.
2.  Describe genome-wide assays employed to assess various steps of gene expression
3. Describe the concept of massively parallel reporter assays
4. Describe and apply deep learning methods to perform sequence-based predictions
5. Describe and apply the concept of model interpretation
6. Describe and apply the concept of convolutional neural network
7. Describe and apply the concept of transformers
8. Apply deep learning for sequence-based modeling of a genome-wide assay. Evaluate model performance and provide biological interpretation of its application to real data.","This is a two-part module: (1) Six lectures
introduce biological mechanisms, experimental assays, and computational models for regulatory genomics. The six lectures are supported with modeling exercises in python. This is followed by (2) an eight-week hands-on project.
 
The lectures are organized around steps of gene expression:
- Introduction to gene regulation and sequence-based computational models of gene regulation
- Transcriptional regulation
- Chromatin-mediated regulation
- RNA splicing
- RNA modification and degradation
- Translation
 
Over these lectures, computational methods are introduced including:
- Fitting procedures of deep neural network
- Convolutional Neural Networks
- LSTM and transformers
- Embeddings for sequence data
- Multi-task learning and transfer learning
- End-to-end learning
- Analytical and visualisation techniques for model interpretationThis is a two-part module: (1) Six lectures
introduce biological mechanisms, experimental assays, and computational models for regulatory genomics. The six lectures are supported with modeling exercises in python. This is followed by (2) an eight-week hands-on project.
 
The lectures are organized around steps of gene expression:
- Introduction to gene regulation and sequence-based computational models of gene regulation
- Transcriptional regulation
- Chromatin-mediated regulation
- RNA splicing
- RNA modification and degradation
- Translation
 
Over these lectures, computational methods are introduced including:
- Fitting procedures of deep neural network
- Convolutional Neural Networks
- LSTM and transformers
- Embeddings for sequence data
- Multi-task learning and transfer learning
- End-to-end learning
- Analytical and visualisation techniques for model interpretation","We design this module as a two-part module (with 4 SWS contact hours per week): (1) Six lectures introduce the students to the most relevant topics and methods for regulatory genomics. This is followed by (2) an eight-week project work where students focus on specific gene regulatory modeling topics in one partner research lab to get hands-on experience.
Lectures provide the state-of-the-art of regulatory genomics modeling approaches. These concepts are first applied with in-class tutorials following each lecture. During the project work, these concepts are applied on real biological or biomedical data problems under mentoring of the teaching team. The results of the project work are summarized in a final talk and a written report.","Weekly posted exercises online, slides, script, live demo","Goodfellow et al, Deep Learning, MIT press  https://www.deeplearningbook.org/
Eraslan et al. Deep learning: New computational modeling techniques for genomics, Nature Reviews Genetics, 2019",127,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2806034/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2293,Medical Augmented Reality,5.0,-,from Winter semester 2014/15,"Navab, Nassir",Department of Computer Science,-,Master,Medical AR,-,one semester,winter semester,English,-,150.0,60.0,90.0,Written exam,No,Yes,none,"In-situ visualization in medical augmented reality (AR) enables the registered view of virtual data such as a 3D CT scan, with a video view of the real anatomy of a patient. Data can be aligned with the required accuracy such that surgeons do not have to analyze data on an external monitor in the operating room. Instead, surgeons get a direct view onto and into the patient. Mental registration of medical imagery with the operation site is not necessary anymore. Augmenting medical images and virtual surgical instruments within the body provides the most intuitive way to understand the patient’s anatomy within the region of interest. This allows for the development of completely new generations of surgical navigation systems. Our Chair for Computer Aided Medical Procedures (CAMP) is one of the strongest and leading research centers for medical AR world-wide, featuring the world’s most accurate video-see-through AR system based on a head-mounted-display. Also, CAMP has developed the world’s first AR-enabled C-arm, CamC, which has already been tested in clinical trials in Munich. The objectives of this lecture are to have students learn the theoretical basics and practical aspects of augmented reality solutions related to the medical field. The content of the lectures are outlined below.","Lecture:
+ Basics of intra-operative imaging and navigation.
+ Camera calibration using multi-view approaches.
+ Different tracking technologies including: RGB and infrared cameras, optical trackers, Kinect.
+ Projective geometry basics including transformations and reconstruction.
+ Review of multimodal registration, visualization and user interfaces.
+ Real-examples using head mounted display (HMDs), Camera augmented mobile C-arm (CamC) and, intraoperative gamma probes coupled with AR capabilities, AR magic mirror for anatomy education. 
+ Includes visits to the Navigated Augmented Reality Visualization Systems Laboratory, Chirurgische Klinik und Poliklinik Innenstadt; and IFL: Interdisziplinäres Forschungslabor, Klinikum rechts der Isar.

Exercises (every two weeks):
+ Using MatLab or C++
+ Implementation of lecture course topics with students in groups of 2.Lecture:
+ Basics of intra-operative imaging and navigation.
+ Camera calibration using multi-view approaches.
+ Different tracking technologies including: RGB and infrared cameras, optical trackers, Kinect.
+ Projective geometry basics including transformations and reconstruction.
+ Review of multimodal registration, visualization and user interfaces.
+ Real-examples using head mounted display (HMDs), Camera augmented mobile C-arm (CamC) and, intraoperative gamma probes coupled with AR capabilities, AR magic mirror for anatomy education. 
+ Includes visits to the Navigated Augmented Reality Visualization Systems Laboratory, Chirurgische Klinik und Poliklinik Innenstadt; and IFL: Interdisziplinäres Forschungslabor, Klinikum rechts der Isar.

Exercises (every two weeks):
+ Using MatLab or C++
+ Implementation of lecture course topics with students in groups of 2.",Lecture blocks followed by an exercise block the following week,Slides,"Terry Peters and Kevin Cleary - Image Guided Interventions - Technology and Application – Springer 2008 - ISBN-10: 0387738568

Workshop and Proceedings of the following congresses
- IPCAI/CARS
- MICCAI
- SMIT
- ISMAR",128,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/936744/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2322,Protein Prediction I for Computer Scientists,8.0,-,Always,"Rost, Burkhard",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"The module is graded by a written exam at the end of the semester. The exam takes 120 minutes. 	
Weekly programming exercises and questions are graded and contribute to 50% of the final grade. 	
In the exam the participants demonstrate their ability to devise and discuss an appropriate computational approach for a solution to a biological problem in the area of structure prediction. For example, they choose the appropriate methods depending on the type of data they have (1D, 2D, 3D) as well as the appropriate data abstraction level (1D, 2D, 3D) depending on the respective biological question. They demonstrate their understanding of the concepts in the choice of appropriate solution approaches to the given tasks and they can evaluate these in terms of a discussion of the various pros and cons of alternative approaches in biological as well as in technical aspects. They can demonstrate their ability to create a usable tool implementing a solution approach down to the level of pseudo-code. More details are announced at the lecture beginning.",No,Yes,,"Students understand the basic principles in protein sequence analysis, in protein structure and protein structure prediction. They understand the biological and computer science background of the methods toward these objectives in computational biology. 	
Students have acquired the theoretical background consisting of the presented knowledge to develop and implement simple independent solutions towards the presented problems.","Introduction: What is a protein? What is protein structure & function? Overview of methods predicting protein structure. 	
Methods: Sequence comparisons (sequence-sequence, sequence-profile, profile-profile, HMM); prediction of protein structure in 1D (secondary structure, solvent accessibility, membrane helices), 2D (contact prediction methods, contemporary methods using correlated mutations), 3D (comparative modeling, MD); prediction of disorder in proteins. 	
The lectures include an introduction to machine learning with particular focus on how to avoid over-estimating performance.Introduction: What is a protein? What is protein structure & function? Overview of methods predicting protein structure. 	
Methods: Sequence comparisons (sequence-sequence, sequence-profile, profile-profile, HMM); prediction of protein structure in 1D (secondary structure, solvent accessibility, membrane helices), 2D (contact prediction methods, contemporary methods using correlated mutations), 3D (comparative modeling, MD); prediction of disorder in proteins. 	
The lectures include an introduction to machine learning with particular focus on how to avoid over-estimating performance.","Lectures, Exercises, Questions & Answers (Q&A) sessions	
Lectures (include Q&A): Theoretical background for all topics will be presented in traditional lecture style with slides, as well as, interactively through white board presentations and Q&A sessions. 	
Exercises (include Q&A): Practical programming exercises deepening and applying the material presented in the lectures; occasionally, presentation of additional material needed for better understanding; exercises also include interactive Q&A sessions, and presentations from the students.","Lectures presented as interactive seminars using projector and white board; some lectures will be given on the white board, only. If supported: All lectures will be video-taped and both the slides and the recordings will be made available shortly after the lecture.","Will be announced in the lecture. For formal reasons: Anna Tramontano: Introduction to Bioinformatics, or Arthur Lesk: Introduction to Bioinformatics, or Amit Kessel & Nir Ben-Tal: Introduction to Proteins",129,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1149546/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2291,Protein Prediction II for Computer Scientists,8.0,-,Always,"Rost, Burkhard",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"The module is graded by a written exam at the end of the semester. The exam takes 120 minutes. 	
Weekly programming exercises and questions are not graded; they may bring a bonus of +0.3 in the final grade. 	
In the exam, the participants demonstrate their ability to devise and discuss an appropriate computational approach solving a biological problem in the area of protein function prediction. For instance, they choose the appropriate methods depending on the type of data they have (e.g. sequence or annotation data) along with the appropriate data abstraction level (e.g. GO level, EC classes) depending on the particular biological question. 	
Students demonstrate their understanding of the concepts in the choice and/or design of appropriate solutions and they can evaluate pros and cons of given their answers and of alternative approaches. They can demonstrate their ability to create a usable tool implementing a solution approach down to the level of pseudo-code.	
More details will be announced early on in the lecture.",No,Yes,None required (recommended: IN2322: Protein Prediction I for Computer Scientists),"Students will learn the basic principles of protein sequence analysis with focus on protein function and protein function prediction. They will be confronted with the biological and computer science background of the methods toward these objectives in computational biology. Particular focus will be on learning safeguards to correctly estimate performance of machine learning. As opposed to the first part (Protein Prediction I for Computer Scientists), protein structure plays at most a minor role: it will be introduced only if it has been helpful to further our understanding of function.	
Students will acquire the theoretical background consisting of the presented knowledge to develop and implement simple independent solutions towards the presented problems.","Introduction: What is a protein? What is protein function? Overview over prediction of protein function. 	
Predicting protein function using sequence: motifs, annotation transfer by homology (homology-based inference), de novo predictions. Predicting protein function using structure: structural motifs, annotation transfer via structure similarity. Prediction of: subcellular localization, protein-protein interactions, protein-DNA and –RNA interactions, protein-substrate interactions, protein networks, GeneOntology (GO), Enzyme Classification, prediction of enzymatic activity, prediction of functional classes (e.g. GO classes). 	
Prediction of the effect of single point mutations (sequence variants) on protein function and the organism (focus on single amino acid variants). Prediction of phenotype from genotype.	
As opposed to the first part (Protein Prediction I), protein structure plays a minor role confined to what is helpful to further our understanding of protein function. Another major difference is that alignment methods will not be discussed although their results (evolutionary information) will be central to almost all prediction methods.Introduction: What is a protein? What is protein function? Overview over prediction of protein function. 	
Predicting protein function using sequence: motifs, annotation transfer by homology (homology-based inference), de novo predictions. Predicting protein function using structure: structural motifs, annotation transfer via structure similarity. Prediction of: subcellular localization, protein-protein interactions, protein-DNA and –RNA interactions, protein-substrate interactions, protein networks, GeneOntology (GO), Enzyme Classification, prediction of enzymatic activity, prediction of functional classes (e.g. GO classes). 	
Prediction of the effect of single point mutations (sequence variants) on protein function and the organism (focus on single amino acid variants). Prediction of phenotype from genotype.	
As opposed to the first part (Protein Prediction I), protein structure plays a minor role confined to what is helpful to further our understanding of protein function. Another major difference is that alignment methods will not be discussed although their results (evolutionary information) will be central to almost all prediction methods.","Lectures, Exercises, Questions & Answers (Q&A) sessions	
Lectures (include Q&A): Theoretical background for all topics will be presented in traditional lecture style with slides, as well as, interactively through white board presentations and Q&A sessions. 	
Exercises (include Q&A): Programming of a particular novel prediction method; this will deepen and apply the material presented in the lectures; occasionally, presentation of additional material needed for better understanding; exercises also include interactive Q&A sessions, and presentations from the students.","Lectures presented as interactive seminars using projector and white board; some lectures will be given on the white board, only. If supported: All lectures will be video-taped and both the slides and the recordings will be made available shortly after the lecture.","Will be announced in the lecture. For formal reasons: Anna Tramontano: Introduction to Bioinformatics, or Arthur Lesk: Introduction to Bioinformatics, or Amit Kessel & Nir Ben-Tal: Introduction to Proteins",130,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/930647/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3230000,Advanced Concepts of Programming Languages,6.0,-,from Winter semester 2022/23,"Seidl, Helmut",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"The assessment is by means of a written exam of 90 minutes. Individual assignments assess in how far students are able to reproduce the complex semantical behaviors of small example programs. Their knowledge and practical skills concerning programming constructs is further assessed by assignments, which ask to simulate programming language constructs of one kind by programming language constructs of another kind.  It is permitted to prepare a double-sided A4 sheet of paper for the written exam and bring it to the exam.",Yes,No,"IN0001 Introduction to Informatics,
IN0002 Fundamentals of Programming (Exercises & Laboratory),
IN0003 Functional Programming and Verification,
at least one programming language","After successful completion of this module, students are familiar with an assortment of programming language constructs from popular programming languages. They understand the semantics of these constructs as well as the implementation consequences, that they inflict on the implementation as well as the runtime behavior of compiler and runtime system. They are able to analyze and compare different language based approaches, to discuss their relative merits and potential workarounds in case certain language features are missing. By means of this knowledge, they are able to extend existing compilers to handle the aforementioned constructs as well as able to re-encode concepts from one language by means of another language.","This is not a beginners programming course – Instead, this lecture focusses on the semantics of various programming language concepts, and their implementation from the point of view of a compiler engineer. Topics may include, among others:
- Relaxed Memory Models
- Wait-/Lock-free Programming
- Locks, Monitors & Condition Variables
- Transactional Memory
- Gotos, Co-Routines and Continuations
- Single/Multi-Dispatching
- (Multiple-) Inheritance
- Delegation and Prototype Based Programming
- Aspect Oriented Programming
- Meta programmingThis is not a beginners programming course – Instead, this lecture focusses on the semantics of various programming language concepts, and their implementation from the point of view of a compiler engineer. Topics may include, among others:
- Relaxed Memory Models
- Wait-/Lock-free Programming
- Locks, Monitors & Condition Variables
- Transactional Memory
- Gotos, Co-Routines and Continuations
- Single/Multi-Dispatching
- (Multiple-) Inheritance
- Delegation and Prototype Based Programming
- Aspect Oriented Programming
- Meta programming","By means of pre-recorded lesson videos of around 15 minutes each, students can prepare the lecture content at their own pace. In the classroom, students can open discussion on unclear parts of the lesson videos. Additionally, illustrating examples and live programming enhance and deepen the student’s insights into the topics. Selected problems that are then solved by the joined effort of the audience and the lecturer further illustrate the lessons with hands-on experiences.
In the additionally offered exercise course (2h), accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, train students to apply the learnt concepts in implementations and develop the skill to to simulate the effect of missing language features by others.","Pre-recorded lesson videos, in-class programming experiments, quizzes, collaborative shared whiteboard, programming assignments","Selected literature of the area and appropriate conference or journal papers.

Excerpts from topic-based literature:
Topic:
- Memory Consistency [11]
- Functional Memory Model [2]
- Transactional Memory [4]
- Synchronization in Functional Programming [8]
- Multiple Dispatching [7]
- Multiple inheritance [3]
- Mixins [1] and Traits [9]
- Prototype Based Programming [5]
- Aspect Oritentation [6]
- Metaprogramming [10
References:
[1] Gilad Bracha and William Cook. “Mixin-based inheritance”. In: European conference on object-oriented programming on Object-oriented programming systems, languages, and applications (OOPSLA/ECOOP) (1990).
[2] Stephen Dolan, KC Sivaramakrishnan, and Anil Madhavapeddy. “Bounding data races in space and time”. In: (June 2018). doi: 10.1145/3296979.3192421.
[3] Margaret A. Ellis and Bjarne Stroustrup. The Annotated C++ Reference Manual. Addison-Wesley, 1990. isbn: 0-201-51459-1.
[4] Tim Harris, James Larus, and Ravi Rajwar. “Transactional Memory, 2nd edition”. In: Synthesis Lectures on Computer Architecture 5.1 (2010), pp. 1–263.
[5] Roberto Ierusalimschy. Programming in Lua, Third Edition. Lua.Org, 2013. isbn: 859037985X.
[6] H. Masuhara, G. Kiczales, and C. Dutchyn. “A Compilation and Optimization Model for Aspect-Oriented Programs”. In: Compiler Construction. Lecture Notes in Computer Science 2622 (2003). Ed. by G”orel Hedin, pp. 46–60.
[7] Radu Muschevici et al. “Multiple dispatch in practice”. In: Proceedings of the 23rd Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2008, October 19-23, 2008, Nashville, TN, USA. Ed. by Gail E. Harris. ACM, 2008, pp. 563–582. doi: 10.1145/1449764. 1449808. url: https://doi.org/10.1145/1449764.1449808.
[8] Simon Peyton Jones, Andrew Gordon, and Sigbjorn Finne. “Concurrent Haskell”. In: Proceedings of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. POPL ’96. St. Petersburg Beach, Florida, USA: Association for Computing Machinery, 1996, pp. 295–308. isbn: 0897917693. doi:
10.1145/237721.237794. url: https://doi.org/10.1145/237721.237794.
[9] Nathanael Sch¨arli et al. “Traits: Composable Units of Behaviour”. In: European Conference on Object-Oriented Programming (ECOOP) (2003).
[10] Peter Seibel. Practical Common Lisp. 1st. USA: Apress, 2012. isbn: 1430242906. url: https://gigamonkeys.com/book/.
[11] Daniel J. Sorin, Mark D. Hill, and David A. Wood. A Primer on Memory Consistency and Cache Coherence. 1st. Morgan & Claypool Publishers, 2011. isbn:
1608455645, 9781608455645.",132,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3307469/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3350,Selected Topics in Formal Methods and their Applications,5.0,-,Always,"Seidl, Helmut",Department of Computer Engineering,5 ECTS from SS18,Master,-,-,one semester,irregularly,German/English,-,,,,The academic assessment will be done by a written exam. Assignments checking knowledge verify the familiarity with the main concepts of selected topics in Formal Methods and their Applications. Transfer assignments and small scenarios check the ability to apply and evaluate these concepts systematically and in a qualified manner.,No,Yes,Bachelor in Informatics,Participants know the state of the art in selected topics in Formal Methods and their Applications and are able to deal with current research projects.,Different lecturers offer courses about selected topics in Formal Methods and their Applications with a varying amount of credits. Master students in Informatics may choose this module only once as an elective module in the field of Formal Methods and their Applications (FMA).Different lecturers offer courses about selected topics in Formal Methods and their Applications with a varying amount of credits. Master students in Informatics may choose this module only once as an elective module in the field of Formal Methods and their Applications (FMA).,"By means of a presentation, either by slides or whiteboard, the lecture presents selected concepts and techniques 
from the area of Formal Methods and illustrates these by examples.
Possbly accompanying assignments for individual study may deepen the understanding of the concepts explained in the 
module, train students to apply the learnt concepts and techniques to solve reasonably sized tasks on their own.","slide show, blackboard, possibly online programming and/or animations","Primary source scientific literature (e.g. journals, conference proceedings), depending on the topic",133,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/480385/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2041,Automata and Formal Languages,8.0,-,Always,Esparza,Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"Students are assessed by means of a written 120 minutes exam consisting of a list of exercises. Some exercises test if the students are able to construct finite automata for different languages, directly or with the help of composition operations. Other exercises test if the student knows and can apply and combine the algorithms to move between logical and automata-theoretic descriptions. Other exercises test if students can select the right automata-theoretic technique to solve problems related to verification and pattern-matching.",No,Yes,IN0011 Introduction to Theory of Computation,"On successful completion of the module, students will be able to
- use finite automata as a data structure for representation of finite and infinite sets;
- understand and determine the computational complexity of different operations for different classes of automata;
- move to and fro logical and automata-theoretic descriptions; 
- apply automata to problems in pattern matching and formal verification.","The module is divided into two parts. The first part deepens and expands the study of finite automata initiated in IN0011 (Introduction to theoretical computer science), while the second introduces automata on infinite words. In both parts automata are seen as a data structure for the manipulation of (possibly infinite) sets and relations. The module shows how to implement Boolean operations and joins for different automata classes (nondeterministic and deterministic automata, binary decision diagrams, Büchi automata). It also introduces the connection between automata and logic. The algorithms are applied to a variety of problems, ranging from pattern-matching to program verification and solution of Diophantine equations.The module is divided into two parts. The first part deepens and expands the study of finite automata initiated in IN0011 (Introduction to theoretical computer science), while the second introduces automata on infinite words. In both parts automata are seen as a data structure for the manipulation of (possibly infinite) sets and relations. The module shows how to implement Boolean operations and joins for different automata classes (nondeterministic and deterministic automata, binary decision diagrams, Büchi automata). It also introduces the connection between automata and logic. The algorithms are applied to a variety of problems, ranging from pattern-matching to program verification and solution of Diophantine equations.","The module consists of lectures and tutorials. During the lectures students are asked to solve small exercises online. Students also received weekly assignments, whose solution is discussed in the tutorials.","Slide show, blackboard, tool presentations, written assignments.","Javier Esparza: Automata Theory --- An algorithmic approach. Lecture notes, 2012.
John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman; Introduction to Automata Theory, Languages and Computation; Addison-Wesley Longman, 3rd edition, 2006.
Joerg Flum, Erich Graedel, Thomas Wilke (eds.); Logic and Automata: History and Perspectives, Volume 2; Amsterdam University Press, 2008. 
Dominique Perrin, Jean-Eric Pin; Infinite Words: Automata, Semigroups, Logic and Games; Academic Press, 2004.",134,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456400/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2042,Automata and Formal Languages II,5.0,-,Always,Esparza,Department of Computer Science,ab SS13 4 SWS und 5 Credits,Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,Students are assessed by means of a 75 minutes written exam consisting of a list of exercises. Some exercises test the ability of the student to compute operations on automata. Further exercises test if the student can produce an adequate automaton for a given language using the operations described in the lectures. Other exercises test if the student can identify the right automat-theoretic techniques to solve a problem from another domain.,No,Yes,"IN0007 Fundamentals of Algorithms and Data Structures, IN0011 Introduction to Theory of Computation, IN2052 Automata and Formal Languages","Successful participation enables students to
- explain the interest and applications of automata going beyond classical automata on word,
- select the automata-theoretic description of 
a given language, and compute it, 
- perform a variety of operations on automata, and 
estimate their computational complexity, and 
- apply automata-theoretic techniques to problems in other areas, like text analysis, program verification or program analysis.","The course deals with advanced topics in automata theory. Possible contents are:
- Tree automata: tree languages, regular expressions, logics, tree transducers
- Weighted automata: finite and pushdown weighted automata, logics
- Automata for infinite-state verification: pushdown systems, well-structured systemsThe course deals with advanced topics in automata theory. Possible contents are:
- Tree automata: tree languages, regular expressions, logics, tree transducers
- Weighted automata: finite and pushdown weighted automata, logics
- Automata for infinite-state verification: pushdown systems, well-structured systems","The module consists of lectures and tutorials. During the lectures students are asked to solve small exercises online. Students also received weekly assignments, whose solution is discussed in the tutorials.","Slide show, blackboard, tool presentations, written assignments.","- Joerg Flum, Erich Graedel, Thomas Wilke (eds.); Logic and Automata: History and Perspectives, Volume 2; Amsterdam University Press, 2008. 
- H. Comon and M. Dauchet and R. Gilleron and  C. Löding, F. Jacquemard, D. Lugiez, S. Tison, M. Tommasi; Tree Automata Techniques and Applications, Available on: http://www.grappa.univ-lille3.fr/tata, 2007.
- Manfred Droste, Werner Kuich, Heiko Vogler, Handbook of Weighted Automata; Springer, 2009. 
- Dominique Perrin, Jean-Eric Pin; Infinite Words: Automata, Semigroups, Logic and Games; Academic Press, 2004. 
- Christel Baier, Boudewijn R. Haverkort, Holger Hermanns, Joost-Pieter Katoen , Markus Siegle; Validation of Stochastic Systems: A Guide to Current Research; Springer, 2008.",135,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456408/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2227,Compiler Construction I,5.0,20101,from Summer semester 2010,"Seidl, Helmut",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German/English,-,150.0,60.0,90.0,"The assessment is by means of a written exam of 90 minutes. The individual assignments assess the theoretical and practical knowledge about the techniques which are required to realize the different components of a compiler. The assignments which refer to the frontend assess that the fundamental concepts and algorithms concerning finite automata and contextfee grammars are understood and can be applied to small example automata or grammars. The assignments referring to the middleend, may, e.g., assess in how far students have understood the concept of types and type systems, and are able to apply their knowledge to small example programs. The assignments referring to the backend assess in how far students are able to apply the learnt translation schemes and algorithms to generate for small example programs code for a simple target architecture. It is permitted to prepare a double-sided A4 sheet of paper for the written exam and bring it to the exam. 
The successful 15-minute presentation of a selected advanced topic of the lecture can be included as a grade bonus of 0.3 in the evaluation of the exam. The exact details are timely announced at the begin of the lecture.",No,Yes,"IN0011 Introduction to Theory of Computation, IN0009 Basic Principles: Operating Systems and System Software, knowledge of a programming language, experience with system software, automata theory","After successful completion of this module, students are familiar with the basic concepts and techniques of compiler construction. They know the practically relevant methods which are employed in the three components of a compiler, the frontend, the middleend and the backend. By means of this knowledge, they are able to realize a simple compiler for a simple programming language which generates code for a simple target architecture.","A compiler is an essential part of the systems software. The purpose of a compiler is to translate programs of a high-level programming language such as, e.g., C or Java, into sequences of machine instructions. Compilers are rather complicated systems in which ideas and methods of many areas can be applied. Therefore, topics of the lecture are, among others:

- Code generation for an abstract machine;
- lexical analysis;
- syntactic analysis;
- symbol tables;
- type checking for imperative languages;
- type inference for functional languages.A compiler is an essential part of the systems software. The purpose of a compiler is to translate programs of a high-level programming language such as, e.g., C or Java, into sequences of machine instructions. Compilers are rather complicated systems in which ideas and methods of many areas can be applied. Therefore, topics of the lecture are, among others:

- Code generation for an abstract machine;
- lexical analysis;
- syntactic analysis;
- symbol tables;
- type checking for imperative languages;
- type inference for functional languages.","The lecture presents basic principles and techniques of compiler construction and illustrates these by means of small examples.
Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, train students to apply the learnt techniques to solve reasonably sized tasks from the various components of a compiler.
- The lecture is taught in flipped classroom mode.
- Lecture videos are prepared by students in advance.
- There will be a weekly on-site meeting (inverted classroom sessions) for mini quizzes, questions & answers, tutorials, demonstrations, more practice examples.","Slide show, blackboard, possibly online programming and/or animations","Aho, Sethi, Ullmann: Compilers. Principles, Techniques and Tools. Addison-Wesley, 1985 
Wilhelm, Seidl, Hack: Übersetzerbau. Das Frontend. Springer-Lehrbuch, 2012",136,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/520233/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2347,Functional Data Structures,5.0,-,Always,"Nipkow, Tobias",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,The exam takes the form of a written test of 120 minutes or an oral exam of 30 minutes. The exam will assess students’ foundational understanding of functional data structures. This will involve both programming tasks and proofs and will test the students’ ability to use that data structures covered in the lectures and to design new data structures and algorithms based on the methods covered in the module.,No,Yes,Functional programming (IN0003 Introduction to Informatics 2); Discrete mathematics (IN0015 Discrete Structures); Data structures and algorithms (IN0007 Fundamentals of Algorithms and Data Structures),"After the successful completion of this module, students will have an
in-depth understanding of a range of functional data structures and are able to prove properties about them with the help of a computer-based proof assistant. Students will be able to
- select suitable implementations of functional data structures for common programming tasks,
- design and implement new functional data structures that are based on the principles covered in the  module,
- prove the correctness and complexity of the data structures on paper and with the help of a proof assistant.","The module introduces students to the design and analysis of data structures for functional programming languages. It assumes that the students are familiar with functional programming and with running time analysis of algorithms. The module covers a range of functional data structures with an emphasis on their precise analysis. Proofs of both functional correctness and complexity will be a core part of the module   Proofs are carried out with the help of a computer-based proof assistant. An introduction to the proof assistant is part of the module.

A selection of the following non-exhaustive list of data structures and
algorithms will be covered:
- Sorting
- Search trees: Unbalanced trees, AVL trees, Red-Black trees, 2-3 trees, Weight balanced trees, Splay trees, Tries
- Other trees: Quad trees, Finger trees
- Huffman coding
- Priority queues: Braun trees, Leftist heaps, Skew binomial heaps, Skew heaps, Pairing heaps, Fibonacci heaps
- Dijkstra's algorithm
- String matchingThe module introduces students to the design and analysis of data structures for functional programming languages. It assumes that the students are familiar with functional programming and with running time analysis of algorithms. The module covers a range of functional data structures with an emphasis on their precise analysis. Proofs of both functional correctness and complexity will be a core part of the module   Proofs are carried out with the help of a computer-based proof assistant. An introduction to the proof assistant is part of the module.

A selection of the following non-exhaustive list of data structures and
algorithms will be covered:
- Sorting
- Search trees: Unbalanced trees, AVL trees, Red-Black trees, 2-3 trees, Weight balanced trees, Splay trees, Tries
- Other trees: Quad trees, Finger trees
- Huffman coding
- Priority queues: Braun trees, Leftist heaps, Skew binomial heaps, Skew heaps, Pairing heaps, Fibonacci heaps
- Dijkstra's algorithm
- String matching","The module consists of lectures and tutorials. In the lectures, the material is presented by the teacher, in dialogue with the students. During the tutorials, the students work on given exercises either individually or in small groups with help from the tutors. Exercises can be computer-based as well as paper and pencil based.","Lecture notes, slides, blackboard, online exercises and homework assignments",Chris Okasaki. Purely Functional Data Structures. Cambridge University Press 1999,137,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1338241/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2296,Games on Graphs,5.0,-,Always,Esparza,Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German/English,-,150.0,60.0,90.0,"Type of Assessment: 90 minutes written or 20 minutes oral examination
Depending on the number of participants, the examination consists of an oral or a written exam. In the examination, students describe and apply algorithms for solving the types of games discussed in the lectures. They show that they can apply these algorithms by solving problem instances of smaller scale. Further, students have to show their understanding of the algorithms and mathematical concepts.",No,Yes,"MA0901 Linear Algebra for Informatics, IN0011 Introduction to Theory of Computation, IN0015 Discrete Structures, IN0018 Discrete Probability Theory",After successfully completing the course students know the basic definitions of game theory. They can apply the corresponding algorithms and solve small problem instances directly by hand. Further they understand the mathematical concepts underlying the algorithms for solving the discussed classes of games.,"In the module students are introduced to the theory of games played on a (finite) graph (also: recursive games with finite state space). 
By means of different variants of reachability games (with/without chance, turn-based/concurrent moves) the students learn the basic definitions and algorithms in the field of mathematical game theory.
Building up on the reachability games more involved quantitative (e.g. Markov decision processes, discouted-payoff games, mean-payoff games, Shapely's stochastic games) and qualitative (e.g. Parity, Rabin, Muller, Streett) variants are discussed.
Further topics include e.g. techniques for reducing memory consumption (e.g. BDDs), tool presentations (e.g. PRISM), games with partial observations, games on pushdown graphs, relations to logics and set theory (e.g. Gale-Stewart games and Martin's determinacy result), or the synthesis of controllers.In the module students are introduced to the theory of games played on a (finite) graph (also: recursive games with finite state space). 
By means of different variants of reachability games (with/without chance, turn-based/concurrent moves) the students learn the basic definitions and algorithms in the field of mathematical game theory.
Building up on the reachability games more involved quantitative (e.g. Markov decision processes, discouted-payoff games, mean-payoff games, Shapely's stochastic games) and qualitative (e.g. Parity, Rabin, Muller, Streett) variants are discussed.
Further topics include e.g. techniques for reducing memory consumption (e.g. BDDs), tool presentations (e.g. PRISM), games with partial observations, games on pushdown graphs, relations to logics and set theory (e.g. Gale-Stewart games and Martin's determinacy result), or the synthesis of controllers.","Lectures, tutorials, homework for self-study","Slide show, blackboard, tool presentations","Filar, Vrieze: Competitive Markov Decision Processes, Springer, 1996
Grädel, Thomas, Wilke: Automata, Logics, and Infinite Games, Springer 2002
Perrin, Pin: Infinite Words – Automata, Semigroups, Logics and Games, Elsevier 2004",138,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/930144/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2049,Logic,8.0,-,Always,Esparza,Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"In the written 120 minutes exam, questions are designed to assess the student's grasp of the relationships between syntax, semantics and proof systems, both in terms of abstract concepts and in terms of small concrete proofs in deductive systems or with the help of algorithmic decision or semi-decision procedures like resolution. They will also be required to prove or apply basic meta-theoretic results characterising particular logical systems.",No,Yes,"IN0015 Discrete Structures, IN0011 Introduction to Theory of Computation, IN0003 Introduction to Informatics 2, basic knowledge of propositional logic (boolean algebra) and discrete mathematics","The students understand the fundamental difference between syntax and semantics. In particular, they are able to perform proofs in a deductive system and can prove the soundness and completeness of that system w.r.t. a semantics. They understand the limitations of logic and the relationship between logic and computability. In particular they can prove the undecidability of some basic problem like validity of formulas. They can formalize problems in informatics or mathematics in logic and can solve them algorithmically using decision or semi-decision procedures like resolution.","In the context of propositional and predicate logic the following basic notions are covered:
- Syntax and semantics
- Proof system and proof search
- Soundness and completeness
- Decidability
- Expressiveness

Possible further topics (non exhaustive):
- Proof systems
- Automated theorem proving
- Verification
- Decision procedures
- Prolog
- Data base theory
- Higher-order logic
- Set theory
- Constructive logic
- Fuzzy logic.In the context of propositional and predicate logic the following basic notions are covered:
- Syntax and semantics
- Proof system and proof search
- Soundness and completeness
- Decidability
- Expressiveness

Possible further topics (non exhaustive):
- Proof systems
- Automated theorem proving
- Verification
- Decision procedures
- Prolog
- Data base theory
- Higher-order logic
- Set theory
- Constructive logic
- Fuzzy logic.","The module consists of lectures and tutorials. In the lectures, the material is presented by the teacher, in dialogue with the students. During the tutorials, the students work on given exercises either individually or in small groups with help from the tutors. Exercises are primarily pen and paper based but may also involve computer-based components.","Lecture notes, slides, blackboard, online exercises and homework assignments","- Ebbinghaus, Flum, Thomas. Einführung in die mathematische Logik (English: Mathematical Logic).
- Herbert Enderton. A Mathematical Introduction to Logic.
- Melvin Fitting. First-Order Logic and Automated Theorem Proving.
- Jean Gallier. Logic for Computer Science.
- John Harrison. Handbook of Practical Logic and Automated Reasoning.
- Uwe Schöning. Logik für Informatiker (English: Logic for Computer Scientists).
- A. Troelstra and H. Schwichtenberg. Basic Proof Theory.",140,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456426/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2050,Model Checking,8.0,-,Always,Esparza,Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,English,-,240.0,90.0,150.0,Students are assessed by means of a written exam (120 minutes) consisting of a list of exercises. Some exercises test the ability of the student to model small toy examples of hardware and software systems. Other exercises test if the student is able to formalize specifications described in natural language. Further exercises test if the students can select the most adequate technique for the state-explosion problem in a given system and apply it.,No,Yes,"IN0007 Fundamentals of Algorithms and Data Structures, IN0011 Introduction to Theory of Computation, IN0015 Discrete Structures","Successful participation enables students to
- explain the role of model checking for ensuring hardware and software quality
- give formal models of simple hardware and software systems
- write formal specifications of simple safety and liveness properties using temporal logic
- explain algorithms for checking if a program satisfies a given specification and apply them to small examples
- understand and explain techniques for palliating the state-explosion problem","The course teaches the fundamentals of Model Chekcing. Topics include:
- Representation of hardware and software systems using formal models of computations, e.g., transition systems, pushdown systems, Kripke structures, finite and infinite state automata.
- Representation of specifications using formal logics and automata, e.g., linear and branching time temporal logics, automata on finite and infinite.
- Decidability and complexity of various classes of formal models and specifications, e.g., complexity of finite state model checking for linear and branching time logics.
- Techniques for palliating the state-explosion problem e.g., binary decision diagrams, partial-order reduction, abstraction.
- Industrial application of model checking, e.g., discovery of concurrency bugs, verification of systems software.
- Practical experience in applying model checking tools, e.g., Spin, Blast, CBMC.The course teaches the fundamentals of Model Chekcing. Topics include:
- Representation of hardware and software systems using formal models of computations, e.g., transition systems, pushdown systems, Kripke structures, finite and infinite state automata.
- Representation of specifications using formal logics and automata, e.g., linear and branching time temporal logics, automata on finite and infinite.
- Decidability and complexity of various classes of formal models and specifications, e.g., complexity of finite state model checking for linear and branching time logics.
- Techniques for palliating the state-explosion problem e.g., binary decision diagrams, partial-order reduction, abstraction.
- Industrial application of model checking, e.g., discovery of concurrency bugs, verification of systems software.
- Practical experience in applying model checking tools, e.g., Spin, Blast, CBMC.","The module consists of lectures and tutorials. During the lectures students are asked to solve small exercises online. Students also received weekly assignments, whose solution is discussed in the tutorials.","Slide show, blackboard, tool presentations, written assignments.","- Clarke, Grumberg, Peled: Model Checking, MIT Press, 1999
- Baier, Katoen, Larsen: Principles of Model Checking, MIT Press, 2008
- Emerson: Temporal and Modal Logic,  Chapter 16 in ""Handbook of Theoretical Computer Science"", vol. B, Elsevier, 1991
- Holzmann: The SPIN Model Checker, Addison-Wesley, 2003",141,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456482/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2045,Network Analysis - Statistical and Formal Models and Methods,5.0,-,Always,"Carle, Georg",Department of Computer Engineering,Ab WiSe 14 neuer Titel; ab WS 11/12 5 Credits statt 4; ab WS15 neuer Titel,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,"The exam takes the form of a 75 minutes written test. Comprehension questions allow to assess acquaintance with the concepts of modelling and simulation methods. Questions based on case studies allow to assess the ability to apply specific techniques of modelling, simulation, and evaluation of system behaviour.",No,Yes,"IN0010 Introduction to computer networking and distributed systems, IN0009 Basic Principles: Operating Systems and System Software","After successful completion of the module, participants understand methodological principles and practice-oriented techniques of model building, simulation, and output analysis, also with the help of case studies.","- System modelling
- Concepts of time and event discrete simulation 
- Components of discrete simulation models and -software
- Random number generation and distribution functions
- Evaluation of system behavior
- Performance metrics
- Simulation experiments
- Case studies- System modelling
- Concepts of time and event discrete simulation 
- Components of discrete simulation models and -software
- Random number generation and distribution functions
- Evaluation of system behavior
- Performance metrics
- Simulation experiments
- Case studies","Lecture, exercise course, problems for individual study","Slides, whiteboard, exercise sheets, demonstrations",The slides contain references to scientific articles and other resources about the course.,142,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456414/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2052,Petri Nets,5.0,-,Always,Esparza,Department of Computer Science,Ab SoSe 2015 5 Credits,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"The exam takes the form of a 75 minutes written test. In the written exam students solve three types of exercises. Modelling exercises test the ability of the student to design simple Petri nets with a given functionality, or satisfying a certain number of properties. Analysis exercises test if the student is able to apply the techniques described in the module to decide if a given Petri net satisfies a property. Comprehension exercises test if the student understands the underlying principle of a technique, typically by designing a variant of it, or by deciding if a given variant is correct.",No,Yes,"MA0901 Linear Algebra for Informatics, IN0011 Introduction to Theory of Computation","On successful completion of the module, students will be able to
- model simple concurrent systems with Petri nets;
- analyze small Petri nets by hand;
- select automatic analysis techniques and software tools to analyze larger nets; 
- use the analysis results to evaluate the behavior of concurrent systems.","Petri nets are a formal model for the description and analysis of concurrent systems, like distributed algorithms, communication protocols, manufacturing systems, business processes, or asynchronous circuits. The strengths of Petri nets are a simple, clear graphical notation with a precise semantics, and a wealth of available techniques for analysis and verification.
The module is an introduction to the theory of Petri nets. It presents several variants of Petri nets, and their most relevant analysis techniques: reachability and coverability graphs, linear invariants, structure theory, and unfoldings. The techniques are also illustrated by means of software tools.Petri nets are a formal model for the description and analysis of concurrent systems, like distributed algorithms, communication protocols, manufacturing systems, business processes, or asynchronous circuits. The strengths of Petri nets are a simple, clear graphical notation with a precise semantics, and a wealth of available techniques for analysis and verification.
The module is an introduction to the theory of Petri nets. It presents several variants of Petri nets, and their most relevant analysis techniques: reachability and coverability graphs, linear invariants, structure theory, and unfoldings. The techniques are also illustrated by means of software tools.","The module consists of lectures and tutorials. During the lectures students are asked to solve small modelling and analysis exercises online. Students also received weekly assignments, whose solution is discussed in the tutorials.","Slide show, blackboard, tool presentations, written assignments.","Murata: Petri nets: Properties, analysis and applications. Proceedings of the IEEE, 1989
Desel, Esparza: Free Choice Petri Nets. Cambridge University Press, 1995.
Esparza, Heljanko: Unfoldings: A Partial-Order Approach to Model Checking. Springer, 2008.
Reisig: Elements of Distributed Algorithms - Modeling and Analysis with Petri Nets. Springer, 1998.",143,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456506/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2053,Program Optimization,8.0,-,Always,"Seidl, Helmut",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,The assessment is by means of a written exam of 120 minutes. Some assignments offer small problems from the area of lattice theory by which students may demonstrate how well they are acquainted with basic concepts of program analysis and in how far they are able to apply these concepts in an original way. Other assignments evaluate how well students are able to apply the learnt analyses and transformations to small example programs. Further assignments ask to develop new analyses and optimizations. The successful completion of homework asignments may contribute to the grade as a bonus. The exact details for this are timely announced at the beginning of the lecture.,No,Yes,"Bachelor Informatics, basic knowledge in programming languages or compilers",Participants know the often occurring conflict between good structure and readability of a program as well as the highest possible efficiency of the execution of the program which is likewise desired. They know the techniques to increase the efficiency of the program execution through optimizing transformations of a compiler. They are able to apply these to small example programs and are able to develop new analyses and optimizations on their own.,"The lecture starts with basic dataflow analyses like availability of expressions or liveness of variables together with the optimizing transformations enabled by these analyses. Motivated by the examples, we develop the theoretical background on complete lattices and monotone functions necessary for program analysis methods. Subsequently, we discuss more sophisticated analyses such as constant propagation. By discussing interval analysis, we present general methods for the case where ordinary fixpoint computation will not terminate. Further topics are:
- interprocedural analysis; 
- pointer analysis; 
- fixpoint algorithms. 
We also consider hardware dependent optimizations such as:
- register allocation; 
- instruction selection; 
- instruction scheduling 
and also optimizations to improve the cache behavior.The lecture starts with basic dataflow analyses like availability of expressions or liveness of variables together with the optimizing transformations enabled by these analyses. Motivated by the examples, we develop the theoretical background on complete lattices and monotone functions necessary for program analysis methods. Subsequently, we discuss more sophisticated analyses such as constant propagation. By discussing interval analysis, we present general methods for the case where ordinary fixpoint computation will not terminate. Further topics are:
- interprocedural analysis; 
- pointer analysis; 
- fixpoint algorithms. 
We also consider hardware dependent optimizations such as:
- register allocation; 
- instruction selection; 
- instruction scheduling 
and also optimizations to improve the cache behavior.","By means of a presentation, either by slides or whiteboard, the lecture presents fundamental techniques for the analysis and optimization of programs and illustrates these by means of small examples. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, train students to apply the learnt analyses and optimizations to example programs and develop the skill to realize analyses and optimizations on their own.","Slide show, blackboard, possibly online programming and/or animations","Seidl, Wilhelm, Hack: Compiler Design. Analysis and Transformation. Springer Verlag, 2012",144,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456509/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2340,Quantitative Verification,5.0,-,Always,Esparza,Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"Students are assessed by means of a written exam consisting of a list of exercises. Some exercises test the ability of the student to model small toy examples of hardware and software systems. Other exercises test if the student is able to formalize specifications described in natural language. Further exercises test if the students can select the most adequate technique for the analysis of a given system and apply it.
Type of Assessment: written
Duration of Assessment: 120 min
Homework:N
Term Paper:N
Oral Presentation:N
Conversation:N",No,Yes,"IN0011 Introduction to Theory of Computation
IN0015 Discrete Structures
IN0018 Discrete Probability Theory
IN2050 Model Checking","Successful participation enables students to
•	explain the role of quantitative modelling and analysis for ensuring hardware and software quality.
•	give formal models of simple hardware and software systems describing their probabilistic and timed behavior.
•	write formal specifications of simple safety, dependability, reliability, and performance properties.
•	explain algorithms for checking if a system satisfies a given specification and apply them to small examples.
•	understand and explain techniques for improving practical performance of the analysis algorithms.","The course teaches the fundamentals of modelling and analysis of systems featuring quantitative behavior, such as time and probabilities. Topics include:
•	Representation of hardware and software systems using formal models of computations, e.g., transition systems, discrete-time and continuous-time Markov chains, Markov decision processes, stochastic games, timed automata.
•	Representation of specifications using formal logics, e.g., probabilistic linear temporal logic, probabilistic computation-tree logic, continuous stochastic logic, metric temporal logic.
•	Algorithms for various classes of formal models and specifications, e.g., transient analysis, stationary analysis, mean-payoff optimization, reachability-game solving.
•	Theoretically optimal as well as practical techniques for analysis of large systems, e.g., linear programming, value iteration, strategy iteration, reinforcement learning.
•	Industrial application of the analysis, e.g., randomized communication protocols, embedded systems, cyber-physical systems, safety-critical missions.
•	Practical experience in applying model checking tools, e.g., PRISM, MRMC, UPPAAL.The course teaches the fundamentals of modelling and analysis of systems featuring quantitative behavior, such as time and probabilities. Topics include:
•	Representation of hardware and software systems using formal models of computations, e.g., transition systems, discrete-time and continuous-time Markov chains, Markov decision processes, stochastic games, timed automata.
•	Representation of specifications using formal logics, e.g., probabilistic linear temporal logic, probabilistic computation-tree logic, continuous stochastic logic, metric temporal logic.
•	Algorithms for various classes of formal models and specifications, e.g., transient analysis, stationary analysis, mean-payoff optimization, reachability-game solving.
•	Theoretically optimal as well as practical techniques for analysis of large systems, e.g., linear programming, value iteration, strategy iteration, reinforcement learning.
•	Industrial application of the analysis, e.g., randomized communication protocols, embedded systems, cyber-physical systems, safety-critical missions.
•	Practical experience in applying model checking tools, e.g., PRISM, MRMC, UPPAAL.","The module consists of lectures and tutorials. During the lectures students are asked to solve small exercises online. Students also received weekly assignments, whose solution is discussed in the tutorials.","Slide show, whiteboard, blackboard, tool presentations and written assignments.","•	Baier, Katoen: Principles of Model Checking, MIT Press, 2008
•	Puterman: Markov Decision Processes: Discrete Stochastic Dynamic Programming, John Wiley, 1994
•	Norris: Markov chains, Cambridge University Press, 1998
•	Meyn, Tweedie : Markov Chains and Stochastic Stability, Cambridge University Press, 2009",145,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1254191/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2055,Semantics,8.0,-,Always,"Nipkow, Tobias",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"The exam takes the form of a 120 minutes written test. In the exam, questions are designed to assess the student's ability to read and write small language definitions, to perform precise logical proofs about them, and to verify small programs.",No,Yes,"IN0003 Introduction to Informatics 2, IN0011 Introduction to Theory of Computation, IN0001 Introduction to Informatics 1, basic knowldge of discrete mathematics and imperative and functional programming","After the successful completion of this module, students will have an in-depth understanding of at least one of the three standard techniques for defining semantics of programming languages: operational, denotational or axiomatic. 
This means in particular the following: Students will be able to 
- read programming language specifications and understand their logical implicatiuons,
- define the semantics of individual language constructs,
- prove properties of language definitions or individual programs and
- verify language-based tools like compilers relative to the language sematics.","Core material:
- Operational semantics
  ++  A simple imperative language
  ++  Rule induction
  ++  Equivalence of big step and small step semantics
  ++  Semantics of procedures
  ++  Type safety
  ++  Applications: Compilers, static analysers, or optimizers

- Axiomatic semantics / Hoare logic
  ++  Proof system
  ++  Weakest preconditions
  ++  Verification condition generation
  ++  Soundness and completeness of the axiomatics w.r.t. the operational semantics, relative completeness and expressiveness
   
Optional material (non-exhaustive):
- Semantics of object-oriented languages
- Semantics of functional languages
- Denotational semantics
- Axiomatic semantics of procedures, arrays and pointersCore material:
- Operational semantics
  ++  A simple imperative language
  ++  Rule induction
  ++  Equivalence of big step and small step semantics
  ++  Semantics of procedures
  ++  Type safety
  ++  Applications: Compilers, static analysers, or optimizers

- Axiomatic semantics / Hoare logic
  ++  Proof system
  ++  Weakest preconditions
  ++  Verification condition generation
  ++  Soundness and completeness of the axiomatics w.r.t. the operational semantics, relative completeness and expressiveness
   
Optional material (non-exhaustive):
- Semantics of object-oriented languages
- Semantics of functional languages
- Denotational semantics
- Axiomatic semantics of procedures, arrays and pointers","The module consists of lectures and tutorials. In the lectures, the material is presented by the teacher, in dialogue with the students. During the tutorials, the students work on given exercises either individually or in small groups with help from the tutors. Exercises can be computer-based as well as paper and pencil based.","Lecture notes, slides, blackboard, online exercises and homework assignments","Tobias Nipkow, Gerwin Klein: Concrete Semantics. Springer, 2014.
Hanne Riis Nielson, Flemming Nielson: Semantics with Applications: An Appetizer. Springer, 2007.
Glynn Winskel. The Formal Semantics of Programming Languages. MIT Press, 1993.",146,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456513/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2040,Virtual Machines,6.0,-,Always,"Seidl, Helmut",Department of Computer Engineering,ab SoSe 13 5 SWS und 6 Credits,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The assessment is by means of a written exam of 90 minutes. Individual assignments ask to apply the learnt translation schemes to small example programs. By that, the exam assesses how well the student is acquainted with various programming constructs and whether she or he is able to translate these into machine code. Further assignments reflect on the concept of virtual machines itself by proposing extra language concepts for which translation schemes should be provided. The successful completion of homework asignments may contribute to the grade as a bonus. The exact details for this are announced timely at the begin of the lecture.",No,Yes,At least rudimentary knowledge of different programming languages.,"Participants are acquainted with virtual machines for imperative, functional, logical and object-oriented programming languages. They know the principles by which various programming language concepts are translated into sequences of machine code. For sections of programs, they are able to generate code of some virtual machine, and they are able to apply the learnt principles to provide new translation schemes for given language constructs on their own.","While trying to produce code for a programming language like Prolog, one quickly realizes that one would like to use certain instructions during the translation which are not already available on concrete machines. On the other hand, instruction sets of modern computers are changing so quickly that it doesn't seem useful for the compiler to depend on some arbitrarily chosen instructions. Such a dependance would mean that in a few years one would feel obliged to rewrite the compiler anew.

With the implementation of the first Pascal compilers, one already arrived at the idea of first generating code for a slightly idealized machine, each of whose instructions then only need to be implemented on different target machines. Translation of modern programming languages like Prolog, Haskell or Java are also based on this principle. On one hand this facilitates portability of the compiler. On the other hand this also simplifies the translation itself since one can choose a suitable instruction set according to the programming language to be translated. In particular, we consider:
- the translation of C; 
- the translation of a functional language; 
- the translation of Prolog; 
- the translation of a concurrent dialect of C.While trying to produce code for a programming language like Prolog, one quickly realizes that one would like to use certain instructions during the translation which are not already available on concrete machines. On the other hand, instruction sets of modern computers are changing so quickly that it doesn't seem useful for the compiler to depend on some arbitrarily chosen instructions. Such a dependance would mean that in a few years one would feel obliged to rewrite the compiler anew.

With the implementation of the first Pascal compilers, one already arrived at the idea of first generating code for a slightly idealized machine, each of whose instructions then only need to be implemented on different target machines. Translation of modern programming languages like Prolog, Haskell or Java are also based on this principle. On one hand this facilitates portability of the compiler. On the other hand this also simplifies the translation itself since one can choose a suitable instruction set according to the programming language to be translated. In particular, we consider:
- the translation of C; 
- the translation of a functional language; 
- the translation of Prolog; 
- the translation of a concurrent dialect of C.","By means of a presentation, either by slides or whiteboard, the lecture presents schemata for the translation of various language constructs and illustrates these by means of small examples. Accompanying assignments for individual study deepen the understanding of the concepts explained in the lecture, and train students to apply the learnt schemata for the translation and to develop new schemata for selected language constructs.","Slide show, blackboard, possibly online programming and/or animations","Seidl, wilhelm: Compiler Design. Virtual Machines. Springer, 2010",147,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456398/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2298,Advanced Deep Learning for Physics,6.0,-,Always,Th,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Over the course of the semester, students can voluntarily work on four different
exercise assignments. The exercises topics include key steps of neural network
modeling for simulations. They include algorithms such as pressure projection,
implicit solving of partial differential equations, and representing physics problems
with neural networks. These exercises are also the primary means for students
to demonstrate that they can implement the algorithms of the lecture with
python and the C++ programming languages.
The examination takes the form of a written test with a duration of 90 minutes.
General knowledge questions check whether the students are familiar with the
deep learning concepts, physicals simulations, and discrete representations.
Completion of the voluntary exercises will give a grade bonus upon passing
the exam.
Model calculations on paper are used to test whether students have acquired
knowledge to perform the central solving steps, such as derivative
calculations, material transport, time propagation, and internal force
evaluation. Short programming tasks with pseudo-code check their ability to
solve simple learning and physics problems with suitable algorithms, and their
ability to develop suitable solving methods.",No,Yes,"MA0902 Analysis für Informatiker
MA0901 Lineare Algebra für Informatiker
IN0037 Physikalische Grundlagen für Computerspiele
IN2346 Introduction to Deep Learning","This course targets deep learning techniques and numerical simulation
algorithms for materials such as fluids and deformable objects. In particular,
this course will focus on advanced deep learning concepts such as generative
models and time series prediction, with possible applications in the context of
computer graphics or vision. After taking this course the students have gained
knowledge about the underlying concepts for deep learning algorithms. They are
familiar with topics such as auto-encoders, adversarial training, recurrent
neural networks, and specialized loss functions.
In addition they know about the physical principles of elastic and plastic
materials, with an emphasis on fluids: conservation of mass and momentum,
divergence free motion, and vorticity. Students can explain common discrete and
continuous representations of the phenomena, such as phase functions,level-sets and Cartesian or tetrahedral meshes.
The core component of this lecture are numerical algorithms to work with
partial differential equations. Students can memorize the steps of the
algorithms and are able to apply the learned techniques such as computing loss
function derivatives, finite-difference discretizations, explicit and implicit
integration, in new contexts. They are able to construct working training
algorithms, by choosing suitable activation and loss functions, and can choose
the right network architecture for different regression / generation tasks.
Additionally, students are able to evaluate learning and simulation algorithms
in terms of accuracy and computational complexity. Given a set of specific
requirements of a problem they can construct a solver based on the different
components discussed in the lecture.
In the homework assignments they have acquired practical experience
implementing central components of these solvers in a high-level programming
language, and they have gained experience working with software APIs
implementing higher level functionality.","Navier-Stokes equations and physics of fluids, finite difference discretizations, advection schemes and their stability properties, Poisson problems, numerical iterative solvers for systems of linear equations, surface representations, and boundary conditions; Physics of elastic materials, stress-strain relationships, finite-element modeling, types of basis functions, tetrahedral meshing, plasticity and fracture.Navier-Stokes equations and physics of fluids, finite difference discretizations, advection schemes and their stability properties, Poisson problems, numerical iterative solvers for systems of linear equations, surface representations, and boundary conditions; Physics of elastic materials, stress-strain relationships, finite-element modeling, types of basis functions, tetrahedral meshing, plasticity and fracture.","This course is presented with lectures consisting of digital slides, supported
by blackboard materials for mathematical topics. These materials are combined
with demo applications, videos of real phenomena and digital simulations, and
experiments. The experiments and bi-weekly ''physics fact'' challenges
encourage students to actively participate during the lectures. The exercise
assignments are non-mandatory, and are worked on in groups of two to four
students.","Powerpoint course slides, white board, experiments, online tutorials, source code","- I. Goodfellow, Deep Learning, MIT Press, 2017
- Robert Bridson, Fluid Simulation for Computer Graphics, AK Peters, 2007
- D. Baraff, A. Witkin: Physically Based Modeling, SIGGRAPH course notes, 1997",152,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/930142/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT433027,Advanced Deep Learning for Robotics,8.0,-,from Summer semester 2024,Berthold,Department of Computer Engineering,-,Master,-,-,one semester,winter/summer semester,English,-,240.0,75.0,165.0,"- Written test of 60 minutes at the end of the course (for lecture)
- After each practical session, the students will have to provide the written working code to the teaching assistant for evaluation. 
- In the written exam (50% of the final grade), we will ask questions regarding lecture theory
- In addition, to the written exam, the results of the projects will be evaluated (50% of the final grade); we will evaluate projects on a (bi-) weekly basis including reports (33.33%), oral presentations (33.33%), and code/submissions (33.33%).",Yes,No,"MA0902 Analysis for Informatics
MA0901 Linear Algebra for Informatics

IN2346 Introduction to Deep Learning (expert knowledge required!)","Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks and state of the art deep reinforcement learning methods in the context of robotic tasks. In addition to the theoretical foundations, a significant aspect lies on the practical realization of deep reinforcement learning (DRL) methods in robotic scenarios.","This is the advanced deep learning lecture with a specific focus on Robotics and Deep Reinforcement Learning (including guest lectures from DeepMind and Intrinsic). Taking the “Introduction to Deep Learning” course is expected. 

1.	Introduction & Recap of Deep Learning 
2.	Advanced Network Architectures & Recursive Neural Networks (LSTMs) 
3.	Hyperparameter & Architecture Search   
Bayesian optimization, network architecture search (NAS) 
4.	Adversarial Samples & Adversarial Training 
5.	Bayesian Deep Learning  
Bayesian learning, variational inference, Monte Carlo dropout method 
6.	Generative Models: VAEs & GANs  
variational auto-encoders, generative neural networks (WGAN-GP) 
7.	Data Efficient Learning: Transfer & Semi-Supervised Learning 
8.	Deep Reinforcement Learning I  
MDPs, Q-iteration, Bellman equation, deep Q-learning, example: Atari-games 
9.	Deep Reinforcement Learning II  
policy gradients, REINFORCE, actor-critic algorithm, TRPO, PPO, robotic applications 
10.	Deep Reinforcement Learning III  
advanced methods: DDPG, soft Q-learning, soft actor-critic (SAC), robotic applications 
11.	 &
12.	Guest Lectures from DeepMind  
Recent Developments in Deep Reinforcement Learning for Robotics
13.	Guest Lecture from Intrinsic (formerly Google X Robotics)
Learning methods and challenges in real-world robotic applicationsThis is the advanced deep learning lecture with a specific focus on Robotics and Deep Reinforcement Learning (including guest lectures from DeepMind and Intrinsic). Taking the “Introduction to Deep Learning” course is expected. 

1.	Introduction & Recap of Deep Learning 
2.	Advanced Network Architectures & Recursive Neural Networks (LSTMs) 
3.	Hyperparameter & Architecture Search   
Bayesian optimization, network architecture search (NAS) 
4.	Adversarial Samples & Adversarial Training 
5.	Bayesian Deep Learning  
Bayesian learning, variational inference, Monte Carlo dropout method 
6.	Generative Models: VAEs & GANs  
variational auto-encoders, generative neural networks (WGAN-GP) 
7.	Data Efficient Learning: Transfer & Semi-Supervised Learning 
8.	Deep Reinforcement Learning I  
MDPs, Q-iteration, Bellman equation, deep Q-learning, example: Atari-games 
9.	Deep Reinforcement Learning II  
policy gradients, REINFORCE, actor-critic algorithm, TRPO, PPO, robotic applications 
10.	Deep Reinforcement Learning III  
advanced methods: DDPG, soft Q-learning, soft actor-critic (SAC), robotic applications 
11.	 &
12.	Guest Lectures from DeepMind  
Recent Developments in Deep Reinforcement Learning for Robotics
13.	Guest Lecture from Intrinsic (formerly Google X Robotics)
Learning methods and challenges in real-world robotic applications","The lectures will provide extensive theoretical aspects of advanced deep learning architectures and specifically deep reinforcement learning methods in the field of robotics. The lecture will have reading assignments (e.g., from the DeepLearning book and recent RSS/ICRL/ICRA/IROS papers). 
The practical sessions will be key, students shall get familiar with esp. Deep Reinforcement Learning through hours of training and testing. The students will do a semester-long project in teams of 2 with weekly presentations and tutoring of the projects throughout the semester. They will work with DL frameworks (PyTorch, TensorFlow, …) and simulation environments (OpenAI Gym, PyBullet, Isaac) and implement advanced deep reinforcement learning methods for state of the art robotic problems. For each student, $1000 credits in the Google Cloud are available via a special Google Educational Grant.","Projector, blackboard, PC","- Slides given during the course
- www.deeplearningbook.org",153,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3893427/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230003,Advanced Machine Learning: Deep Generative Models,3.0,-,from Summer semester 2023,Stephan,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"The academic assessment will be done by a written exam of 60 minutes. Assignments will check the knowledge to verify the familiarity with advanced machine learning models, specifically deep generative models. Answering the assignments will require free text formulations as well as choosing among provided alternatives. Short programming tasks with pseudo-code check the students' ability to implement and critically evaluate these algorithms and methods. Small scenarios comparing and evaluating the learned alternatives need to be set-up and investigated.",No,Yes,"Machine Learning, IN2064","Upon successful completion of this module, students will be able to understand the theoretical foundations of advanced machine learning principles. They will be able to identify the core building blocks of generative models such as normalizing flows, GANs, or diffusion models. Moreover, they will be able to apply and implement these learning algorithms in modern programming languages. Furthermore, the students will be able to evaluate and compare the learned methods regarding their qualitative properties.","The module covers advanced machine learning principles, specifically discussing the field of deep generative models. The topics include:

1. Normalizing Flows
•	Forward and Reverse Parametrization
•	Jacobian Determinant Computation
2. Variational Inference
•	Latent variable models
•	ELBO
3. Variational Autoencoders
•	Encoder-Decoder
•	Amortized Inference
4. Generative Adversarial Networks (GANs)
•	Likelihood-free inference
5. Generative Diffusion Models
•	Score function matching
•	Forward (diffusion) and reverse (denoising) algorithmsThe module covers advanced machine learning principles, specifically discussing the field of deep generative models. The topics include:

1. Normalizing Flows
•	Forward and Reverse Parametrization
•	Jacobian Determinant Computation
2. Variational Inference
•	Latent variable models
•	ELBO
3. Variational Autoencoders
•	Encoder-Decoder
•	Amortized Inference
4. Generative Adversarial Networks (GANs)
•	Likelihood-free inference
5. Generative Diffusion Models
•	Score function matching
•	Forward (diffusion) and reverse (denoising) algorithms",Lecture with presentation slides to discuss the theoretical concepts; interactive tutorials and demonstrations to practice concepts and showcase properties; assignments for individual study including programming exercises,"Slides, exercise sheets, white board, programming tasks","•	George Papamakarios, Eric Nalisnick, Danilo Jimenez Rezende, Shakir Mohamed, Balaji Lakshminarayanan. ""Normalizing Flows for Probabilistic Modeling and Inference""
•	Christopher Bishop. “Pattern Recognition and Machine Learning” (Section 9.4)
•	Shakir Mohamed, Lakshminarayanan Balaji. “Learning in Implicit Generative Models”
•	Jonathan Ho, Ajay Jain, Pieter Abbeel. ""Denoising Diffusion Probabilistic Models"" 
•	Jonathan Ho, Ajay Jain, Pieter Abbeel. ""Denoising Diffusion Probabilistic Models""",154,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3471254/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230002,Advanced Natural Language Processing,5.0,-,from Summer semester 2023,"Groh, Georg",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"Written exam (physical) (120 min). 
The exam will test die learning goals in the following way: 

•	understand state of the art deep learning methods presented in scientific publications and are able to explain what motivates and justifies these approaches compared to previous state of the art: 
o	exam questions will present factual details of architectures (in order to prevent the students from having to remember them by heart) and ask questions that check whether the students understood the reasons for these architectural details and their consequences. 
•	apply and combine the building blocks of the presented approaches to /into solutions of problems in other fields of modern NLP that were not explicitly discussed in one of the topical blocks. 
o	Exam questions will check this learning goal by presenting the student with a problem that requires application and combination of architectural building blocks and asking about possible solutions to the problem involving application and combination.
•	on the basis of discussed approaches, able to develop and implement their own deep learning architectures or architecture variants for NLP research (e.g. thesis topics) and NLP applications (in a professional environment).
o	The learning goal is mainly supported through the practical homework exercises. The written exam will test this learning goal by asking for principal ideas for variations of a given architecture in view of tackling an additional requirement given in the question. 
•	analyze, compare and evaluate own and foreign deep architectures for specific NLP problems and applications. Especially, in terms of analysis, students are able to identify elements that are true SOTA advancements (compared to mere “fine-tuning” successes) which have the potential to exceed the scope of nice applications. Here, evaluation is not restricted to algorithmic measures of performance but encompasses evaluating pragmatic choices in view of human NLP applications (ethics, explainability etc.) 
o	The exam will test these learning goals by presenting the students with a practical human-centric NLP problem from Social Computing and with two candidate architectures for the solution. In terms of given criteria the students are asked to compare the two approaches in view of the problem. 

The exam form “written exam” is chosen for the module because for the expected number of students (about 150-200), an oral exam (which would be also an alternative, given the learning goals and the intended checks described above) is not practically possible. 
Student submissions in the form of implemented and evaluated architectural solution to practical problems (project work) would in principle be another way to test certain aspects of the learning outcomes. However, project work is better suited for lab-courses (we offer three such lab courses), because the proportion of theoretical content in the proposed module is higher than for the lab courses. Furthermore, it is hard to ensure compliance to exam regulations for homework-style contributions. With the current other teaching responsibilities in the team, creating a large number of such projects and proper grading of a large number of student submissions is not possible.",No,Yes,"•	IN2346: Introduction to Deep Learning (necessary)
•	IN2361: Natural Language Processing (recommended)","Upon successful completion of this module, students are able to: 
•	understand state of the art deep learning methods presented in scientific publications and are able to explain what motivates and justifies these approaches compared to previous state of the art. 
•	apply and combine the building blocks of the presented approaches to /into solutions of problems in other fields of modern NLP that were not explicitly discussed in one of the topical blocks. 
•	on the basis of discussed approaches, able to develop and implement their own deep learning architectures or architecture variants for NLP research (e.g. thesis topics) and NLP applications (in a professional environment).
•	analyze, compare and evaluate own and foreign deep architectures for specific NLP problems and applications. Especially, in terms of analysis, students are able to identify elements that are true SOTA advancements (compared to mere “fine-tuning” successes) which have the potential to exceed the scope of nice applications. Here, evaluation is not restricted to algorithmic measures of performance but encompasses evaluating pragmatic choices in view of human NLP applications (ethics, explainability etc.)","This module covers selected advanced topics in modern NLP:
	Block 1: Modern Transformer-based architectures & XAI for NLP
•	Evolution of modern Transformer-based architectures (BERT, GPT-n etc.) 
•	Correlation between model size, training data, training mode, and performance. 
•	Zero-shot, few-shot learning, fine-tuning. 
•	Pre-training, meta-learning, in-context learning, verbalization. 
•	Adapters.
•	XAI methods for NLP
Block 2: NMT for low resource languages
•	Seq2Seq evaluation and metrics
•	Synthetic data generation 
•	Integration of monolingual LMs into NMT systems 
•	Transfer-learning between languages 
•	Multilingual model trade-offs
Block 3: Argument Mining and Ethical Aspects of modern NLP
•	Argument Mining
•	Bias in Data, Debiasing efforts and their problems 
•	Toxicity and Hate Speech Detection 
•	Fairness in NLP system outcomes
Block 4: Conversational AI and the link to symbolic AI
•	Open-domain chatbots and task-oriented dialogue systems
•	end-to-end dialogue system 
•	Pipeline-elements for dialogue systems
Block 5: Quantum NLP
•	Basic approaches to Quantum Natural Language Processing
•	The potential of multi-purpose expression
Block 6: Auto-Summarization
•	Abstractive, extractive, contrastive, temporal summarization concepts 
•	Summarization metrics, comparison, and deficiencies 
•	Extractive Summarization algorithm deep-dive.
•	Abstractive summarization approaches (classical, neural, hybrid, contrastive learning)
Block 7: (Open Block): AI models combining natural language and imagesThis module covers selected advanced topics in modern NLP:
	Block 1: Modern Transformer-based architectures & XAI for NLP
•	Evolution of modern Transformer-based architectures (BERT, GPT-n etc.) 
•	Correlation between model size, training data, training mode, and performance. 
•	Zero-shot, few-shot learning, fine-tuning. 
•	Pre-training, meta-learning, in-context learning, verbalization. 
•	Adapters.
•	XAI methods for NLP
Block 2: NMT for low resource languages
•	Seq2Seq evaluation and metrics
•	Synthetic data generation 
•	Integration of monolingual LMs into NMT systems 
•	Transfer-learning between languages 
•	Multilingual model trade-offs
Block 3: Argument Mining and Ethical Aspects of modern NLP
•	Argument Mining
•	Bias in Data, Debiasing efforts and their problems 
•	Toxicity and Hate Speech Detection 
•	Fairness in NLP system outcomes
Block 4: Conversational AI and the link to symbolic AI
•	Open-domain chatbots and task-oriented dialogue systems
•	end-to-end dialogue system 
•	Pipeline-elements for dialogue systems
Block 5: Quantum NLP
•	Basic approaches to Quantum Natural Language Processing
•	The potential of multi-purpose expression
Block 6: Auto-Summarization
•	Abstractive, extractive, contrastive, temporal summarization concepts 
•	Summarization metrics, comparison, and deficiencies 
•	Extractive Summarization algorithm deep-dive.
•	Abstractive summarization approaches (classical, neural, hybrid, contrastive learning)
Block 7: (Open Block): AI models combining natural language and images","Teaching Method: 
The module is organized in topical blocks of two weeks.
In each block, a certain advanced NLP topic is introduced in 3 lectures (slides and presentation in lecture hall (all of which will be recorded and made available for students in the module materials)). The lecture format will stimulate short interactive discussions based on student questions. Each block has a defined set of background reading comprised of research papers and recent conference tutorials and exercises. Each block will also have 1 central exercise session where the lecturer will interactively work on an IPython sheet in class that the students have access to prior to the session and which they are supposed to be able to refer to on their laptops in class. The sheet has mostly prepared code working on data-sets that lecturer and students are able to experiment with and amend in class. The sheet will also have homework assignments for the students (motivation: a significant portion of the exam will test the learning outcomes that are associated with the exercises). 
Advised learning method: 
Students attend the live sessions and read the background reading + do the homework assignments at home. 
Course criteria and registration: 
The course is open to all students of CIT and from other schools and LMU students. Registration mode is “automatische Fixplatzvergabe” (no limits)
Online information: 
The course will have an accompanying Moodle page with 
•	Discussion board
•	Links to session recordings
•	Links to all background reading materials
•	IPython sheets of exercises
•	Exam information","•	3 hours of lecture are presented with Powerpoint slides. (3 x 90 min in two weeks)
•	1 hour exercise: the lecturer presents an IPython sheet with prepared code. Students and Lecturer collaboratively experiment with the code in class. 
•	Students have full access to all media via the Moodle page of the module (see section “Online Information”)","Block 1: 
•	Singh et al: ACL 2022 Tutorial: Zero- and Few-Shot NLP with Pretrained Language Models, https://github.com/allenai/acl2022-zerofewshot-tutorial (URL, Oct 2022)
•	Brown at al: Language Models are Few-Shot Learners. Proc NeurIPS 2020
•	Lakkaraju et al:  NeurIPS Tutorial on Explainable AI 2020, https://www.youtube.com/watch?v=EbpU4p_0hes (URL, Oct 2022)
Block 2:
•	Chauhan, S., Daniel, P. A Comprehensive Survey on Various Fully Automatic Machine Translation Evaluation Metrics. Neural Process Lett (2022)
•	Belouadi, Egger: USCORE: An Effective Approach to Fully Unsupervised Evaluation Metrics for Machine Translation (2022), arXiv:2202.10062v2
•	Haddow et al.: Survey of Low-Resource Machine Translation (2022), arXiv:2109.00486v3
Block 3: 
•	Singh et al: ACL 2022 Tutorial: Zero- and Few-Shot NLP with Pretrained Language Models, https://github.com/allenai/acl2022-zerofewshot-tutorial (URL, Oct 2022)
Block 4: 
•	Zhang et al: Recent advances and challenges in task-oriented dialog systems, 2020, Science China Technological Sciences, 63(10), 2011-2027. 
•	Zhang et al: DIALOGPT : Large-Scale Generative Pre-training for Conversational Response Generation. 2020, Proc ACL 2020
Block 5: 
•	Di Sipio et al: The dawn of quantum natural language processing. In ICASSP 2022-2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP) (pp. 8612-8616). IEEE.
•	Kartsaklis et al: (2021). lambeq: An efficient high-level python library for quantum NLP. arXiv preprint arXiv:2110.04236.
•	Guarasci, et al (2022): Quantum Natural Language Processing: Challenges and Opportunities. Applied Sciences, 12(11), 5651.
Block 6: 
•	Lewis et al: (2019). Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension. arXiv preprint arXiv:1910.13461. 
•	Zhang et al (2020): Pegasus: Pre-training with extracted gap-sentences for abstractive summarization. In International Conference on Machine Learning (pp. 11328-11339). PMLR.
Block 7:
•	Ramesh at al (2022): Hierarchical Text-Conditional Image Generation with CLIP Latents. arXiv:2204.06125",155,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3391371/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2403,Artificial Intelligence in Medicine,5.0,-,from Winter semester 2021/22,Daniel,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,English,-,150.0,60.0,90.0,"The exam takes the form of a written test. The duration is 90 minutes, and no material is allowed (closed book). Questions allow to assess whether the student is able to understand fundamentals, differences and application areas of Artificial Intelligence in Medicine as well as methods for computer-aided diagnosis and decision making. Using practical case studies will assess whether the student is able to select an appropriate artificial intelligence or machine learning approach for a given application. All problems and questions demand the students to phrase their individual responses.",Yes,No,"Introduction to Deep Learning (IN2346)
Computer Aided Medical Procedures I (IN2021)","At the end of the module students should be able to recall the important topics in the area of artificial intelligence in medicine, understand the relations between the topics, apply their knowledge to own deep learning projects, analyse and evaluate social and ethical implications and develop own strategies to apply the learned concepts to their own work.","•	Introduction: Clinical motivation, clinical data, clinical workflows
•	ML for medical imaging
•	Data curation for medical applications
•	Domain shift in medical applications:  Adversarial learning and Transfer learning
•	Self-supervised learning and unsupervised learning
•	Learning from sparse and noisy data
•	ML for unstructured and multi-modal clinical data
•	NLP for clinical data
•	Bayesian approaches to deep learning and uncertainty
•	Interpretability and explainability 
•	Federated learning, privacy-preserving ML and ethics
•	ML for time-to-event modeling, survival models
•	ML for differential diagnosis and stratification
•	Clinical applications in pathology/radiology/omics•	Introduction: Clinical motivation, clinical data, clinical workflows
•	ML for medical imaging
•	Data curation for medical applications
•	Domain shift in medical applications:  Adversarial learning and Transfer learning
•	Self-supervised learning and unsupervised learning
•	Learning from sparse and noisy data
•	ML for unstructured and multi-modal clinical data
•	NLP for clinical data
•	Bayesian approaches to deep learning and uncertainty
•	Interpretability and explainability 
•	Federated learning, privacy-preserving ML and ethics
•	ML for time-to-event modeling, survival models
•	ML for differential diagnosis and stratification
•	Clinical applications in pathology/radiology/omics","Lecture, tutorial, problems for individual study. Guest lectures will be held by experts from local hospitals and med-tech companies to ensure that the covered topics are relevant for clinical practice. Assignments are provided on a weekly basis via the teaching portal and will be aligned to the lectures and tutorials in terms of content. They are discussed in the next tutorial class, and a solution is presented. Work on the assignments and participation in the tutorial class are voluntary. They serve as a means for students to deepen and test their acquired knowledge – as a self-monitoring aid to prepare for the written exam.","Slide show, blackboard","Recommended:
1.	I. Goodfellow, Y. Bengio and A. Courville. Deep Learning. MIT Press, 2016. Available at  http://www.deeplearningbook.org 
2.	E. J. Topol. High-performance medicine: the convergence of human and artificial intelligence. Nat Med 25, 44–56, 2019. https://doi.org/10.1038/s41591-018-0300-7
3.	A. Esteva, K. Chou, S. Yeung, et al. Deep learning-enabled medical computer vision. npj Digit. Med. 4, 5, 2021. https://doi.org/10.1038/s41746-020-00376-2 
4.	B. Norgeot, G. Quer, B.K. Beaulieu-Jones et al. Minimum information about clinical artificial intelligence modeling: the MI-CLAIM checklist. Nat Med 26, 1320–1324 (2020). https://doi.org/10.1038/s41591-020-1041-y
5.	V. Sounderajah, H. Ashrafian, R. Aggarwal et al. Developing specific reporting guidelines for diagnostic accuracy studies assessing AI interventions: The STARD-AI Steering Group. Nat Med 26, 807–808 (2020). https://doi.org/10.1038/s41591-020-0941-1 

Optional
6.	E. Topol. Deep Medicine - How Artificial Intelligence Can Make Healthcare Human Again. 2019.",156,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2930921/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3440,Selected Topics in Machine Learning and Analytics,5.0,-,Always,-,Department of Computer Science,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,157,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498129/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2028,Business Analytics and Machine Learning,5.0,v2,from Summer semester 2021,"Bichler, Martin",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The examination takes the form of a written 90 minutes test, in which students solve problems to prove they understand the functioning of various methods and their assumptions. Participants demonstrate their ability to interpret the results of different statistical processes and to evaluate their model quality in the exercises. The correct responses require the independent construction of analytical solutions with the help of techniques learned in the module.",No,Yes,"MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics, IN0018 Discrete Probability Theory or MA9712 Statistics for Business Administration","After successful completion of the module students are familiarized with common methods of classification, numerical prediction and clustering. They know the assumptions of these processes and understand their functioning, as well as their typical operational applications. Participants are able to analyze data sets with the programming language R and can interpret the results of these analyses.","Regression Analysis, Regression Diagnostics, Generalized Linear Models, Naïve Bayes, Decision Tree Classifiers, Data Preparation, Causal Inference, Model Selection, Ensemble Methods, Clustering, High-Dimensional Problems, Neural Networks, Convex OptimizationRegression Analysis, Regression Diagnostics, Generalized Linear Models, Naïve Bayes, Decision Tree Classifiers, Data Preparation, Causal Inference, Model Selection, Ensemble Methods, Clustering, High-Dimensional Problems, Neural Networks, Convex Optimization","The module consists of a lecture and a content-aligned tutorial. The lecturer presents the content of the module, parts of the corresponding literature and application examples from practice interactively. Students are accustomed with the statistical and machine learning methods and learn to differentiate their usage. In the tutorial participants solve exercises in supervised work and evaluate the respective techniques. In addition, they practice to solve common problems by working with data in teamwork together with their tutor. Students learn to develop their own, data-based solutions. Participants particularly train their technical abilities with programming environments such as R or Python.","Script, exercise sheets, PowerPoint, PC and E-Learning platform","- Trevor Hastie, Jerome Friedman, Robert Tibshirani: Elements of Statistical Learning, Springer.
- Ian Witten, Eibe Frank, Mark Hall, Christopher Pal: Data Mining: Practical Machine Learning Tools and Techniques, Morgan Kauffman.
- James H. Stock and Mark W. Watson: Introduction to Econometrics, Pearson Education.
- Gareth James, Daniela Witten, Trevor Hastie, Robert Tibshirani: An Introduction to Statistical Learning, Springer.",158,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2863073/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230006,Causal Inference in Time Series,5.0,-,from Summer semester 2023,"Etesami, Seyed",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"●	There will be a 90-minute written examination at the end of the semester. The examination will evaluate the critical thinking as well as mathematical understanding of the course material.
●	In addition, there will be bi-weekly assessments in the form of homework/project. They will be individual or in teams (depending on the class strength). 
●	By handing in reasonable solutions to at least 60% of the bi-weekly assessments (both in theory and programming) one can obtain a bonus of 0.3 in the final exam. Note that neither 1.0 nor 4.3 or worse can be improved.",No,Yes,"In order to be successful in this course, it is recommended that you have a basic knowledge of:
●	Statistics & probability (e.g. IN0018, or IN2332, or MA2409 or MA9712)
●	Machine Learning (e.g. IN2064)
●	Detection and estimation (MA5426 or BGU31007 or EI7006)
●	Some programming experience (e.g. IN0002 Praktikum: Programming Basics)","By the end of the course, the student must be able to:
●	Understanding of causal models and causal reasoning in dynamical systems.
●	Identify situations in which a problem can be thought of as a network.
●	Analyze data appropriately using a variety of network analytic techniques.
●	Ability to apply different methods for causal structure learning
●	Propose action based on sound interpretation of network analytics.
Transversal skills:
●	Continue to work through difficulties to find optimal solutions.
●	Demonstrate the capacity for critical thinking (Causal reasoning)
●	Access and evaluate appropriate sources of information.","●	Introduction: What is causal inference?
●	Review of useful preliminaries
○	Random variable, Time series, Spectral analysis
○	Sequential predictors,
●	Causality in Times Series
○	Granger causality
○	Directed information graphs
○	Efficient algorithms
●	Causal structure learning in time series
○	Structures with Latent variables
●	Time-Varying networks
○	change-point detection
●	Concrete Applications
○	Computational neuroscience
○	Financial markets
○	Social networks●	Introduction: What is causal inference?
●	Review of useful preliminaries
○	Random variable, Time series, Spectral analysis
○	Sequential predictors,
●	Causality in Times Series
○	Granger causality
○	Directed information graphs
○	Efficient algorithms
●	Causal structure learning in time series
○	Structures with Latent variables
●	Time-Varying networks
○	change-point detection
●	Concrete Applications
○	Computational neuroscience
○	Financial markets
○	Social networks","The teaching will be in the form of lectures and discussions. In the lecture, the theoretical background of the module is presented and explained. In the exercises, students will deal with practical problems that contribute to understanding and deepen the content of the lecture. Students are encouraged to deal independently with the contents of the lecture through the regular provision of exercise sheets. Solutions for the exercises will be discussed in the exercise event.",Lectures will be mostly taught on board with lectures on slides. Lecture notes will be made available to the students,"We will use material selected from different sources, including chapters of the following books:
●	“Causality: Models, Reasoning, and Inference”, J. Pearl
●	“The Book of Why”, J. Pearl, D. Mackenzie
●	“Introduction to Time Series and Forecasting”, P. J. Brockwell, R. A. Davis",159,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3494723/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2346,Introduction to Deep Learning,6.0,-,Always,Nie,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"- Written test of 90 minutes at the end of the course.
- After each practical session, the students will have to provide the written working code to the teaching assistant for evaluation. The students will be awarded a bonus in case they successfully complete all practical assignments.

The exam takes the form of a written test. Questions allow to assess acquaintance with the basic concepts and algorithms of deep learning concepts, in particular how to train neural networks. Students demonstrate the ability to design, train, and optimize neural network architectures, and how to apply the learning frameworks to real-world problems (e.g., in computer vision). An important aspect for the student is to understand the basic theory behind the training process, which is mainly coupled with optimization strategies involving backprop and SGD. Students can use networks in order to solve classification and regression tasks (partly motivated by visual data).",Yes,No,"Programming knowledge is expected. At least one programming language should be known, preferably Python.

MA0902 Analysis for Informatics
MA0901 Linear Algebra for Informatics","Upon completion of this module, students will have acquired theoretical concepts behind neural networks, and in particular Convolutional Neural Networks, as well as experience on solving practical real-world problems with deep learning. They will be able to solve tasks such as digit recognition or image classification.","- Introduction to the history of Deep Learning and its applications.
- Machine learning basics 1: linear classification, maximum likelihood
- Machine learning basics 2: logistic regression, perceptron 
- Introduction to neural networks and their optimization
- Stochastic Gradient Descent (SGD) and Back-propagation
- Training Neural Networks Part 1:
regularization, activation functions, weight initialization, gradient flow, batch normalization, hyperparameter optimization
- Training Neural Networks Part 2: parameter updates, ensembles, dropout
- Convolutional Neural Networks, ConvLayers, Pooling, etc.
- Applications of CNNs: e.g., object detection (from MNIST to ImageNet), visualizing CNN (DeepDream)
- Overview and introduction to Recurrent networks and LSTMs
- Recent developments in deep learning in the community
- Overview of research and introduction to advanced deep learning lectures.- Introduction to the history of Deep Learning and its applications.
- Machine learning basics 1: linear classification, maximum likelihood
- Machine learning basics 2: logistic regression, perceptron 
- Introduction to neural networks and their optimization
- Stochastic Gradient Descent (SGD) and Back-propagation
- Training Neural Networks Part 1:
regularization, activation functions, weight initialization, gradient flow, batch normalization, hyperparameter optimization
- Training Neural Networks Part 2: parameter updates, ensembles, dropout
- Convolutional Neural Networks, ConvLayers, Pooling, etc.
- Applications of CNNs: e.g., object detection (from MNIST to ImageNet), visualizing CNN (DeepDream)
- Overview and introduction to Recurrent networks and LSTMs
- Recent developments in deep learning in the community
- Overview of research and introduction to advanced deep learning lectures.","The lectures will provide extensive theoretical aspects of neural networks and in particular deep learning architectures; e.g., used in the field of Computer Vision. 
The practical sessions will be key, students shall get familiar with Deep Learning through hours of training and testing. They will get familiar with frameworks like PyTorch, so that by the end of the course they are capable of solving practical real-world problems with Deep Learning.","Projector, blackboard, PC","- Slides given during the course
- www.deeplearningbook.org",160,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1334293/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2395,Legal Data Science and Informatics,6.0,-,from Summer semester 2021,"Grabmair, Matthias",Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"This module focuses on the interdisciplinary application of modern data science / artificial intelligence methods to a predominantly unstructured domain, and hence requires frequent and diverse interaction with the subject matter. The course is open for TUM students from informatics, mathematics, and political science backgrounds.

Grading will be based on a written literature survey (with a page limit of 3 pages) and discussion paper on a given topic (40% of the final grade) and a written examination (lasting 100 minutes; 60% of the final grade), both of which will take place at the end of the semester.

Students are encouraged to submit questions about weekly reading assignments (i.e. topical publications) ahead of the session, which will be picked up during in-class discussions. Submitting a minimum number of quality reading questions will lead to a grade bonus of 0.3 at the end of the semester.",No,No,"- IN0002: Fundamentals of Programming
- IN8026: Einführung in die Programmierung mit Python / Introduction to Programming with Python (or equivalent; students must be able to autonomously work with Jupyter notebooks in the Python ecosystem)
- IN0018: Diskrete Wahrscheinlichkeitstheorie / Discrete Probability Theory (or equivalent; students must be able to work with basic concepts from probability and statistics)
- Willingness/ability to work intensively across disciplines (reading legal text, drafting specifications, programming, and domain-specific data analysis)
- IN2332: Statistical Modeling and Machine Learning
- IN2062: Grundlagen der künstlichen Intelligenz / Foundations of Artificial Intelligence","After completing this module, students will be able to:
- explain knowledge representation and argumentation formalisms used in AI&Law
- explain the application of techniques from statistics, applied machine learning, and natural language processing to legal data
- examine and critique experimental work and systems in legal data science/informatics
- explain the planning, implementation, and evaluation of legal data science/informatics research work","The way lawyers, Judges, corporate legal counsel, government agencies, and businesses engage with legal systems, requirements, and processes is increasingly influenced by technology. Prominent areas of practical interest are the intelligent search and analysis of legal documents, the role of machine learning in supporting legal decision making, and modeling legal processes using expertise encoded in formal rule systems. This module provides an in-depth overview of landmark research and the state of the art in applying data science and artificial intelligence methods to tasks and problems arising in and around the public and private practice of law. 

Legal decision making, legal data, and legal documents in particular challenge many mainstream modeling and analysis techniques. Hence, the module is intended to be taken by (1) broadly interested students from technical majors interested in challenging interdisciplinary work, and (2) political science / business / law students seeking to enhance their understanding of how new technologies can shape their field.

The module consists of a mix of lectures, discussion sessions, and small practical workshops following a thematic progression:
- Introduction to legal systems, legal reasoning, and the impact of AI on legal practice
- Basics of machine learning and natural language processing (NLP) (intended as a primer/refresher for nontechnical students; largely tailored to specific legal applications contexts)
- Case- and rule-based formalisms of legal reasoning
- Legal data analytics, including case outcome prediction and empirical legal studies
- Equal treatment imperatives and fair machine learning
- Applications of NLP on legal textThe way lawyers, Judges, corporate legal counsel, government agencies, and businesses engage with legal systems, requirements, and processes is increasingly influenced by technology. Prominent areas of practical interest are the intelligent search and analysis of legal documents, the role of machine learning in supporting legal decision making, and modeling legal processes using expertise encoded in formal rule systems. This module provides an in-depth overview of landmark research and the state of the art in applying data science and artificial intelligence methods to tasks and problems arising in and around the public and private practice of law. 

Legal decision making, legal data, and legal documents in particular challenge many mainstream modeling and analysis techniques. Hence, the module is intended to be taken by (1) broadly interested students from technical majors interested in challenging interdisciplinary work, and (2) political science / business / law students seeking to enhance their understanding of how new technologies can shape their field.

The module consists of a mix of lectures, discussion sessions, and small practical workshops following a thematic progression:
- Introduction to legal systems, legal reasoning, and the impact of AI on legal practice
- Basics of machine learning and natural language processing (NLP) (intended as a primer/refresher for nontechnical students; largely tailored to specific legal applications contexts)
- Case- and rule-based formalisms of legal reasoning
- Legal data analytics, including case outcome prediction and empirical legal studies
- Equal treatment imperatives and fair machine learning
- Applications of NLP on legal text","Module sessions will cover concepts in an example-driven way through a mix of lectures, guided programming workshops, and discussion of topical research publications that students are expected to read before class.","Slides-based lectures supported by white-/blackboard, possibly some demonstration of programming/plotting using Jupyter notebooks.","Reading will consist of landmark and current papers and online publications, predominantly from the fields of AI&Law, LegalTech, Empirical Legal Studies, and related subjects. The list will be made available to students at the start of the module and may be revised over the course of the semester.",161,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2805476/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2357,Machine Learning for Computer Vision,5.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,winter/summer semester,English,-,150.0,60.0,90.0,"The assessment is done in form of a 90 minute write exam. In this written exam, the students should prove that they understand the basic concepts of various different Machine Learning methods, and that they are able to apply them to specific problems in computer vision. The comprehension of the different methods mainly comprises the ability to describe and to derive them mathematically, but also the ability to discuss their benefits and drawbacks. Furthermore, application oriented problems are given to assess the students’ ability to apply adequate machine learning methods to specific tasks in computer vision, and also to group them accordingly (e.g . wrt. classification, regression, MLE, MAP, etc.).",Yes,No,"Basic knowledge in linear algebra, calculus, and probability theory.
Statistical modeling and machine learning (IN2332)","After successful participation in this module, the students dominate the basics of the most relevant machine learning methods for the field of Computer Vision. They are then able to give the underlying mathematical formulation of methods like boosting, bagging, HMMs, Gaussian processes, or MCMC, and they can associate these methods with an adequate application context in the field of computer vision. Furthermore, the are able to develop simple implementations of these methods and to apply them to concrete data sets.","Machine Learning methods are an essential component for the solution of important problems in computer vision, including object classification and pose estimation, object tracking, image segmentation, denoising of images, or camera calibration. Therefore, in this lecture the most relevant methods of Machine Learning are presented and derived mathematically. These mainly comprise:
- kernel methods, specifically Gaussian processes
- metric learning
- clustering such as GMMs or spectral clustering
- boosting and bagging
- hidden Markov models
- neural networks and deep learning*
- sampling methods, specifically MCMC

The focus here is laid on a broad understanding of these methods rather than in a deep specification of single approaches. Practical experience is acquired by means of programming tasks.

*The topic “deep learning” will be handled only marginally. For a broader treatment of this topic, we refer to other classes, e.g. IN2346.Machine Learning methods are an essential component for the solution of important problems in computer vision, including object classification and pose estimation, object tracking, image segmentation, denoising of images, or camera calibration. Therefore, in this lecture the most relevant methods of Machine Learning are presented and derived mathematically. These mainly comprise:
- kernel methods, specifically Gaussian processes
- metric learning
- clustering such as GMMs or spectral clustering
- boosting and bagging
- hidden Markov models
- neural networks and deep learning*
- sampling methods, specifically MCMC

The focus here is laid on a broad understanding of these methods rather than in a deep specification of single approaches. Practical experience is acquired by means of programming tasks.

*The topic “deep learning” will be handled only marginally. For a broader treatment of this topic, we refer to other classes, e.g. IN2346.","In the lecture, there will be slides presented, and important mathematical formulations will be derived on the board. In the accompanying tutorials, practical and theoretical problems will be handled. These problems will be provided for home work sufficiently in advance to the dates of the tutoriels.","Slide show, blackboard","Christopher Bishop: Pattern Recognition and Machine Learning
Kevin Murphy: Machine Learning: A Probabilistic Perspective
Carl Edward Rasmussen and Christopher Williams: Gaussian
Processes for Machine Learning",162,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1446338/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2323,Machine Learning for Graphs and Sequential Data,5.0,-,from Winter semester 2019/20,Stephan,Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The academic assessment will be done by a written 75 minutes exam. Assignments
checking knowledge to verify the familiarity with machine learning models for graphs
and sequential data; programming assignments verify the ability to implement and
critically evaluate advanced algorithms and methods; small scenarios with defined
applications have to be set up by applying the learnt methods to verify the ability
to develop precise partial solutions.",No,Yes,"Core modules from the Bachelor’s Informatics, semester 1-4 & knowledge of machine
learning principles (e.g. lecture IN2064)","Upon successful completion of this module, students will be able to describe data
mining and machine learning methods and their applicability for complex data types.
The students will get to know concepts for handling non-independent data in machine
learning models. Furthermore, the students will be able to understand, apply, and
evaluate principles for analyzing complex data such as graphs, network data, and
temporal data.","1. Introduction
* Machine Learning, Data Mining Process
* Basic Terminology

2. Sequential Data
* ML models for text data and temporal data
* Autoregressive Models
* Markov Chains, HMMs
* Embeddings (e.g. Word2Vec)
* Neural Networks (e.g. RNN, LSTM, ConvNets, Transformer)
* Temporal Point Processes

3. Graphs & Networks
* Laws, Patterns
* (Deep) Generative Models for Graphs
* Spectral Methods
* Ranking (e.g., PageRank, HITS)
* Community Detection
* Node/Graph Classification
* Label Propagation
* Graph Neural Networks
* (Unsupervised) Node Embeddings

4. Robustness
* Adversarial Examples
* Improving Robustness
* Certifiable Robustness1. Introduction
* Machine Learning, Data Mining Process
* Basic Terminology

2. Sequential Data
* ML models for text data and temporal data
* Autoregressive Models
* Markov Chains, HMMs
* Embeddings (e.g. Word2Vec)
* Neural Networks (e.g. RNN, LSTM, ConvNets, Transformer)
* Temporal Point Processes

3. Graphs & Networks
* Laws, Patterns
* (Deep) Generative Models for Graphs
* Spectral Methods
* Ranking (e.g., PageRank, HITS)
* Community Detection
* Node/Graph Classification
* Label Propagation
* Graph Neural Networks
* (Unsupervised) Node Embeddings

4. Robustness
* Adversarial Examples
* Improving Robustness
* Certifiable Robustness","Lecture, problems for individual study, assignments including project work","Slides, exercise sheets, white board, project work","- Mining of Massive Datasets. Jure Leskovec, Anand Rajaraman, Jeffrey David Ullman. Cambridge University Press. 2014
- Data Mining: The Textbook. Charu Aggarwal. Springer. 2015
- The Elements of Statistical Learning: Data Mining, Inference, and Prediction. Trevor Hastie, Robert Tibshirani, Jerome Friedman. Springer. 2011",163,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1799629/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT423003,Multimodal Deep Learning,5.0,-,from Summer semester 2025,Daniel,Department of Computer Science,-,Master,-,"This advanced deep learning course introduces multimodal deep learning, exploring deep learning for different data types – such as images, text, graphs, and time-series. Through the lens of representation learning, it provides a framework for intuitively understanding the interplay between input data structure, model architecture, and learning signal. It covers advanced techniques, such as geometric deep learning, self-supervised learning, multimodal model integration, and how to deploy these methods for real-world applications.",one semester,summer semester,English,-,150.0,60.0,90.0,"90-minute written examination at the end of the semester.
This format evaluates students’ understanding of the taught syllabus, and ability to apply it to solve practical problems. The exam ensures a comprehensive assessment of both theoretical understanding and practical problem-solving skills. No additional aids are permitted during the exam.",No,Yes,"Machine Learning (IN2064), Introduction to Deep Learning (IN2346), or similar courses","Upon successfully completing this module, students will be able to:
- Understand the structure of various data modalities and know the advantages and disadvantages of using different types of feature representations.
- Select optimal neural network architectures that leverage the inherent structure of different data types.
- Transfer their theoretical understanding to develop multimodal models for real-world applications.
- Critically assess current research works and emerging trends in multimodal representation learning.","1. Types of input modalities, their structure, and representations
Motivating questions:
How are different types of inputs structured?
Which feature representations can be used for different input types?
How can we transform between different representations?

Topics:
- Representations, transformations, manifold hypothesis
- Data structure, groups, and symmetries (e.g. sets, grids, graphs, manifolds)
- Feature representations: encodings, embeddings, feature spaces, and distances
- Implicit neural representations and implicit kernel functions

2. Architectures for different modalities
Motivating questions:
Which model architectures are optimal for each type of input data and why?
How can those architectures utilize the structure of input data?
In which way are different architectures related?

Topics:
- Underlying principles of learning representation
- From multi-layer perceptrons to convolutional neural networks
- Increasing inductive bias with geometric deep learning: equivariant convolutions, graph neural networks
- Architectures for sequence-based modalities: recursive neural networks and structured state space sequence models
- From sequences to sets: transformers and set encoders

3. Training signals for representation learning
Motivating questions:
How to get the most out of input data and architectures?
Which loss functions or training strategies are used in different settings and
how are they related?

Topics:
- Supervised loss functions and their properties
- Alignment-based self-supervised learning, contrastive learning and clustering
- Reconstruction-based self-supervised learning: masked autoencoders, BERT, GPT
- Zero- and few-shot inference
- Parameter-efficient finetuning

4. Bringing it all together: multimodal models
Motivating questions:
How can the previously introduced methods be used to build multimodal models?
What are the best way to combine pre-trained unimodal models?

Topics:
- Types of multimodal models
- Combining pre-trained models: Integrating other modalities into large language models
- Difficulties of multimodal models
- Case studies of prominent multimodal models from different application fields
- Open questions and future direction of research1. Types of input modalities, their structure, and representations
Motivating questions:
How are different types of inputs structured?
Which feature representations can be used for different input types?
How can we transform between different representations?

Topics:
- Representations, transformations, manifold hypothesis
- Data structure, groups, and symmetries (e.g. sets, grids, graphs, manifolds)
- Feature representations: encodings, embeddings, feature spaces, and distances
- Implicit neural representations and implicit kernel functions

2. Architectures for different modalities
Motivating questions:
Which model architectures are optimal for each type of input data and why?
How can those architectures utilize the structure of input data?
In which way are different architectures related?

Topics:
- Underlying principles of learning representation
- From multi-layer perceptrons to convolutional neural networks
- Increasing inductive bias with geometric deep learning: equivariant convolutions, graph neural networks
- Architectures for sequence-based modalities: recursive neural networks and structured state space sequence models
- From sequences to sets: transformers and set encoders

3. Training signals for representation learning
Motivating questions:
How to get the most out of input data and architectures?
Which loss functions or training strategies are used in different settings and
how are they related?

Topics:
- Supervised loss functions and their properties
- Alignment-based self-supervised learning, contrastive learning and clustering
- Reconstruction-based self-supervised learning: masked autoencoders, BERT, GPT
- Zero- and few-shot inference
- Parameter-efficient finetuning

4. Bringing it all together: multimodal models
Motivating questions:
How can the previously introduced methods be used to build multimodal models?
What are the best way to combine pre-trained unimodal models?

Topics:
- Types of multimodal models
- Combining pre-trained models: Integrating other modalities into large language models
- Difficulties of multimodal models
- Case studies of prominent multimodal models from different application fields
- Open questions and future direction of research","Lectures with integrated exercises/discussions.

This module employs an integrated approach combining lectures, exercises, discussions, and preparatory homework assignments to support active learning and engagement. The module consists of two weekly 90-minute classes, which consist of the following components:

1. Lecture (2 x 45 minutes per week):
Each class begins with a 45-minute-long lecture, which teaches the principles, theoretical foundations, motivations, and practical applications of each topic. Real-world examples and case studies are included to provide motivation for and enhance understanding of each topic.

2. Homework Assignments (1 per week):
Students are provided with voluntary weekly assignments designed to reinforce and deepen their understanding. Assignments may include:
- Mathematical or theoretical problem-solving exercises
- Coding exercises
- Reading and summarizing a research paper or parts of it.

3. Exercises (1 x 45 minutes per week):
The second part in the first weekly class is used to conduct exercises. These sessions focus on reviewing and discussing solutions to the previous week’s homework assignments. The exercises and assignments allow students to self-assess their knowledge and prepare for the written exam.

4. Q&A Sessions (1 x 45 minutes per week):
The second class of the week includes a dedicated Q&A session, where students can:
- Clarify misunderstanding about previous lectures or exercises
- Ask further questions to deepen their understanding of the syllabus
- Engaging in discussions, such as critically analyzing assigned papers
- Explore connections between different topics

Questions will be collected in advance via Moodle to ensure a structured and effective discussion.","- Slides, exercise sheets and Jupyter notebooks, all will be made available via Moodle
- Moodle for collecting questions and facilitating discussion amongst students and lecturers","● Fleuret, François. The little book of deep learning. A lovely concise introduction (2023)
- https://fleuret.org/public/lbdl.pdf
- https://fleuret.org/dlc/

● Bronstein, Michael M., et al. Geometric deep learning: Grids, groups, graphs, geodesics, and gauges (2021)
- https://arxiv.org/abs/2104.13478

● Peyré, Gabriel. Mathematical foundations of data sciences (2022)
- https://mathematical-tours.github.io/book/

● Prince, Simon JD. Understanding deep learning (2023)
- https://udlbook.github.io/udlbook/

● Bishop, Christopher M., and Hugh Bishop. Deep learning: Foundations and concepts (2023)
- https://www.bishopbook.com/

● Bommasani, Rishi, et al. On the Opportunities and Risks of Foundation Models (2021)
- https://arxiv.org/abs/2108.07258",164,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4388388/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2361,Natural Language Processing,6.0,-,Always,"Groh, Georg",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"Type of Assessment: exam
The exam takes the form of a written test of 120 minutes. Exam questions assess whether the student has understood and can essentially reproduce the basic concepts, algorithms, models, and methodology of modern Natural Language Processing (NLP). 
During the semester, students are provided with a number of questions and small problems for every topic that allow them to assess their learning progress and to prepare for the exam. The exam contains a number of questions from this question pool in order to give an incentive to deal with the topics and the questions as well as a number of new questions.",No,Yes,"IN2064 Machine Learning
IN2346 Introduction to Deep Learning","Upon successful completion of the module, participants understand and can reproduce / remember essential concepts, algorithms, models, and methodology of modern Natural Language Processing (NLP). Participants are able to read and understand modern scientific publications in the field and to analyze, and evaluate the NLP concepts, algorithms, models, and methodology presented in those publications and presented in the course for a possible application to NLP problems in the participant’s own professional projects or their own scientific work in a Master’s thesis, Guided Research project, or PhD thesis developing new NLP algorithms, models and applications.
The module prepares the participants for the corresponding Master Lab course in NLP, which enables them to practically apply the concepts, algorithms, models, and methodology of this module by designing and implementing suitable Neural Network Architectures for key NLP Problems such as Semantic Role Labelling or Sentiment Analysis.","•	Text Normalization, Tokenization, N-Grams
•	Part-of-Speech-Tagging
•	Formal grammars for English and related approaches 
•	Syntactic, Statistical and Dependency Parsing
•	Word Embeddings (Word2Vec, GloVe etc.)
•	Word Sense Disambiguation
•	Sentiment Analysis
•	Information Extraction
•	Semantic Role Labelling
•	Co-Reference Resolution
•	Named Entity Recognition and Classification
•	Machine Translation
•	Modern Neural Network approaches•	Text Normalization, Tokenization, N-Grams
•	Part-of-Speech-Tagging
•	Formal grammars for English and related approaches 
•	Syntactic, Statistical and Dependency Parsing
•	Word Embeddings (Word2Vec, GloVe etc.)
•	Word Sense Disambiguation
•	Sentiment Analysis
•	Information Extraction
•	Semantic Role Labelling
•	Co-Reference Resolution
•	Named Entity Recognition and Classification
•	Machine Translation
•	Modern Neural Network approaches","Teaching format: 2 x 2 hours lecture / week. 
Learning method: students visit the lecture, post-process the lecture’s content via reviewing the slides, and / or the lecture recording, and reading the background literature  
In view of the learning goals of the module and the expected number of participants, visiting the lecture and working with the lecture materials and background reading materials for self-study are appropriate learning methods because the main focus of the module is understanding the concepts, algorithms, models, and methodology of modern NLP regarding the ability to read and understand modern publications in the field and being able to analyzing and evaluating their content for own scientific work and in terms of related problems in professional work.","Slides, blackboard, lecture recording, discussion boards in suitable e-learning platforms, textbook and supplementary original publications","D. Jurafsky, J. Martin: Speech and Language Processing, 2018
Original Publications of modern approaches and NN models",165,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1493755/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230004,Statistical Foundations of Learning,8.0,-,from Summer semester 2023,"Ghoshdastidar, Debarghya",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"There is a final examination, which is either 120-min written exam or 25-min oral exam, depending on the number of exam registrations (to be announced during lecture period). 
The exam includes the following:
- Direct questions that evaluate the students’ abilities to recall key concepts/techniques from the lectures (ILO 1,2)
- Questions that ask the students to derive theory in slightly modified settings. These evaluate students’ abilities to apply the results discussed in lectures/tutorials and prove modified results (ILO 3) 
- Questions that ask the students to interpret the consequences of a modified result (ILO 4)

In addition, there are bi-weekly graded assignments that can be submitted individually or in pairs. The assignments are optional, but a 70% or higher score in the assignments would lead to a 0,3-bonus grade (if final exam grade is between 1,3 and 4,0)",No,Yes,"Machine learning (IN2064 or equivalent); Discrete probability theory (IN0018); Analysis for informatics (MA0902)
Some background in statistics (MA2402 or equivalent) could be helpful.","At the end of the module, the students are able to: 
ILO-1.	mathematically analyze algorithms for data classification and clustering
ILO-2.	remember techniques from statistics (limit theorems, concentration inequalities), which can be used in data analysis
ILO-3.	apply statistical tools to improve performance of algorithms
ILO-4.	judge the limitations of machine learning problem formulations, and statistical theories","This course introduces the students to a statistical perspective of machine learning, and provides mathematical tools to analyze the performance of machine learning algorithms. 
The first part of the course introduces concepts on statistical learning theory and other foundational results for machine learning. In particular, the following topics is covered:
- Risk minimization, Bayes risk, Empirical risk (8 AE, 1 AE = 45 mins)
- Statistical consistency and universal consistency (4 AE)
- Vapnik-Chervonenkis (VC) theory of generalization (8 AE)
- PAC learning and No free lunch theorem (6 AE)
- Algorithmic stability (4 AE)
- Universal approximation theorem (2 AE)
- Boosting (4 AE)
- Above techniques will be used to study generalization of Nearest Neighbor rule, Support Vector Machine and Neural Networks (6 AE)

The second part of the course introduces some advanced and recent topics on the theory of learning:
- Approximation bounds for clustering (6 AE)
- Theory of over-parametrized models (4 AE)
- Training dynamics of neural networks, including neural tangent kernel (6 AE)

A concluding lecture (2 AE) will present some current challenges and recent works in the statistical foundations of learning.This course introduces the students to a statistical perspective of machine learning, and provides mathematical tools to analyze the performance of machine learning algorithms. 
The first part of the course introduces concepts on statistical learning theory and other foundational results for machine learning. In particular, the following topics is covered:
- Risk minimization, Bayes risk, Empirical risk (8 AE, 1 AE = 45 mins)
- Statistical consistency and universal consistency (4 AE)
- Vapnik-Chervonenkis (VC) theory of generalization (8 AE)
- PAC learning and No free lunch theorem (6 AE)
- Algorithmic stability (4 AE)
- Universal approximation theorem (2 AE)
- Boosting (4 AE)
- Above techniques will be used to study generalization of Nearest Neighbor rule, Support Vector Machine and Neural Networks (6 AE)

The second part of the course introduces some advanced and recent topics on the theory of learning:
- Approximation bounds for clustering (6 AE)
- Theory of over-parametrized models (4 AE)
- Training dynamics of neural networks, including neural tangent kernel (6 AE)

A concluding lecture (2 AE) will present some current challenges and recent works in the statistical foundations of learning.","The lecture is taught using slides and occasional board work, where:
- Key theoretical frameworks and results are presented, along with significance (ILO 1)
- Concepts and tools from statistics are introduced (ILO 2) and used to prove the theoretical results (ILO 3)
- Results are presented that show the limitations of learning problems (ILO 4)

There are weekly tutorials and bi-weekly assignments in which:
- Sample problems are provided and discussed in tutorials, which provide examples of how the theory can be used or new theoretical results can be derived (ILO 1,2,3)
- In graded assignments, students need to individually/in pairs solve questions related to using/extending the theory for new settings (ILO 1,3) and judge the limitations (ILO 4)","The lectures are taught using slides, with occasional board work. The exercise sessions are taught using board work. The lectures (and exercise sessions, when possible) are live-streamed via TUM Live. 
In addition, Moodle will be actively used for asynchronous discussions, collaboratively solving sample problems, learning materials etc.","The first part of the course will mainly follow parts of the textbooks:
- Shai Shalev-Shwartz, and Shai Ben-David. Understanding machine learning: From theory to algorithms. Cambridge University Press, 2014.
- Luc Devroye, László Györfi, and Gábor Lugosi. A probabilistic theory of pattern recognition. Springer Science & Business Media, 2013.

The second part will be based on recent papers, such as:
- David Arthur, and Sergei Vassilvitskii. ""k-means++ the advantages of careful seeding."" Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms. 2007.
- Vincent Cohen-Addad, Varun Kanade, Frederik Mallmann-Trenn, and Claire Mathieu. ""Hierarchical clustering: Objective functions and algorithms."" Journal of the ACM (JACM) 66 (4):1-42, 2019.
- Peter L. Bartlett, Andrea Montanari, and Alexander Rakhlin. ""Deep learning: a statistical viewpoint."" Acta numerica 30:87-201, 2021.
- Trevor Hastie, Andrea Montanari, Saharon Rosset, and Ryan J. Tibshirani. ""Surprises in high-dimensional ridgeless least squares interpolation."" The Annals of Statistics 50(2):949-986, 2022.
-  Sanjeev Arora, Simon S. Du, Wei Hu, Zhiyuan Li, Russ R. Salakhutdinov, and Ruosong Wang. ""On exact computation with an infinitely wide neural net."" Advances in Neural Information Processing Systems 32, 2019.

Additional references, if needed, will be provided during the lectures.",166,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3474598/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2076,Advanced Computer Architecture,6.0,-,Always,"Gerndt, Hans",Department of Computer Engineering,ab WS 11/12 6 statt 4 Credits,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,The exam takes the form of written 90 minutes examwithout aids. Questions allow to assess acquaintance with the concepts of Computer Architecture. Questions describing scenarios for the interaction of programs with certain architectures will assess the student's ability to evaluate architectural components and to apply the obtained knowledge.,No,Yes,IN0004 Introduction to Computer Organization and Technology - Computer Architecture,At the end of the module students know and understand the architecture of current processors as well as of entire IT systems. They can evaluate and assess different designs. The students understand the interaction of architecture and compiler technology. They understand the different classes of parallel architectures and can evaluate their advantages and disadvantages for certain applications.,"After an introduction to the goals and the learning outcomes of the module, cross cutting aspects for all advanced architectures are presented. This section covers performance, availability, reliability, fault tolerance, parallelism, memory hierarchy and virtualization. After a recap of the computer architecture basics, the module covers the major types of parallelism and the respective architectures. For instruction level parallelism advanced concepts of the instruction pipeline are discussed as well as superscalar and VLIW processors. This part also covers advanced techniques for the memory hierarchy and compiler support for instruction level parallelism. The next architecture class, data parallel systems, covers vector units in standard processors, array computers, GPGPUs and vector supercomputers. The section presents also the programming interfaces and discusses their interaction with the architectures. Shared memory systems supporting thread level parallelism are discussed next. First the general concepts coherence, memory consistency and synchronization are covered. Then their implementation in uniform and non-uniform memory architectures is presented, ranging from standard multicore systems to large-scale shared memory systems. The last presented architecture class covers distributed memory systems supporting process-level parallelism. This section presents high performance communication networks and design alternatives for network interfaces, manycore processors and massively parallel systems. Parallel file systems are discussed as they are important for all these systems. The module closes with optional presentations about energy efficiency, parallel applications, parallel programming, performance evaluation and non-conventional architectures.After an introduction to the goals and the learning outcomes of the module, cross cutting aspects for all advanced architectures are presented. This section covers performance, availability, reliability, fault tolerance, parallelism, memory hierarchy and virtualization. After a recap of the computer architecture basics, the module covers the major types of parallelism and the respective architectures. For instruction level parallelism advanced concepts of the instruction pipeline are discussed as well as superscalar and VLIW processors. This part also covers advanced techniques for the memory hierarchy and compiler support for instruction level parallelism. The next architecture class, data parallel systems, covers vector units in standard processors, array computers, GPGPUs and vector supercomputers. The section presents also the programming interfaces and discusses their interaction with the architectures. Shared memory systems supporting thread level parallelism are discussed next. First the general concepts coherence, memory consistency and synchronization are covered. Then their implementation in uniform and non-uniform memory architectures is presented, ranging from standard multicore systems to large-scale shared memory systems. The last presented architecture class covers distributed memory systems supporting process-level parallelism. This section presents high performance communication networks and design alternatives for network interfaces, manycore processors and massively parallel systems. Parallel file systems are discussed as they are important for all these systems. The module closes with optional presentations about energy efficiency, parallel applications, parallel programming, performance evaluation and non-conventional architectures.","The module consists of a four hour lecture. The students need 90 hours to learn the presented concepts, and to understand and extend the presented examples. They need to come up with own examples to deepen their knowledge and should compare the learned concepts with presentations in the recommended text books.","Slides, mindmaps, script","-  Hennessy, Patterson: Computer Architecture - A quantitative Approach. 
-  Andrew Tanenbaum: Structured Computer Organization 
-  David E. Culler et.al.: Parallel Computer Architecture: A Hardware / Software Approach 
-  Antonio Gonzales et.al.: Processor Microarchitecture: An Implementation Perspective",168,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456672/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2097,Advanced Computer Networking,5.0,-,Always,"Carle, Georg",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The examination will take the form of a 75-minute examination.
Comprehension questions as well as arithmetic tasks check the familiarity with the technologies and methods of computer networks, communication protocols, network architecture, quality of service mechanisms and the understanding gained through the implementation of protocol mechanisms. Computing tasks also check the ability to determine the performance of selected network technologies.",No,Yes,"IN0010 Introduction to Computer Networking and Distributed Systems, Knowledge in computer networks and the ability to program in C or Java are expected.","Participants understand the structure of the Internet, the functioning of the individual protocols, and know more advanced principles of computer networks.
They understand the architecture of network components in which the individual protocols are implemented, and are themselves able to implement protocols and to dimension networks. They master network fundamentals and are thus able to understand and evaluate future developments.","Internet Protocols. Protocol mechanism and design techniques, that are typically used in network protocols (especially in the Internet). This includes a discussion of the reasons for using them. Implementation principles. Network architecture: principles that lead to the design of network architectures. Network algorithms. Simulation of networks.Internet Protocols. Protocol mechanism and design techniques, that are typically used in network protocols (especially in the Internet). This includes a discussion of the reasons for using them. Implementation principles. Network architecture: principles that lead to the design of network architectures. Network algorithms. Simulation of networks.","Lecture for content transfer with accompanying weekly tutorial exercises, in which tasks are treated, as well as programming tasks for computer-aided deepening.","Slides, Whiteboard, Exercises","References to scientific articles and other secondary sources can be found in the slides.
For the basics and for a better understanding of these materials u.a. the following standard works are useful:
1. James F. Kurose, Keith W. Ross
Computernetzwerke
Pearson Studium; 5. aktualisierte Auflage, 2012
2. Andrew S. Tanenbaum / Prof. David J. Wetherall
Computernetzwerke
Pearson Studium, 5. aktualisierte Auflage, 2012",169,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/460544/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3450,"Selected Topics in Computer Architecture, Computer Networks and Distributed Systems",5.0,-,Always,"Schulz, Martin",Department of Computer Engineering,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,171,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498135/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2324,Connected Mobility Basics,8.0,-,Always,Ott,Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"Type of Assessment: written exam

The exam takes the form of written 120 minutes test and no additional materials are allowed in the exam. The exam assesses the acquaintance with and understanding of concepts and techniques related to connected mobile services and systems.  Using small problems, the exam allows to assess the ability to link and to apply this knowledge regarding the desired learning outcomes. During the semester, students will perform small theoretical and practical exercises that allow them to assess their learning progress and to prepare for the exam.",No,Yes,Recommended requirements are basics in computer networks and distributed systems (IN0010 or equivalent knowledge) as well as command of the Java programming language.,"After successful completion of this module, students will remember the basic elements that constitute connected mobile systems and understand the (technical) issues relevant to mobile system and service design and their evaluation.  They recognize challenges arising from mobility and mobile networking. They understand the requirements for and the limitations of simulation-based evaluation of mobile services.  They have an overview of the different components and techniques at their disposal to realize mobile services.  They understand the principles of these underlying methods, know their advantages and disadvantages and can apply methods of design, modeling, and evaluation to simple example cases.","The module IN2324 offers a broad introduction, including the following topics:
- Introduction to mobile systems
- Mobile systems by example
- Mobility: models and simulations
- Wireless networking technologies
- Architectures and protocols for mobile networks
- Architectures for mobile services and systems
- Mobile measurements 
- Security and privacyThe module IN2324 offers a broad introduction, including the following topics:
- Introduction to mobile systems
- Mobile systems by example
- Mobility: models and simulations
- Wireless networking technologies
- Architectures and protocols for mobile networks
- Architectures for mobile services and systems
- Mobile measurements 
- Security and privacy","The lecture is conducted as Blended Learning. We combine a four-hour presence lecture with two-hour presence exercises, which are augmented by homework.","Powerpoint slides, (online) exercises","There are no comprehensive textbooks available on the topic of the course, and we will not base the course on a collection of textbooks but rather use primary literature. The course material contains pointers to literature. These include (incomplete):
- On mobility models: Joanne Treurniet: A Taxonomy and Survey of Microscopic Mobility Models from the Mobile Networking Domain. ACM Computing Surveys, Vol. 47, No. 1, Article 14, Publication date: June 2014.
- On mobility support: Wesley M. Eddy: At What Layer Does Mobility Belong? IEEE Communications Magazine, October 2004.
- On ethics in networking and measurements: Bendert Zevenbergen, Brent Mittelstadt, Carissa Véliz, Christian Detweiler, Corinne Cath, Julian Savulescu, Meredith Whittaker: Philosophy Meets Internet Engineering: Ethics in Networked Systems Research. (GTC Workshop Outcomes Paper). Available online at https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2666934",172,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1150616/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330013,Design Automation and Simulation for Microfluidic Devices,5.0,-,from Summer semester 2023,"Wille, Robert",Department of Computer Engineering,-,Master,MF Design,-,one semester,summer semester,English,-,150.0,45.0,105.0,"The examination is performed in form of either an oral (30 mins) or a written exam (90 mins). The exam will cover tasks conducted before in the hands-on sessions/exercises (which in turn, cover the main content of the lecture in a practical fashion). The tasks/projects allow to evaluate how well the students understood the respective concepts and how well they can use the corresponding methods to design and/or simulate a microfluidic biochip.",Yes,No,"Basic knowledge in programming (e.g., in Python, C++, etc.)
Basic knowledge in the use of design tools such as compilers, debuggers, etc.","At the end of the module, students will have detailed expertise of microfluidics and can design and simulate corresponding devices. More precisely, they will
* be able to evaluate the potential of microfluidics and the applications it can be used for, 
* be able to analyze the different platforms that are available to realize certain applications, 
* be able to apply design steps, design methods, and design tools to realize a microfluidic device,
* be able to apply simulation methods and simulation tools to evaluate the resulting device, as well as
* understand the remaining steps that would be needed to eventually fabricate that device.","The domain of microfluidics is a multi-disciplinary field which deals with the precise control and manipulation of fluids at the micro-scale. Corresponding devices, often also known as ""Lab-on-a-Chip"" (LoC), are used to realize experiments or operations in domains such as medicine, (bio-)chemistry, biology, pharmacology, etc. The main idea is to realize assays, which are originally conducted in bulky and expensive laboratories, on a minimized, integrated, and automated single device. Prominent (although simple) examples include the pregnancy test or the Covid-19 test; but much more elaborated devices exist.

However, the design and layout of microfluidic devices is not trivial: Channels must be properly dimensioned and connected, the used samples and chemicals must be injected into the chip at the right pressure, and mixing, heating, or incubation processes must be initiated at the right time. This requires dedicated expertise on a huge number of parameters and, eventually, design automation and simulation methods. This module provides 
* an overview of the various applications which are suited for microfluidic devices,
* an overview of the different biochip platforms that are available to realize those applications,
* a detailed introduction into design automation for microfluidic devices, 
* a detailed introduction into simulation methods for microfluidic devices, as well as
* an overview of fabrication procedures for microfluidic devices.
Overall, after the lecture, students have a complete understanding of how to realize a microfluidic application from the initial idea to a prototypical implementation.The domain of microfluidics is a multi-disciplinary field which deals with the precise control and manipulation of fluids at the micro-scale. Corresponding devices, often also known as ""Lab-on-a-Chip"" (LoC), are used to realize experiments or operations in domains such as medicine, (bio-)chemistry, biology, pharmacology, etc. The main idea is to realize assays, which are originally conducted in bulky and expensive laboratories, on a minimized, integrated, and automated single device. Prominent (although simple) examples include the pregnancy test or the Covid-19 test; but much more elaborated devices exist.

However, the design and layout of microfluidic devices is not trivial: Channels must be properly dimensioned and connected, the used samples and chemicals must be injected into the chip at the right pressure, and mixing, heating, or incubation processes must be initiated at the right time. This requires dedicated expertise on a huge number of parameters and, eventually, design automation and simulation methods. This module provides 
* an overview of the various applications which are suited for microfluidic devices,
* an overview of the different biochip platforms that are available to realize those applications,
* a detailed introduction into design automation for microfluidic devices, 
* a detailed introduction into simulation methods for microfluidic devices, as well as
* an overview of fabrication procedures for microfluidic devices.
Overall, after the lecture, students have a complete understanding of how to realize a microfluidic application from the initial idea to a prototypical implementation.","The module will be held in the form of presentations about the topics covered above followed by corresponding hands-on sessions/exercises. Using slides presentations and whiteboard sketches, the main concepts of the respectively considered topics are provided. In addition, the students will have the opportunity to deepen their knowledge through individual hands-on experiences with corresponding design and simulation tools. Finally, students will be given the opportunity to witness the fabrication process of a simple/prototypical microfluidic biochip within our lab.","Lecture slides, software tools, hands-on in lab.","A. Grimmer and R. Wille. Designing Droplet Microfluidic Networks: A Toolbox for Designers. Springer, 2020.
Krüger, Timm, et al. ""The lattice Boltzmann method."" Springer International Publishing 10.978-3 (2017): 4-15.",173,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3397185/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2259,Distributed Systems,5.0,-,Always,"Bhatotia, Pramod",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The module examination consists of a 75-minute, closed-book exam. The exam verifies to what extend the students are able to convey and recite the core building blocks, concepts, algorithms, and protocols for distributed system design. Theoretical and knowledge-oriented questions check the familiarity with principles and concepts; Practical tasks check the ability to apply selected approaches, algorithms, protocols, and programming techniques on the paper.",No,Yes,"Algorithms and data structures (searching, sorting, hash tables, lists, trees, graphs, basic notions of complexity (O-notation)), basic programing skills and tools (Java, C/C++, concurrency, multithreading, synchronization, code versioning and concurrent development (e.g., CVS or SVN)), and operating systems concepts, computer network basics, and database systems basics.","At the end of the module, students know the properties of common building blocks applicable to the design of distributed systems (e.g., for communication, coordination, fault-tolerance, and replication). They are able to understand the complexities involved in developing a distributed system and can analyze common failure sources. Students understand the basics of distributed filesystems, can evaluate peer-to-peer systems, and apply MapReduce-style processing on large data collections. In general students are able to evaluate common design decisions for building a distributed system and apply these principle characteristics to develop a distributed application. This involves the application and development of communication systems, coordination algorithms and replication mechanisms.","The module covers the principles and basic building blocks of large-scale distributed systems. This includes algorithms and protocols for the core challenges in building distributed systems. The module starts with a review of basic networking mechanisms and an introduction of protocols for synchronous and asynchronous process communication in networked environments. In this context, different communication architectures and paradigms are analyzed. Next, various aspects of time in distributed systems are discussed and concepts, as well as algorithms, for logical time (Lamport timestamps and Vector timestamps), and synchronization of physical clocks are presented. These concepts are important to introduce advanced communication protocols such as totally-ordered multicast or other process coordination mechanisms. The module discusses the challenges in coordination and presents algorithms for mutual exclusion, leader election, and consensus. A major part of the module focuses on the PAXOS algorithm and its variations for distributed consensus. Another important part of the module covers fault-tolerance and service availability in distributed systems. Therefore, several consistency models are analyzed, and techniques and algorithms for replication, such as active replication, primary backup replication, and gossip-based replication, are presented. Besides these rather theoretical and generic challenges, the module also covers more practical aspects such as web caching with consistent hashing, distributed filesystems, and large-scale data processing with Map Reduce. Towards the end of the module, peer-to-peer systems are investigated in detail. First, structured peer-to-peer approaches like distributed hash tables (DHTs) are introduced (e.g., CHORD, CAN, PASTRY); then peer-to-peer applications are presented and discussed. All contents are supported by examples and case studies.The module covers the principles and basic building blocks of large-scale distributed systems. This includes algorithms and protocols for the core challenges in building distributed systems. The module starts with a review of basic networking mechanisms and an introduction of protocols for synchronous and asynchronous process communication in networked environments. In this context, different communication architectures and paradigms are analyzed. Next, various aspects of time in distributed systems are discussed and concepts, as well as algorithms, for logical time (Lamport timestamps and Vector timestamps), and synchronization of physical clocks are presented. These concepts are important to introduce advanced communication protocols such as totally-ordered multicast or other process coordination mechanisms. The module discusses the challenges in coordination and presents algorithms for mutual exclusion, leader election, and consensus. A major part of the module focuses on the PAXOS algorithm and its variations for distributed consensus. Another important part of the module covers fault-tolerance and service availability in distributed systems. Therefore, several consistency models are analyzed, and techniques and algorithms for replication, such as active replication, primary backup replication, and gossip-based replication, are presented. Besides these rather theoretical and generic challenges, the module also covers more practical aspects such as web caching with consistent hashing, distributed filesystems, and large-scale data processing with Map Reduce. Towards the end of the module, peer-to-peer systems are investigated in detail. First, structured peer-to-peer approaches like distributed hash tables (DHTs) are introduced (e.g., CHORD, CAN, PASTRY); then peer-to-peer applications are presented and discussed. All contents are supported by examples and case studies.","The module is organized as a combination of lectures with PowerPoint slides and blackboard notes, invited talks, and small group tutorials to discuss homework assignments. The lecture motivates challenges in distributed system design by examples and presents theory, algorithms, and protocols to solve these challenges. The theoretical concepts and algorithms are applied and practiced individually by students through homework assignments. Assignments are discussed in a weekly tutorial to strengthen the learning outcome.","- powerpoint slides
- blackboard
- assignments
- E-learning platform (Moodle)","Selected chapters from the following books:
- Distributed Systems: Principles and Paradigms. Andrew S. Tanenbaum & Maarten van Steen. Prentice Hall (a recent edition).
- Distributed Systems: Concepts and Design. George Coulouris, Jean Dollimore, Tim Kindberg. Addison Wesley (a recent edition).
- Selected reading material on systems, algorithms and protocols as announced in class.",174,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/756837/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI70630,HW/SW Codesign,5.0,-,from Summer semester 2020,"Herkersdorf, Andreas",Department of Computer Engineering,-,Master,-,-,one semester,winter/summer semester,English,-,150.0,45.0,105.0,"The exam (written, 75 minutes) is adjusted to the different topics conveyed. Acquired knowledge will be tested in different ways: The students have to remember the properties of the conveyed concepts and algorithms used in the different steps of the design flow, they have to apply associated algorithms to given design problems and they have to analyze design problems and associated given solutions.

The final grade is made up exclusively by the final exam.",Yes,No,No specific requirements.,"At the end of the module students are able to understand specification and modeling of mixed hardware-/software solutions, the optimized partitioning of sub-tasks into hardware or software partitions and their binding to specific processing entities as well as the scheduling of these tasks as the major problems in the design of combined HW/SW systems. They will be able to apply the standard method of a top down design flow consisting of specification, exploration and refinement. 

Further, the students will be able to use different algorithms like hierarchical clustering, group migration, simulated annealing or tabu search for partitioning and various algorithms for static and dynamic scheduling that help in solving them. 
In addition, they will be able to evaluate the design quality reached by applying these approaches and tailor them to specific problems for creating own SoC architectures.","The module covers the design flow from a system specification in form of function graphs down to FPGA netlists and executable object code for microprocessors with special focus on the partitioning of sub-functions into a software and a hardware part of a System-on-Chip (SoC). The major topics are: modeling and specification of mixed hardware/software solutions for embedded systems, graph partitioning and binding to execution units, scheduling of tasks, estimation of design quality.The module covers the design flow from a system specification in form of function graphs down to FPGA netlists and executable object code for microprocessors with special focus on the partitioning of sub-functions into a software and a hardware part of a System-on-Chip (SoC). The major topics are: modeling and specification of mixed hardware/software solutions for embedded systems, graph partitioning and binding to execution units, scheduling of tasks, estimation of design quality.","The basic learning method is presentation during the lecture, supplemented with group discussions. During the tutorial the solution of example problems will be discussed. For a better understanding students will read scientific publications as self studies. Case studies will be discussed to get a practical understanding of the  problems to be solved for HW/SW codesign of embedded systems / Systems-on-Chip.","Presentation slides and lecture notes.

The lecture is given in English.","D. Gajski, ""Specification and Design of embedded Systems"", Prentice Hall",175,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1743552/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2075,Microprocessors,5.0,-,Always,"Trinitis, Carsten",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"Students have to hand in 4 exercise reports. The students demonstrate with the reports that they have gained deeper knowledge of the specific exerises including low level programming at assembly level, vector processing with intrinsics, cache parameter measurements, cache coherence protocols as well as the difference between several instruction set architectures. They show that they are able to solve extensive low level programming tasks, know how different microprocessors operate at machine language level, and how their performance can be optimised at core level. Students know how to document this knowledge in reports by using literature and with more time at their disposal. 
In the written 75 minutes examination students demonstrate by answering questions under time pressure and without helping material the theoretical knowledge of microprocessor components at single and multi-core level as well as on their role in high performance computing. The final grade is an averaged grade from the written examination (70 %) and from the lab reports (30 %).",No,Yes,"IN0004 Introduction to Computer Organization and Technology - Computer Architecture, IN0005 Laboratory: Computer Organization and Computer Architecture, Not required, but basic knowledge about computer architecture is helpful","Upon completion of the module, students are able to understand and analyse:
- the architecture of a microprocessor in general
- features that have been added over processor generations since the first microprocessor was introduced
- the state of the art in modern microprocessor architectures
- possible trends with regard to future processor architectures
- techniques to program and optimise different architectures at assembly language level.

Also students are able to understand the role of a microprocessor in high performance computing systems.","Topology and structure of computing systems
Technical development of Microprocessors: From 4004 to contemporary
processor architectures
RISC vs. CISC- Architektur und
Instruction Set Architecture and addressing modes
Pipelining
Pipelining conflicts
Examples: x86, ARM
Cache structures, cache coherency, MESI and directory based protocols
Superscalar vs. VLIW architectures
SSE- and AVX Vector Intrinsics
Branch prediction
Speculatice execution
OutlookTopology and structure of computing systems
Technical development of Microprocessors: From 4004 to contemporary
processor architectures
RISC vs. CISC- Architektur und
Instruction Set Architecture and addressing modes
Pipelining
Pipelining conflicts
Examples: x86, ARM
Cache structures, cache coherency, MESI and directory based protocols
Superscalar vs. VLIW architectures
SSE- and AVX Vector Intrinsics
Branch prediction
Speculatice execution
Outlook","Lecture, presentation, workshop, team work, blended learning, experiment","Data projector, Whiteboard","Hennessy/Patterson: Computer Architecture - A Quantitative Approach
William Stallings:Computer Architecture and Organization
Intel / AMD / ARM Reference Manuals",176,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456670/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2098,Mobile Distributed Systems,5.0,-,Always,"Baumgarten, Uwe",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,In the written exam (90 minutes) students should prove to be able to identify given problems of the foundations of mobile distributed systems including wireless communication and mobile operating systems and find solutions within limited time.,No,Yes,"IN0009 Basic Principles: Operating Systems and System Software, IN0010 Introduction to computer networking and distributed systems","The students know the basic foundations of mobile distributed systems (MDS). They are able to understand the foundations, problems, and solutions of MDS. They are able to assess current developments. In addition they are able to apply their knowledge to new developments in the area of wireless communication (including their protocols) and the area of mobile operating systems (including important applications).","Mobility, wireless communication, mobile operating systems, architectures, concepts, mechanisms, techniques and their evaluationMobility, wireless communication, mobile operating systems, architectures, concepts, mechanisms, techniques and their evaluation","Lecture (presentation and discussion of the foundations), exercises with presentations (application of basic knowledge on various examples), self assessment (with well-established questions)",Slides and further supporting documents via moodle,"Schiller, Jochen. Mobilkommunikation, 2. Auflage, Pearson Studium, 2003.
Roth, Jörg. Mobile Computing, Grundlagen, Technik, Konzepte, 2. Auflage, dpunkt.verlag, 2005.
Walke, Bernhard. Mobilfunknetze und ihre Protokolle 1, Grundlagen, GSM, UMTS und andere zellulare
Mobilfunknetze, 3. Auflage, Teubner, 2001.",177,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/460548/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2315,Network Coding,6.0,-,Always,"Carle, Georg",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,180.0,75.0,105.0,A written examination is performed in the form of a 90 minute exam. Questions of comprehension and arithmetic tasks assess the familiarity with and the mastering of the content covered in the module. Practical content and socket programming are dealt with by examples that have to be explained.,Yes,No,"Introduction to Computer Networking and Distributed Systems (IN0010), Discrete Structures (IN0015), Discrete Probability Theory (IN0018), good programming skills in C (or C++)","Students know about the basics of NC, both in theory and practical
implementations. The projects accompanying the lecture offer students the
possibility to gain practical knowledge about coded packet networks, in
particular but not limited to wireless networks. Furthermore, students acquire
notable skills in socket/network programming.","Conventional routing is unable to achieve a network's capacity as given by the
min-cut max-flow theorem - a rather theoretical point of view. Network Coding
(NC) is an approach to achieve this very capacity in practice and can thus be
considered a generalization of routing. Just think about it:
Intermediate nodes (let us call them ""router"") normally only send identical
copies of previously received packets (forget about the headers). NC extends
their capability by demanding that sent packets are arbitrary linear
combinations of previously received packets. Sounds strange? It is...

Here is a brief example to make you curious:
Assume A wants to transmit n packets over a lossy link to B. With conventional
approaches, B would have to acknowledge successful receipt of each individual
packet such that A can retransmit any packets that got lost in transmission.
If you use NC, A does not send the actual information contained in each
individual packet but linear combinations of all packets. Obviously, B needs n
linear independent packets to decode. If any packet gets lost during
transmission, B does not need to signal a specific loss to A. Instead, A
continues to transmit random (independent) linear combinations of those n
packets until B has assembled enough packets to decode the whole batch.

This example is very basic, and actually only even a degenerated case of NC. But
it gives you the underlying idea. Now just assume there are not only A and B but
a number of intermediate nodes, each of them listening, buffering packets, and
sending linear combinations. Instead of deciding which specific packet to send
where, those nodes have to decide how often a random linear combination is being
broadcast.

The lecture is a combination of usual classes combined with practical sessions
during classes, i.e., you are encouraged to bring your notebooks and participate
in the projects.

The theoretic part of the lecture covers the following topics:
- NC as generalization of routing
- min-cut/max-flow theorem
- linear programming
- packet loss and channel estimation
- ARQ mechanisms
- random linear network coding (RLNC)
- applications of NC
- bidirectional coding
- NC in transport and link-layer protocols
- NC in wireless networks
- acknowledgement schemes for NC
- combination of NC on different layers

The practical part (projects) cover the following topics:
- socket programming
- IEEE802.11 raw sockets
- implementation of RLNC and acknowledgement schemes
- window protocols for NC
- many more if you wantConventional routing is unable to achieve a network's capacity as given by the
min-cut max-flow theorem - a rather theoretical point of view. Network Coding
(NC) is an approach to achieve this very capacity in practice and can thus be
considered a generalization of routing. Just think about it:
Intermediate nodes (let us call them ""router"") normally only send identical
copies of previously received packets (forget about the headers). NC extends
their capability by demanding that sent packets are arbitrary linear
combinations of previously received packets. Sounds strange? It is...

Here is a brief example to make you curious:
Assume A wants to transmit n packets over a lossy link to B. With conventional
approaches, B would have to acknowledge successful receipt of each individual
packet such that A can retransmit any packets that got lost in transmission.
If you use NC, A does not send the actual information contained in each
individual packet but linear combinations of all packets. Obviously, B needs n
linear independent packets to decode. If any packet gets lost during
transmission, B does not need to signal a specific loss to A. Instead, A
continues to transmit random (independent) linear combinations of those n
packets until B has assembled enough packets to decode the whole batch.

This example is very basic, and actually only even a degenerated case of NC. But
it gives you the underlying idea. Now just assume there are not only A and B but
a number of intermediate nodes, each of them listening, buffering packets, and
sending linear combinations. Instead of deciding which specific packet to send
where, those nodes have to decide how often a random linear combination is being
broadcast.

The lecture is a combination of usual classes combined with practical sessions
during classes, i.e., you are encouraged to bring your notebooks and participate
in the projects.

The theoretic part of the lecture covers the following topics:
- NC as generalization of routing
- min-cut/max-flow theorem
- linear programming
- packet loss and channel estimation
- ARQ mechanisms
- random linear network coding (RLNC)
- applications of NC
- bidirectional coding
- NC in transport and link-layer protocols
- NC in wireless networks
- acknowledgement schemes for NC
- combination of NC on different layers

The practical part (projects) cover the following topics:
- socket programming
- IEEE802.11 raw sockets
- implementation of RLNC and acknowledgement schemes
- window protocols for NC
- many more if you want","Lecture with exercises
The lecture is complemented by integrated exercises and demonstrations. On that
basis, students are encouraged to propose individual practical projects, which
are worked on in the second half of the lecture. Those projects may be done in
groups of at most two students and are supervised during class hours. At the end
of the lecture period students should present their projects to their class
mates by presentation and/or demonstration.",-,"Network Coding: An Introduction, Tracey Ho und Desmond Lun
TCP/IP illustrated, Wright & Stevens
Must read: Linux kernel coding style (https://www.kernel.org/doc/Documentation/CodingStyle)",178,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1070916/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2099,Network and System Management,4.0,-,Always,"Carle, Georg",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,German,-,120.0,45.0,75.0,"written exam, programming project
The exam takes the form of a 60 minutes written test.",No,Yes,IN0010 Introduction to computer networking and distributed systems,"The students understand the main issues of the management of IT systems, including its incorporation into IT processes of an organisation, and know relevant solutions.","Starting from basics of networked systems requirements of IT-management (esp. network and systems management) are analyzed. This leads to the concept of management-architectures. Examples of management architectures are discussed: OSI/TMN, Internet/SNMP, CORBA, DMTF, Web-based management. An introduction of management platforms and important management tools follows. Finally various management scenarios and IT-management process in the service management area are discussed.Starting from basics of networked systems requirements of IT-management (esp. network and systems management) are analyzed. This leads to the concept of management-architectures. Examples of management architectures are discussed: OSI/TMN, Internet/SNMP, CORBA, DMTF, Web-based management. An introduction of management platforms and important management tools follows. Finally various management scenarios and IT-management process in the service management area are discussed.","Lecture, exercise course, problems for individual study, programming project in a group","Slides, Whiteboard, Exercises",The slides contain references to scientific articles and other resources about the course.,179,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456992/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2333,Protocol Design,8.0,-,from Summer semester 2020,Ott,Department of Computer Engineering,-,Master,-,-,one semester,irregularly,English,-,240.0,90.0,150.0,"Type of Assessment: exam

The exam takes the form of a 120 minutes written test. The exam assesses the acquaintance with and understanding of concepts and techniques related to protocol design, covering theory and practice, technical and non-technical aspects. Using different kinds of questions, knowledge, in-depth understanding, and transfer using small problems, the exam allows assessing the ability to link and to apply this knowledge regarding the desired learning outcomes. During the semester, students will perform small theoretical and practical exercises that allow them to assess their learning progress and to prepare for the exam. These exercises will also be graded and contribute to the final grade.",No,Yes,"Recommended requirements are basics in computer networks, security, and distributed systems (IN0010 or equivalent knowledge) as well as very good command of the C/C++ or Java programming language.","After successful completion of this module, students will remember the basic functional blocks for different protocols and alternative ways to realize those. They understand the origin and evolution of the Internet architectural principles and the technical issues relevant to Internet-scale protocol design and their evaluation. They recognize non-technical challenges arising protocol design when targeting broader adoption. They understand the implications of design choices, for implementation, maintenance, and validation. They understand the importance of interoperability and evolvability and ways to achieve those for protocol and system designs that may be around for a long time. They recognize the interaction of market players and impact of IPR on technology development and deployment. They are able to apply their knowledge to evaluate the pros and cons of protocol design alternatives as well as the methods of design, modeling, and evaluation to sample cases.","All communication systems use protocols that define how to exchange information, from bit representations on the wire or in the air to addressing and routing in a global network to application layer conventions for representing complex data types. Protocols appear in many different domains and application areas, which define the goals and constraints; they may be proprietary or open, jointly developed by standards organizations or set by strong market players.
In this course, we will focus on protocol for the Internet, primarily looking at the network, transport, and application layer. We will review architectural and protocol design principles from theory as well as from practical experience over the past decades. We will study different functional building blocks and design patterns for protocols suitable to implement certain protocol features and assess their applicability and their limitations. We will look at how the various design principles fit with and how they impact recent and foreseeable future developments in communications and (inter)networking at large and how such principles may need to be restated or adapted for new environments. While a clear focus is on architectures and principles from the Internet and for internetworking, lessons from other networking technologies are also considered. We will use numerous case studies to exemplify the main points. We will discuss various implementation aspects for scalable and robust systems and also consider the non-functional aspects of protocol design, including issues concerning acceptance in the market or groups. In our exercises, we the students will explore selected topics with a focus on recent developments. In our assignments, we will develop a protocol specification to achieve certain functionality in several steps and implement this specification in small groups.
The following list offers a rough outline of the topics we expect to cover:
- State sharing and reliability
- Scalability concerning many dimensions
- Resource consumption and fairness 
- Naming and Addressing
- Protocol syntax and encoding
- Multiplexing
- Security: Robustness
- Security: Protocol Design Techniques
- Intermediaries: NATs/firewalls, proxies, gateways
- Transport layer abstractions
- Interoperability, Evolveability
- Internet design principles (and their evolution)
- Meta-aspects of design: financial, political, human
- Implications of new communication paradigms
- Think different: Protocol design for specific environmentsAll communication systems use protocols that define how to exchange information, from bit representations on the wire or in the air to addressing and routing in a global network to application layer conventions for representing complex data types. Protocols appear in many different domains and application areas, which define the goals and constraints; they may be proprietary or open, jointly developed by standards organizations or set by strong market players.
In this course, we will focus on protocol for the Internet, primarily looking at the network, transport, and application layer. We will review architectural and protocol design principles from theory as well as from practical experience over the past decades. We will study different functional building blocks and design patterns for protocols suitable to implement certain protocol features and assess their applicability and their limitations. We will look at how the various design principles fit with and how they impact recent and foreseeable future developments in communications and (inter)networking at large and how such principles may need to be restated or adapted for new environments. While a clear focus is on architectures and principles from the Internet and for internetworking, lessons from other networking technologies are also considered. We will use numerous case studies to exemplify the main points. We will discuss various implementation aspects for scalable and robust systems and also consider the non-functional aspects of protocol design, including issues concerning acceptance in the market or groups. In our exercises, we the students will explore selected topics with a focus on recent developments. In our assignments, we will develop a protocol specification to achieve certain functionality in several steps and implement this specification in small groups.
The following list offers a rough outline of the topics we expect to cover:
- State sharing and reliability
- Scalability concerning many dimensions
- Resource consumption and fairness 
- Naming and Addressing
- Protocol syntax and encoding
- Multiplexing
- Security: Robustness
- Security: Protocol Design Techniques
- Intermediaries: NATs/firewalls, proxies, gateways
- Transport layer abstractions
- Interoperability, Evolveability
- Internet design principles (and their evolution)
- Meta-aspects of design: financial, political, human
- Implications of new communication paradigms
- Think different: Protocol design for specific environments","We combine a four-hour presence lecture with two-hour presence exercises, which are augmented by homework. The exercises will emphasize inverse classroom techniques in which the students will prepare and present recent techniques on selected topics.","Powerpoint slides, exercises, assignments","There are no comprehensive textbooks available on the topic of the course, and we will not base the course on a collection of textbooks but rather use primary literature. The course material contains pointers to literature.",180,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1826031/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2125,Virtualization Techniques,5.0,-,Always,"Schulz, Martin",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The exam takes the form of a written 75 minutes exam. Questions allow to asses acquaintance with the classification and concepts of virtual machines, as well as techniques used therein for improved performance. Questions asking for advantages and disadvantages of given virtualization approaches and optimization techniques allow to evaluate the understanding of benefits of various approaches.",No,No,"IN2076 Advanced Computer Architecture, IN0009 Basic Principles: Operating Systems and System Software","At the end of the module students are able to classify and evaluate different virtual machines, both concepts and actual products in use today. They can analyse their usefulness in various scenarios, and they understand the technical design trade-offs, implementation challenges as well as typical solutions for better performance.","- Classification of Virtual Machines
- Operating system Virtualization
- ISA Virtualization
   ++ Interpretation
   ++ Binary Translation
   ++ Dynamic Optimization
- Process Virtual Machines
- High-Level Language Virtual Machines
- HW/SW-Codesign Virtual Machines
- system Virtual Machines
- Multiprocessor Virtualization
- Applications- Classification of Virtual Machines
- Operating system Virtualization
- ISA Virtualization
   ++ Interpretation
   ++ Binary Translation
   ++ Dynamic Optimization
- Process Virtual Machines
- High-Level Language Virtual Machines
- HW/SW-Codesign Virtual Machines
- system Virtual Machines
- Multiprocessor Virtualization
- Applications","On the one hand, the module consists of lectures to present the content, do discussions on presented problems and solutions, and run tasks for student teams to search for solutions to presented problems. On the other hand, there are online and offline exercises in which existing implementations of virtual machines get studied by students, techniques get evaluated and extended. Literature references are provided for self-study on details. On a voluntary basis, students get the chance to give short
presentations on selected topics.","The lecture uses slides and the white board to support the description of complex techniques. A web page of the module is extended during the lecture period with slide media, recordings
and tasks sheets for the exercises.","James E. Smith, Ravi Nair: Virtual Machines, Versatile Platforms for Systems and Processes, Elsevier/Morgan Kaufmann, 2005",181,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/457032/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2376,Advanced Robot Control and Learning,6.0,-,Always,Alexander,Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,90.0,90.0,"The students will learn the advanced topics in control and learning methods, and will be able to apply these methods
to real robotic systems. The module grade is based on the student’s performance in a one-week hands-on course
(practical demonstration and oral presentation), as well as a final oral exam (20 min). This evaluates the students’
knowledge in theoretical aspects of learning and control, and examines whether they are able to apply this to realworld
robotic problems, and present results.",Yes,No,"- Fundamentals of control engineering
- Fundamentals of robotics
- Fundamentals machine learning
- Fundamentals of statistics","After successful participation in the module, the students are able to:
- Understand robotics problems from differential geometry point of view and consequently interpret control objectives
- Identify and determine the Robot Dynamics
- Solve modern control problems with advanced methods
- Understand and exploit the concept of redundancy in robotics
- Design robust controllers
- Design bio-inspired controllers
- Understand and use learning methods in robotics","The Control section covers advanced topics in robot control, modeling and identification. Starting with the
fundamental concepts such as differential geometry, it then covers the essential ideas behind the state-of-the-art of
control methods in real robotic applications. Moreover, advanced methods are presented for the modeling and
identification of physical systems and in particular robots. Finally, in the Adaptive Impedance Control section, the
theories behind the human motor control are concisely explained and the associated bio-inspired control algorithms
are described. The second part of the course covers typical problems in robot learning and approaches to solve them.
Beyond that, many practical implications and problems regarding real-world applications are covered. The outline for
this course is as follows.

I. Differential Geometry in Robotics
- Manifolds
- Rigid Body Configuration
- Tangent and Cotangent Space
- Tensors
II. Task Space Control
- Robot Equations in Task Coordinates
- SE3 Coordinates and Jacobian Matrix
- Decoupled Position Control in Task Space
III. Redundant Robots
- Dynamics of Redundant Robots
- Motion/Torque Null space
- Null space and Stability
IV. Passivity-based Robot Control
- Passivity
- 1-DoF Robot
- Passive Representation of a Robot
- PD-g(q) Control
- Passivity & Robustness
- PD-g(q)-Feedforward & PD+ Control
- Damping Design
- Slotine & Li Control
- Joint Control Summary
- Cartesian Impedance Control
- Impedance vs. Admittance Control
- Local Nature of Cartesian Control
V. Port-based Modeling in Robotics
- Dirac Structure & Power Ports
- Port-based Modeling of a Manipulator
- Passivity Analysis
VI. Linear Parametric Modeling and Identification of Robot Dynamics
- Linear Parameterization of the Manipulator’s Dynamic Model
- The Minimum Parameter Set
- Parameter Identification
- Trajectory Optimization
- Modeling of Friction
- Identification Procedure
- Adaptive Control
VII. Adaptive Impedance Control
- Bio-inspired formulation
- Adaptive impedance control for a manipulator
VIII. Learning for Physical Systems – Overview
- Latest advances in machine learning for physical systems
- Recent applications for autonomous systems
- Literature overview
IX. Real-world Problem Classes
- Motion and manipulation skill learning
- Blind manipulation
- Vision-based manipulation
- Sensitive grasping
- Compound manipulation tasks
X. Complexity reduction
- Expert knowledge vs. data-driven approaches
- Smart data vs. big data
- Interaction control architectures
- Interaction skill formalisms
- System limits and task context
- Latent spaces and dimensionality reduction
XI. Cost function design
- Feasibility and optimality
- Unknown constraints
- Confidence in real-world problems
XII. Practical implications
- Simulation vs. real world
- Experiment design
- Limitations of physical systemsThe Control section covers advanced topics in robot control, modeling and identification. Starting with the
fundamental concepts such as differential geometry, it then covers the essential ideas behind the state-of-the-art of
control methods in real robotic applications. Moreover, advanced methods are presented for the modeling and
identification of physical systems and in particular robots. Finally, in the Adaptive Impedance Control section, the
theories behind the human motor control are concisely explained and the associated bio-inspired control algorithms
are described. The second part of the course covers typical problems in robot learning and approaches to solve them.
Beyond that, many practical implications and problems regarding real-world applications are covered. The outline for
this course is as follows.

I. Differential Geometry in Robotics
- Manifolds
- Rigid Body Configuration
- Tangent and Cotangent Space
- Tensors
II. Task Space Control
- Robot Equations in Task Coordinates
- SE3 Coordinates and Jacobian Matrix
- Decoupled Position Control in Task Space
III. Redundant Robots
- Dynamics of Redundant Robots
- Motion/Torque Null space
- Null space and Stability
IV. Passivity-based Robot Control
- Passivity
- 1-DoF Robot
- Passive Representation of a Robot
- PD-g(q) Control
- Passivity & Robustness
- PD-g(q)-Feedforward & PD+ Control
- Damping Design
- Slotine & Li Control
- Joint Control Summary
- Cartesian Impedance Control
- Impedance vs. Admittance Control
- Local Nature of Cartesian Control
V. Port-based Modeling in Robotics
- Dirac Structure & Power Ports
- Port-based Modeling of a Manipulator
- Passivity Analysis
VI. Linear Parametric Modeling and Identification of Robot Dynamics
- Linear Parameterization of the Manipulator’s Dynamic Model
- The Minimum Parameter Set
- Parameter Identification
- Trajectory Optimization
- Modeling of Friction
- Identification Procedure
- Adaptive Control
VII. Adaptive Impedance Control
- Bio-inspired formulation
- Adaptive impedance control for a manipulator
VIII. Learning for Physical Systems – Overview
- Latest advances in machine learning for physical systems
- Recent applications for autonomous systems
- Literature overview
IX. Real-world Problem Classes
- Motion and manipulation skill learning
- Blind manipulation
- Vision-based manipulation
- Sensitive grasping
- Compound manipulation tasks
X. Complexity reduction
- Expert knowledge vs. data-driven approaches
- Smart data vs. big data
- Interaction control architectures
- Interaction skill formalisms
- System limits and task context
- Latent spaces and dimensionality reduction
XI. Cost function design
- Feasibility and optimality
- Unknown constraints
- Confidence in real-world problems
XII. Practical implications
- Simulation vs. real world
- Experiment design
- Limitations of physical systems","Exercises are made available, presented and discussed during the lessons. Sample solutions are provided. The
Robothon introduces the students to real-world problems that ought to be solved in the form of a project. Have a look
at previous Robothons when Prof. Haddadin was still in Hannover:
https://www.roboterfabrik.uni-hannover.de
During the Robothon, students will gain hands-on experience in solving real-world problems using robotic systems.
Students will work together in teams, where each team comes up with their own suggestion of a relevant problem
which they may solve within one week. The students are responsible for planning out their solution to the respective
problem and implementing it. They will be supported throughout the one-week course but are self-sufficient. At the
end they will demonstrate their solution live and give a presentation about the methods and approaches they have
used.
Learning and control are the main theme of the student projects. Example problems are related to the future of
robotics in human-robot shared working areas and industries (e.g., performing the peg-in-hole procedure, packing,
etc. in the real world), future of mobility and health systems.","- Presentations
- Exercises with solutions
- Robot hands-on experience
- Tutorials","- Ploen, Scott Robert. Geometric algorithms for the dynamics and control of multi-body systems. Diss. UNIVERSITY
OF CALIFORNIA IRVINE, 1997.
- Dullemond, Kees, and Kasper Peeters. ""Introduction to Tensor calculus."" Kees Dullemond and Kasper Peeters -
(1991).
- Khatib, Oussama. ""A unified approach for motion and force control of robot manipulators: The operational space
formulation."" IEEE Journal on Robotics and Automation 3.1 (1987)
- Ott, Christian. Cartesian impedance control of redundant and flexible-joint robots. Springer, 2008.
- Siciliano, Bruno. ""Kinematic control of redundant robot manipulators: A tutorial."" Journal of Intelligent and Robotic
systems 3.3 (1990)
- Hatanaka, Takeshi, et al. Passivity-Based Control and Estimation in Networked Robotics. Springer, 2015
- Duindam, Vincent, et al., eds. Modeling and control of complex physical systems: the port-Hamiltonian approach.
Springer Science & Business Media, 2009
- Khalil, Wisama, and Etienne Dombre. Modeling, identification and control of robots. Butterworth Heinemann, 2004
- Burdet, Etienne, David W. Franklin, and Theodore E. Milner. Human robotics: neuromechanics and motor control.
MIT Press, 2013
- Argall, Brenna D., et al. ""A survey of robot learning from demonstration."" Robotics and autonomous systems 57.5
(2009): 469-483.
- Asfour, Tamim, et al. ""Imitation learning of dual-arm manipulation tasks in humanoid robots."" International Journal of
Humanoid Robotics 5.02 (2008): 183-202.
- Kober, Jens, J. Andrew Bagnell, and Jan Peters. ""Reinforcement learning in robotics: A survey."" The International
Journal of Robotics Research 32.11 (2013): 1238-1274.
- Van Hoof, Herke, et al. ""Learning robot in-hand manipulation with tactile features."" 2015 IEEE-RAS 15th
International Conference on Humanoid Robots (Humanoids). IEEE, 2015.
- Nguyen-Tuong, Duy, and Jan Peters. ""Model learning for robot control: a survey."" Cognitive processing 12.4 (2011):
319-340.
- Pastor, Peter, et al. ""Skill learning and task outcome prediction for manipulation."" 2011 IEEE International
Conference on Robotics and Automation. IEEE, 2011.
- Kalakrishnan, Mrinal, et al. ""Learning force control policies for compliant manipulation."" 2011 IEEE/RSJ International
Conference on Intelligent Robots and Systems. IEEE, 2011.
- Kronander, Klas, and Aude Billard. ""Learning compliant manipulation through kinesthetic and tactile human-robot
interaction."" IEEE transactions on haptics 7.3 (2013): 367-380.",183,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1734236/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT433037,Advanced Robot Learning and Decision-Making,5.0,-,from Summer semester 2025,Sch,Department of Computer Engineering,-,Master,-,-,one semester,winter/summer semester,English,-,150.0,75.0,75.0,"This course provides an in-depth coverage of advanced methods in robot learning and decision-making, combining theory with hands-on practice. The course includes alternating lectures and practical sessions to balance foundational understanding and hands-on experiences, and programming exercises are designed to be integral to the learning process. The final assessment will be an oral exam (20 minutes, each student being evaluated individually), aimed to evaluate students’ understanding of key topics, their analytical and problem-solving abilities, and their proficiency in applying methods to real-world robotics scenarios.
Successfully passing all 5 programming assignments will result in a bonus of 0,3 points towards the overall grade. The bonus can only be awarded if students passed the oral exam.",Yes,No,"Motivation and interest in robotics, machine learning, and control, as well as good knowledge of calculus, probability theory, linear algebra, fundamentals of control, and Python programming (the programming exercises will be in Python).
Additional knowledge and courses on the following topics will be beneficial: Dynamic systems, optimal control, classical reinforcement learning, basics of optimization, mobile robotics, and machine learning, deep learning (e.g., I2DL course).
Moreover, our course, “Optimal Control and Decision Making,” which runs parallel to this one, serves as a good foundation but it is not mandatory.","At the end of the course, students are able to
Derive optimal controller equations for mobile robots and design learning-based approaches to cope with non-idealities such as model errors;
Understand the strengths and limitations of various approaches, including optimal control, learning-based control, and reinforcement learning;
Implement state-of-the-art algorithms, rapidly prototype new ideas, and apply them to their own problem domains.","Course Summary: This course covers advanced topics in robot learning and control, combining theoretical foundations with practical implementation to equip students with the skills to tackle real-world robotics challenges. The course emphasizes a systems-oriented approach, introducing modelling techniques for robot systems, optimal control methods, learning-based approaches, and reinforcement learning tailored to robotic applications. Students will learn how to model and control robotic platforms, integrate learned models into control frameworks, and address real-world challenges such as uncertainty, disturbances, and model inaccuracies.
Topics covered in the course include:
Robotics Preliminaries: Discrete- and Continuous-Time Models, Robot Dynamics Modeling (e.g., Quadrotor) and Simulation, Linearization Techniques (About Equilibrium, Feedback Linearization, Flatness), Control Architecture and Considerations
Foundations of Optimal Control:  Dynamic Programming, Bellman Equation, Continuous-Time Optimal Control (Pontryagin’s Minimum Principle), Linear-Quadratic Approximations (LQR and iLQR)
Learning-Based Model Predictive Control (MPC): Robust MPC, Deterministic Approaches (Linear Regression, Neural Networks), Probabilistic Approaches (Bayesian Linear Regression, Gaussian Processes), MPC with Learned Dynamics Models, Optimization Toolboxes and Practical Considerations
Deep Reinforcement Learning: Deep Q-Learning, Policy Gradient Methods, Proximal Policy Optimization (PPO), Risk-Aware Reinforcement Learning
Additional Topics in Safe Robot Decision-Making (adapted periodically based on the state-of-the-art)Course Summary: This course covers advanced topics in robot learning and control, combining theoretical foundations with practical implementation to equip students with the skills to tackle real-world robotics challenges. The course emphasizes a systems-oriented approach, introducing modelling techniques for robot systems, optimal control methods, learning-based approaches, and reinforcement learning tailored to robotic applications. Students will learn how to model and control robotic platforms, integrate learned models into control frameworks, and address real-world challenges such as uncertainty, disturbances, and model inaccuracies.
Topics covered in the course include:
Robotics Preliminaries: Discrete- and Continuous-Time Models, Robot Dynamics Modeling (e.g., Quadrotor) and Simulation, Linearization Techniques (About Equilibrium, Feedback Linearization, Flatness), Control Architecture and Considerations
Foundations of Optimal Control:  Dynamic Programming, Bellman Equation, Continuous-Time Optimal Control (Pontryagin’s Minimum Principle), Linear-Quadratic Approximations (LQR and iLQR)
Learning-Based Model Predictive Control (MPC): Robust MPC, Deterministic Approaches (Linear Regression, Neural Networks), Probabilistic Approaches (Bayesian Linear Regression, Gaussian Processes), MPC with Learned Dynamics Models, Optimization Toolboxes and Practical Considerations
Deep Reinforcement Learning: Deep Q-Learning, Policy Gradient Methods, Proximal Policy Optimization (PPO), Risk-Aware Reinforcement Learning
Additional Topics in Safe Robot Decision-Making (adapted periodically based on the state-of-the-art)","The core components of this course are
Lectures (introducing the core concepts)
In-Class Tutorials (working through examples and setups)
Practical Sessions (hands-on implementation of algorithms, including both in-lecture and take-home components)","The following types of media are used
Presentations (blackboard and slides)
Handouts (lecture notes and assignments)
Online Videos (additional tutorials)
Jupyter Notebook / Python Scripts (implementation codebase)","Lecture notes and slides
Bertsekas, Dynamic Programming and Optimal Control, Vol. I and II
Bertsekas, Reinforcement Learning and Optimal Control
Borrelli, Bemporad, and Morari, Predictive Control for Linear and Hybrid Systems
Sutton and Barto, Reinforcement Learning: An Introduction
Bishop and Nasrabadi, Pattern Recognition and Machine Learning
Williams and Rasmussen, Gaussian Processes for Machine Learning",184,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4388109/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2352,Applied Biorobotics,6.0,-,Always,"Renjewski, Daniel",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"A portfolio is generated by the students to document their learning progress through the course. It comprises the following items

•	Documentation of research results
•	Programming project reports
•	Exercise solutions
•	Documentation of a practical project 

research documentation	20%
poster presentation	10%
mid-term video presentation	20%
exercises	30%
portfolio appearance and completeness	5%
application and realisation	15%
 
Furthermore, graded posters (start and end of the course) and brief presentations (2-3) will be prepared and presented by the students. A selection of the course content will be covered by students in a video presentation.

The final grade is awarded based on the portfolio and presentation performance.",No,No,"technical mechanics, algorithms and data structures","At the end of this course students are able
•	to explain concepts for using biological insights for solving technical problems and apply them to specific problems
•	to describe the role of models for the knowledge transfer from biology into robotics, to characterize their specific limitations and to apply them to technical problems
•	to differentiate advantages and disadvantages of bio-inspired optimization algorithms and to apply them to optimize their solutions
•	to apply the acquired knowledge to a practical experiment and design a controller for a legged robot","The module covers the following topics
•	introduction to portfolio documentation, primer on presentation and feedback skills, literature research and interactive learning environments
•	fundamentals of bipedal locomotion
•	bipedal robot control
•	biologically inspired optimization
•	introduction to experiment design and execution
In a practical project the theoretical knowledge will be transferred by students to a robotic experiment. They will design and optimize a controller and analyse as well as assess the resulting behaviour.The module covers the following topics
•	introduction to portfolio documentation, primer on presentation and feedback skills, literature research and interactive learning environments
•	fundamentals of bipedal locomotion
•	bipedal robot control
•	biologically inspired optimization
•	introduction to experiment design and execution
In a practical project the theoretical knowledge will be transferred by students to a robotic experiment. They will design and optimize a controller and analyse as well as assess the resulting behaviour.","Theoretical basics will be introduced in videos using the ""flipped classroom"" technique and consolidated with discussion and supervised group work during physical meetings. 
Theoretical background will be acquired independently by literature research and documentation and conveyed in presentations. Application of acquired knowledge to topic-specific exercises and in a project will consolidate. 
The progress will be tracked and documented in individual portfolios and feedback will be given by peers and the instructor.","videos, poster, student presentations, practical project","Templates and anchors: neuromechanical hypotheses of legged locomotion on land
R.J. Full, D.E. Koditschek, Journal of Experimental Biology 1999 202: 3325-3332;",185,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1392538/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3460,Selected Topics in Robotics,5.0,-,Always,-,Department of Computer Engineering,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,186,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498138/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2356,Autonomous Driving,3.0,-,Always,"Knoll, Alois",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,The written exam (60min) tests the student’s understanding of Autonomous Driving concepts and the students ability to apply the learned methodologies to according scenarios.,No,Yes,"Linear Algebra for Informatics (MA0901)
Discrete Probability Theory (IN0018)","At the end of the module students are able to understand the basics of autonomous driving, and know how they relate to the scientific and practical challenges in the field. The students know exemplary solution approaches for central questions and can apply them to simple problems.","The lecture teaches the foundations of autonomous driving and relates them to current scientific and industrial topics in the domain. Central topic areas are discussed and exemplary solution approaches demonstrated, to enable the students in applying these approaches to basic autonomous driving scenarios.

Overview: 

Path planning, Decision Making, Trajectories
Multi-Sensor-Data-Fusion, Tracking, Detection, Sensormodels
Lane detection, modelling and mapping
AI in vehicles, Scenario Classification and Prediction
Semantic concepts for scenario description and reasoning
Architectures and Operating Systems for Autonomous Driving
Connected Vehicles & Intelligent Infrastructure
Functional and Operational Safety

A bonus of 0.3 grades can be gained by developing a python demonstrator for one of the discussed central topics.The lecture teaches the foundations of autonomous driving and relates them to current scientific and industrial topics in the domain. Central topic areas are discussed and exemplary solution approaches demonstrated, to enable the students in applying these approaches to basic autonomous driving scenarios.

Overview: 

Path planning, Decision Making, Trajectories
Multi-Sensor-Data-Fusion, Tracking, Detection, Sensormodels
Lane detection, modelling and mapping
AI in vehicles, Scenario Classification and Prediction
Semantic concepts for scenario description and reasoning
Architectures and Operating Systems for Autonomous Driving
Connected Vehicles & Intelligent Infrastructure
Functional and Operational Safety

A bonus of 0.3 grades can be gained by developing a python demonstrator for one of the discussed central topics.",The contents of the module are presented as a lecture with slides. A deeper relation to current industrial topics is achieved through talks by invited experts. The student’s ability to practically apply the learned concepts can be enhanced by developing a demonstrator in python.,"Slides, Videos","Christopher M. Bishop. Pattern Recognition and Machine Learning. Springer, 2006.
 
Sebastian Thrun, Probabilistic Robotics, MIT Press, 2005

Roland Siegwart, Introduction to Autonomous Mobile, Intelligent Robotics and Autonomous Agents Series, 2011",187,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1446290/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2318,Autonomous Navigation for Flying Robots,2.0,-,Always,"Cremers, Daniel",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,English,-,60.0,2.0,58.0,"The module examination consists of a 60-minute written, electronic exam that takes place on a computer separate from the Internet. Answering the questions partly requires ticking given multiple answers, performing (simple) calculations by hand or calculator, and solving a programming task using the interactive quadrocopter simulator in Python.",No,Yes,"Linear algebra, probability theory, 3D geometry, Python","After successful participation of this module, students will be able to
- understand the flight principles of quadrotors and their application potential
- specify the pose of objects in 3D space and to perform calculations between them (e.g. compute the relative motion)
- explain the principles of Bayesian state estimation
- implement and apply an extended Kalman filter (EKF), and to select appropriate parameters for it, 
- implement and apply a PID controller for state control, and to fine tune its parameters,
- understand and explain the principles of visual motion estimation and 3D mapping","In recent years, flying robots such as miniature helicopters or quadrotors have received a large gain in popularity. Potential applications range from aerial filming over remote visual inspection of industrial sites to automatic 3D reconstruction of buildings. Navigating a quadrotor manually requires a skilled pilot and constant concentration. Therefore, there is a strong scientific interest to develop solutions that enable quadrotors to fly autonomously and without constant human supervision. This is a challenging research problem because the payload of a quadrotor is uttermost constrained and so both the quality of the onboard sensors and the available computing power is strongly limited.

In this course, we will introduce the basic concepts for autonomous navigation for quadrotors. The following topics will be covered:
- 3D geometry, 
- probabilistic state estimation, 
- visual odometry, SLAM, 3D mapping, 
- linear control. 
In particular, you will learn how to infer the position of the quadrotor from its sensor readings and how to navigate it along a trajectory. 

The course consists of a series of weekly lecture videos that will be interleaved by interactive quizzes and hands-on programming tasks. For the flight experiments, we provide a browser-based quadrotor simulator which requires the students to write small code snippets in Python.

This course is intended for undergraduate and graduate students in computer science, electrical engineering or mechanical engineering. This course has been offered by TUM for the first time in summer term 2014 on EdX with more than 20.000 registered students of which 1.400 passed examination. The MOOC is based on the previous TUM lecture “Visual Navigation for Flying Robots” which received the TUM TeachInf Award for the best lecture in 2012 and 2013.In recent years, flying robots such as miniature helicopters or quadrotors have received a large gain in popularity. Potential applications range from aerial filming over remote visual inspection of industrial sites to automatic 3D reconstruction of buildings. Navigating a quadrotor manually requires a skilled pilot and constant concentration. Therefore, there is a strong scientific interest to develop solutions that enable quadrotors to fly autonomously and without constant human supervision. This is a challenging research problem because the payload of a quadrotor is uttermost constrained and so both the quality of the onboard sensors and the available computing power is strongly limited.

In this course, we will introduce the basic concepts for autonomous navigation for quadrotors. The following topics will be covered:
- 3D geometry, 
- probabilistic state estimation, 
- visual odometry, SLAM, 3D mapping, 
- linear control. 
In particular, you will learn how to infer the position of the quadrotor from its sensor readings and how to navigate it along a trajectory. 

The course consists of a series of weekly lecture videos that will be interleaved by interactive quizzes and hands-on programming tasks. For the flight experiments, we provide a browser-based quadrotor simulator which requires the students to write small code snippets in Python.

This course is intended for undergraduate and graduate students in computer science, electrical engineering or mechanical engineering. This course has been offered by TUM for the first time in summer term 2014 on EdX with more than 20.000 registered students of which 1.400 passed examination. The MOOC is based on the previous TUM lecture “Visual Navigation for Flying Robots” which received the TUM TeachInf Award for the best lecture in 2012 and 2013.","Teaching format: MOOC, Learning methods: Video lectures, experiments (simulation), individual exercises (homework)","Videos, slides, blog, message forum, exercise sheets (electronic), additional links (e.g., research papers, videos, code, websites)",https://jsturm.de/wp/teaching/autonavx-slides/,188,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1126210/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT436000,Legged Robots,5.0,-,from Summer semester 2024,"Knoll, Alois",Department of Computer Engineering,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The assessment for the module ""Legged Robots"" incorporates a multifaceted approach, comprising five individual homework assignments and a culminating final capstone project. This comprehensive evaluation includes the scrutiny of source codes and oral presentations to ensure a holistic assessment of students' understanding and application of the subject matter.

Each individual homework assignment is meticulously designed to gauge both theoretical and practical knowledge pertaining to the techniques necessary for modeling and controlling legged robotic systems. The assessment will encompass essay writing and coding components, which will be evaluated through an online platform, such as Google Colab or Jupyter Notebook. This method not only facilitates efficient evaluation but also aligns with contemporary practices in the field.

The individual homework assignments are structured to demand a dedicated effort, with an estimated duration of 10 hours per assignment, allowing students to delve deep into the intricacies of legged robot modeling and control.

At the culmination of the module, students will engage in a final capstone project. In this endeavor, each student will showcase a systematically crafted project that represents the apex of their collective understanding. An exemplary demonstration might involve achieving the objective of controlling a legged robot, utilizing a control method acquired from the module.

Each individual homework assignment will carry a weight of 1/9 towards the total credit, while the final project will contribute significantly with a weight of 4/9 to the overall credit assessment.",No,No,"Knowledge about robotics, have attended at least a robotic lecture, such as IN2067 (Robotics), IN2138 (Robot Motion Planning)","The module imparts knowledge on kinematic and dynamic modeling of legged robot systems. It instructs on the control of legged robot locomotion, thereby providing expertise applicable to the control of various dynamic robotic systems. The module covers advanced control algorithms, including model predictive control and whole-body control.","1.	Introduction to legged robots
2.	Modeling and control of a one leg robot that hops in the plane
3.	Modeling and control of a leg robot that hops in three dimensions.
4.	Control of biped and quadruped running
5.	Advanced control algorithms for controlling legged robots, including model predictive control and whole body control1.	Introduction to legged robots
2.	Modeling and control of a one leg robot that hops in the plane
3.	Modeling and control of a leg robot that hops in three dimensions.
4.	Control of biped and quadruped running
5.	Advanced control algorithms for controlling legged robots, including model predictive control and whole body control",Seminars and practical exercises are in physical presence. Live recordings will be provided also in BBB but it is recommended to participate in the physical lecture. Simulation and real-world robotic experimentations are performed to implement the learned knowledge from the module.,Software resources will be available. Real-world robotic platforms and simulation agents for experimentation.,"Raibert, Marc H. Legged robots that balance. MIT press, 1986.",189,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3939503/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2222,Cognitive Systems,5.0,-,Always,"Knoll, Alois",Department of Computer Engineering,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,The exam takes the form of a 75 minutes written test. Questions allow to assess acquaintance with basic concepts of the perception - cognition - action loop in biological as well as in technical cognitive systems.,No,Yes,-,"Upon successful completion of the module, students understand fundamental principles of human cognition and are able to transfer to technical systems. They are able to apply these mathematical and algorithmic methods to obtain cognitive qualities in technical systems, especially in the area of robotics. These methods include architectures for cognitive systems, knowledge representation and reasoning, handling of uncertain knowledge, perception, planning, and action execution.","Basic concepts (perception - cognition - action), transfer of cognitive skills (sensors, algorithms, behaviour patterns), study of prototypes of existing systems available at TUM.Basic concepts (perception - cognition - action), transfer of cognitive skills (sensors, algorithms, behaviour patterns), study of prototypes of existing systems available at TUM.","Basic terms and concepts of the subject area are introduced in the lecture with presentation slides and discussed on the basis of examples. During the exercise, the acquired knowledge will be deepened by studying and discussing the contents of conference papers and professional articles. In addition, relevant tools for the implementation of the concepts presented will be presented interactively and applied to typical tasks.","Slide show, blackboard, online programming experiments, animations","- VERNON, David. Artificial cognitive systems: A primer. MIT Press, 2014.
- WILSON, Robert Andrew; KEIL, Frank C. (Hg.). The MIT encyclopedia of the cognitive sciences. MIT press, 2001.
- GERSTNER, Wulfram; KISTLER, Werner M. Spiking neuron models: Single neurons, populations, plasticity. Cambridge University Press, 2002.",190,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/487482/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2305,Cyber-Physical Systems,6.0,-,Always,"Althoff, Matthias",Department of Computer Engineering,-,Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The 90 minutes written exam consists of a part with short questions (30 min.) and a second part with mathematical modeling, calculations, and derivations (60 min.). A collection of formulas and tables required to solve the given problems is provided. Students are only allowed to bring pens and a calculator (non-progammable). The question part contains 33.3 % and the other part 66.6 % of the total points. To pass the exam, at least 50 % of the total points have to be achieved.",No,Yes,,"In many modern systems, computing elements are tightly connected with physical entities for which the term ""cyber-physical systems"" has been established in recent years. Examples are automated vehicles, surgical robots, smart grids, and collaborative human-robot manufacturing. After attending the course, students are able to model, analyze, and control cyber-physical systems at a level that enables them to continue deeper studies on their own. 

After the end of the module students are able to model cyber-physical systems and have a deep understanding of the interplay between continuous dynamics arising from physical entities (e.g. mechanical systems) and discrete dynamics originating from computing elements (e.g. discrete event control), leading to so-called hybrid dynamics. Students will be capable of designing, analyzing, and controlling cyber-physical systems on a basic level. They can extract the relevant dynamical aspects of cyber-physical systems, discuss with experts on those and develop solutions on their own that meet given specifications.","Continuous dynamics: modeling, ordinary differential equations, system properties, solution of linear differential equations, simulation of differential equations, stability analysis, introduction to control of continuous systems;  

Discrete dynamics: modeling (Moore/Mealy machine, Petri nets, satecharts), solution traces, temporal logic, introduction to model checking, controller synthesis; 

Hybrid dynamics: modeling (timed automata, hybrid automata, hybrid statecharts), simulation of hybrid dynamics, stability analysis, introduction to reachability analysis, supervisory control;

Networks of cyber-physical systems; typical hardware (sensors, actuators, computing hardware)Continuous dynamics: modeling, ordinary differential equations, system properties, solution of linear differential equations, simulation of differential equations, stability analysis, introduction to control of continuous systems;  

Discrete dynamics: modeling (Moore/Mealy machine, Petri nets, satecharts), solution traces, temporal logic, introduction to model checking, controller synthesis; 

Hybrid dynamics: modeling (timed automata, hybrid automata, hybrid statecharts), simulation of hybrid dynamics, stability analysis, introduction to reachability analysis, supervisory control;

Networks of cyber-physical systems; typical hardware (sensors, actuators, computing hardware)","The module consists of a lecture and exercise classes. The content of the lecture is presented via slides, which are completed during the lecture using the blackboard. Students are encouraged to additionally study the relevant literature. In the exercise classes, the learned content is applied to practical examples to consolidate the content of the lecture.","Slides, blackboard, exercise sheets","E. A. Lee and S. A. Seshia,Introduction to Embedded Systems - A Cyber-Physical Systems Approach, LeeSeshia.org, 2011. 

P. Marwedel, Embedded System Design: Embedded Systems Foundations of Cyber-Physical Systems, Springer

A. J. Van Der Schaft, An Introduction to Hybrid Dynamical Systems, Springer",191,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/977331/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2060,Real-Time Systems,6.0,-,Always,"Knoll, Alois",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,180.0,75.0,105.0,The examination is carried out in the form of a 90-minute written exam. This is intended to demonstrate that specific problems of real-time systems have been understood and can be solved through the use of suitable algorithms and simulations. No aids are allowed.,No,Yes,,"At the end of this module students are able to analyse the specific requirements of real-time systems. They are able to select from a variety of possible solutions based on relevant aspects, such as modeling concepts, scheduling algorithms, operating systems, programming languages, etc. They understand typical problems with cuncurrent programming and are familiar with different mechanisms to overcome these problems.","The lecture series comprises special methods, solutions and problems pertaining to real-time systems. To do so, concrete examples where real-time systems are required are presented. The difference between real-time and non-real-time systems is highlighted and it is demonstrated why closed and open-loop control algorithms are fundamentally dependent on real-time systems with their special hard- and software properties. Modelling of real-time systems, concurrency, scheduling algorithms, special operating systems and programming paradigms, clocks, real-time communication and typical hardware for sensors and actuators are discussed in detail. The lecture series concludes with an introduction to fault-tolerant systems.The lecture series comprises special methods, solutions and problems pertaining to real-time systems. To do so, concrete examples where real-time systems are required are presented. The difference between real-time and non-real-time systems is highlighted and it is demonstrated why closed and open-loop control algorithms are fundamentally dependent on real-time systems with their special hard- and software properties. Modelling of real-time systems, concurrency, scheduling algorithms, special operating systems and programming paradigms, clocks, real-time communication and typical hardware for sensors and actuators are discussed in detail. The lecture series concludes with an introduction to fault-tolerant systems.","The module consists of a lecture, an exercise and tasks for self-study. The contents of the lecture are conveyed in the lecture and through presentations. Students are encouraged to deal with the content of the topics through small tasks set in the course of the lectures, as well as by solving exercise sheets. The solution to the exercises is discussed in the exercise.","Slides, exercise sheets","- Hermann Kopetz: Real-Time Systems, 2011, 2nd Edition
- Giorgio C. Buttazzo: Hard Real-Time Computing Systems: Predictable Scheduling Algorithms and Applications, 2011, 3rd Edition
- Lee, Seshia: Introduction to Embedded Systems 2017, available online https://ptolemy.berkeley.edu/books/leeseshia/",192,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261091/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2061,Introduction to Digital Signal Processing,7.0,-,Always,"Knoll, Alois",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,German/English,-,210.0,90.0,120.0,The examination is carried out in the form of a 105-minute written exam. This is intended to demonstrate that modern methods of signal processing are mastered and suitable algorithms can be selected for a specific problem. No aids are allowed.,No,Yes,,"At the end of this module students are able to evaluate theoretical concepts and underlying algorithms of modern digital signal processing systems. In the exercise course, the students learn to apply these concepts to a concrete problem and to decide on a proper implementation.","Signals and systems in time and frequency domain, examples, discretization, filter and frequency transforms, compression, realization (signal processors), outlook to digital image processingSignals and systems in time and frequency domain, examples, discretization, filter and frequency transforms, compression, realization (signal processors), outlook to digital image processing","The module consists of a lecture, an exercise and tasks for self-study. The contents of the lecture are conveyed in the lecture and through presentations. Students are encouraged to deal with the content of the topics through small tasks set in the course of the lectures, as well as by solving exercise sheets. The solution to the exercises is discussed in the exercise.","Slides, exercise sheets","- Janus A. Cadzow, Foundations of Digital Signal Processing and Data Analysis, Macmillan, 1987 
- Johnny R. Johnson, Introduction to Digital Processing, Prentice Hall, 1989
- Rolf Unbehauen, Systemtheorie, Oldenburg, 1989
- Oppenheimer/Willsky, Signals and Systems, Prentice Hall, 1983
- A. van den Enden/N. Verhoeckx, Discrete-Time Signal Processing - An Introduction, Prentice Hall, 1989
- R. Best, Digitale Signalverarbeitung und -simulation, AT-Verlag, 1989
- John G. Proakis, Dimitris G. Manolakis, Digital Signal Processing - Principles, Algorithms and Applications, Prentice Hall, 1996
- Oppenheimer/Schafer, Discrete-Time Signal Processing, Prentice Hall, 1989
- Tamal Bose, Digital Signal and Image Processing, Wiley, 2004",193,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456531/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2383,Formal Methods for Cyber-Physical Systems,5.0,-,Always,"Althoff, Matthias",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The final grade is determined by
- final exam (40% weight),
- evaluation of programming tests (60% weight).

The final exam is a written exam and lasts for 90 min. In case not many students are attending the lecture, the final examination will be oral. 
Students should demonstrate in the final exam that they are able to develop formally-correct solutions for cyber-physical systems regarding verification, controller synthesis, observation, and conformance checking. The written exam consists of a part with short questions (30 min.) and a second part with mathematical modeling, calculations, derivations, and writing of pseudo code (60 min.). A collection of formulas and tables required to solve the given problems is provided. Students are only allowed to bring pens and a calculator (non-programmable). The question part contains 25-40 % and the other part 60-75 % of the total points. To pass the exam, at least 40 % of the total points have to be achieved.

There will be 4-6 programming tests during the semester that will be graded. Each programming test will be performed in a dedicated room where students can use computers provided by us, or use their own machines. The duration of a test is 60-90 min. Each programming task has verifiable intermediate results. For each achieved intermediate result, points are awarded that are translated into a grade based on a grading scheme. The overall grade for the programming tasks is calculated as the mean of all individual programming tests.

If a programming test cannot be attended, e.g., due to sickness, we will provide an alternative date where a different task of similar difficulty has to be solved.",No,Yes,Cyber-Physical Systems (IN2305),"After attending the module, you are able to verify, control, observe, and identify cyber-physical systems in a provably correct way by using formal methods. The material is taught at a level that enables you to apply the methods for real problems or start a research project on formal methods for cyber-physical systems. In particular, you will acquire the following skills:

- You understand the benefits of formal methods compared to conventional methods which do not prove properties.
- You can apply interval arithmetic and bound evaluations of functions using Taylor models.
- You can construct set representations for intervals, zonotopes, ellipsoids, polytopes, and non-convex sets.
- You can convert set-representations exactly or in an over-approximative way.
- You can compute set-based operations, such as linear maps, Minkowski sum, or convex hull.
- You can write software to propagate reachable sets of linear, nonlinear, and hybrid systems. 
- You can abstract dynamical systems to simpler descriptions and compute the associated abstraction error.
- You can create solutions to verify cyber-physical systems during runtime.
- You can safeguard reinforcement learning techniques using formal methods.
- You can automatically synthesize formally-correct controllers adhering to input and state constraints.
- You can integrate reachability analysis in model predictive control to design robust and adaptive controllers.
- You can estimate the set of possible states using set-based observers. 
- You understand the difference between the set-membership approach and the interval-observer approach for set-based observers.
- You can check whether a model encloses all real behaviors.
- You can program solutions to add uncertainty to models so that they include all observed behaviors.","In many modern systems, computing elements are tightly connected with physical entities for which the term ""cyber-physical systems"" has been established in recent years. Examples are automated vehicles, surgical robots, smart grids, and collaborative human-robot manufacturing.

Because cyber-physical systems are becoming increasingly safety-critical due to the ongoing trend towards deeper autonomy, formal methods that prove the correct behavior of systems are gaining importance. This lecture teaches state-of-the-art formal methods by combining theory and hands-on programming sessions.

- Preliminaries: Set representations and operations, including interval arithmetic and Taylor models
- Formal verification using reachability analysis; considered system classes: linear systems, nonlinear systems, hybrid systems
- Online verification in uncertain and dynamic environments
- Safe reinforcement learning 
- Correct-by-construction controller design
- Robust model predictive control
- Set-based observers: set-membership approach and interval-observer approach
- Conformance checking for system identification: observer-based approaches and reachability-based approachesIn many modern systems, computing elements are tightly connected with physical entities for which the term ""cyber-physical systems"" has been established in recent years. Examples are automated vehicles, surgical robots, smart grids, and collaborative human-robot manufacturing.

Because cyber-physical systems are becoming increasingly safety-critical due to the ongoing trend towards deeper autonomy, formal methods that prove the correct behavior of systems are gaining importance. This lecture teaches state-of-the-art formal methods by combining theory and hands-on programming sessions.

- Preliminaries: Set representations and operations, including interval arithmetic and Taylor models
- Formal verification using reachability analysis; considered system classes: linear systems, nonlinear systems, hybrid systems
- Online verification in uncertain and dynamic environments
- Safe reinforcement learning 
- Correct-by-construction controller design
- Robust model predictive control
- Set-based observers: set-membership approach and interval-observer approach
- Conformance checking for system identification: observer-based approaches and reachability-based approaches","The module consists of a lecture and accompanying excercices. The content of the lecture is presented via slides, which are completed during the lecture using the blackboard.

In the accompanying excercices, students should solve programming tasks directly related to the taught content. These tasks should be solved at home. Possible solutions are presented during the excercices and compared with the developed solutions of the students. The programming exercises and the discussion during the excercice sessions prepare the students for the programming tests.","Presentation slides, whiteboard, software development tools",There is not yet a suitable textbook available; we will provide research papers to deepen the understanding,194,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1865608/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3330000,Introduction to Mobile Robotics,6.0,-,from Winter semester 2022/23,"Knoll, Alois",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"Written exam at the end of the semester lasting 90min and no additional materials are allowed in the exam. In the written exam, students demonstrate that they understood the key concepts of mobile robots that can autonomously navigate their environments. The exam questions will focus on the principles which have been discussed during the lectures and students will have to apply their knowledge in the exam to solve problems similar to those discussed during the exercises as part of the lecture series.",No,Yes,"IN0007 Fundamentals of Algorithms and Data Structures
IN0015 Discrete Structures
IN0018 Discrete Probability Theory","After successfully finishing this module, students will be able to design and develop mobile robots that can autonomously navigate in their environment. The key concepts taught in this course include basics of probability theory, recursive Bayes filtering, probabilistic sensor and motion models, probabilistic approaches to robot localization and mapping, techniques for simultaneous localization and mapping (SLAM), basic approaches to collision avoidance, path planning and exploration. In particular, students will acquire the following skills:

- They can analyze sensors (ultrasound, LiDAR, Cameras) used for robot navigation and design probabilistic models for them.
- They can design probabilistic motion models.
- They can realize a probabilistic localization approach using either a particle filter, a discrete filter, or variants of the Kalman filter.
- They are able to develop and realize an approach to learn occupancy grid maps from sensor data given the poses of the robot are known. 
- They have a fundamental understanding of recursive Bayes filtering, are able to derive its equation and can critically assess the advantages and disadvantages of different representations of distributions for the recursive Bayes filter.
- They have a fundamental understanding of the problem of simultaneous localization and mapping (SLAM). 
- They have a basic understanding of motion-planning and collision avoidance methods.
- They have the capability to develop a navigation system for wheeled mobile robots.","- Wheeled locomotion
- Proximity sensors
- Probabilistic Robotics
- Probabilistic Motion Models
- Probabilistic Sensor Models
- Bayes Filter – Discrete Filters
- Bayes Filter – Kalman Filters
- Bayes Filter – Particle Filter
- Occupancy grid maps and reflection maps
- SLAM – Simultaneous Localization and Mapping
- SLAM – Landmark-based SLAM
- SLAM – Grid-based SLAM
- SLAM – Graph-based SLAM
- Iterative Closest Point Algorithm
- Path planning and Collision Avoidance
- Exploration- Wheeled locomotion
- Proximity sensors
- Probabilistic Robotics
- Probabilistic Motion Models
- Probabilistic Sensor Models
- Bayes Filter – Discrete Filters
- Bayes Filter – Kalman Filters
- Bayes Filter – Particle Filter
- Occupancy grid maps and reflection maps
- SLAM – Simultaneous Localization and Mapping
- SLAM – Landmark-based SLAM
- SLAM – Grid-based SLAM
- SLAM – Graph-based SLAM
- Iterative Closest Point Algorithm
- Path planning and Collision Avoidance
- Exploration","The module consists of a lecture and exercise classes. The content of the lecture is presented via slides, writing on a blackboard or digital media. Students are encouraged to additionally study the relevant literature. In the exercise classes, the learned content is applied to practical examples to consolidate the content of the lecture. Students should ideally have tried to solve the problems before they attend the exercise. To encourage more participation, students are regularly asked questions or encouraged to participate in online polls. Students are also encouraged to implement fundamental algorithms themselves.","Slides, blackboard, electronic writing pad, exercise sheets, recordings, Q&A sessions","- Thrun, S, Burgard, W, and Fox, D. Probabilistic Robotics, MIT Press 2005.",195,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3308453/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MW2411,Concepts and Software Design for Cyber-Physical Systems,5.0,-,from Summer semester 2019,"Caccamo, Marco",Chair of Cyber-Physical Systems in Production Engineering (Prof. Caccamo),-,Master,Concepts and Software Design for Cyber-Physical Systems,-,one semester,winter/summer semester,English,-,150.0,60.0,90.0,"The module examination takes the form of two partial module examinations: This includes a written final examination (weighting 100%, processing time 180 min, permitted aids are a handwritten, double-sided DIN A4 sheet and a scientific calculator) and an excercise (coursework, passed/not passed). During the exercise, students work on programming tasks that demonstrate that they can design and analyze time-sensitive software for cyber-physical applications and use low-level hardware features such as hardware timers, interrupts, pulse wide modulation (PWM) and analog-to-digital-to-digital-to-analog converters for microprocessor programming. This type of verification is necessary because only this practical application of methods and basic concepts (programming) can achieve the learning result. In the final exam, they demonstrate their understanding of the basic concepts of cyber-physical systems by means of comprehension and arithmetic exercises. This will test whether they can use the basic theory of schedulability for real-time applications in a limited time and with limited resources.",Yes,No,Basic knowledge in C programming,"After participating in the module, students will be able to understand the basic concepts of cyber-physical systems (CPS), design, and analyse time-sensitive software for cyber-physical applications. The students will be able to use low level hardware features like hardware timers, interrupts, pulse wide modulation (PWM), and analog-to-digital/digital-to-analog converters for microprocessor programming. Additionally they will be able to use basic schedulability theory for real-time applications.",Key concepts in common cyber-physical system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of cyber-physical real-time software.Key concepts in common cyber-physical system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of cyber-physical real-time software.,"The module includes a lecture and an exercise. The lecture explains the basic concepts and methods of software design for cyber-physical systems using PowerPoint presentations. In the exercise, which is designed as a laboratory project, the focus is on promoting active learning. Students directly apply the methods and concepts covered in the lecture by programming microprocessors. Thus they learn to design and analyze time-sensitive software for cyber-physical applications. They then discuss their results with a supervisor who can give direct feedback.","PowerPoint presentations, lab manual","Buttazzo, G. C. (2011). Hard Real-Time Computing Systems Predictable Scheduling Algorithms and Applications. Boston, MA: Springer US.",196,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1624241/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2405,Neuroprosthetics: Artificial Limbs,5.0,-,from Winter semester 2021/22,"Piazza, Cristina",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"Type of Assessment:
The examination consists of a written test of 90 minutes at the end of the course. In case of a low number of participants, the exam can be conducted orally.
In addition, the students will have to provide their solutions to practical exercises to the teaching assistant for evaluation, in the form of a written report and a presentation of contents and results. These exercises may focus on the application of design principles, myoelectric control methods or creation of virtual environments. The students can work on the practical exercises in small groups. The students will be awarded a bonus in case of excellent completion of the exercises.

Reasons for it:
To certify a deep understanding of what presented during the lectures. In addition, during the practical exercises, the students will have the opportunity to apply state-of-the-art methods to real world problems.",No,Yes,"Bachelor or intermediate diploma in informatics, computer science or engineering. Solid programming skills and knowledge of Matlab/Python and Unity3D is highly recommended.

Additionally, knowledge of the following modules is strongly recommended:
-	Signal Theory (EI00330)
-	Automatic Control (MW9020, MW2022, MW1530)
-	Medical Augmented Reality (IN2293)
-	Advanced Practical Course Games Engineering: Augmented Reality (IN7106)
-	Robotics (IN2067)","The module aims to provide knowledge about the main aspects, methodologies and tools for the design, control, testing and evaluation of robotic prosthetic systems, for upper and lower limbs. Particular emphasis is given to methods for mechatronic design, including integration with control interfaces and sensory feedback, and the development of novel functional assessments. On the basis of this knowledge, students are able to develop novel mechatronic systems, analyze electromyographic signals to control multi degrees of freedom devices and improve standard assessments.","The module will present the following topics:
-	History and current evolution of neuroprosthetics, emerging trends in the field, opportunities and challenges.
-	Anatomy of the upper limb, general principles associated with the production of movements and muscle synergies, main causes of upper limb amputation, overview about different level of upper extremity amputation, current challenges.
-	Upper limb and hand bionic prostheses: (1) current strategies for the development of neuroprostheses; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.
-	Anatomy of the lower limb and main causes of amputation: general anatomy of the upper limb, general principles associated with locomotion, main causes of lower limb amputation, overview about different level of lower extremity amputation, current challenges. 
-	Lower limb bionic prostheses: (1) current strategies for the development of neuroprostheses for the restoration of walking; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.
-	Haptic feedback: (1) current strategies for the development of systems for the restoration of haptic feedback; (2) advanced methods: invasive and non-invasive techniques.
-	Functional assessments: current methods to evaluate the performance of neuroprostheses, Cybathlon, emerging trends in the field, opportunities and challengesThe module will present the following topics:
-	History and current evolution of neuroprosthetics, emerging trends in the field, opportunities and challenges.
-	Anatomy of the upper limb, general principles associated with the production of movements and muscle synergies, main causes of upper limb amputation, overview about different level of upper extremity amputation, current challenges.
-	Upper limb and hand bionic prostheses: (1) current strategies for the development of neuroprostheses; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.
-	Anatomy of the lower limb and main causes of amputation: general anatomy of the upper limb, general principles associated with locomotion, main causes of lower limb amputation, overview about different level of lower extremity amputation, current challenges. 
-	Lower limb bionic prostheses: (1) current strategies for the development of neuroprostheses for the restoration of walking; (2) myoelectric control; (3) advanced methods: invasive and non-invasive techniques; (4) overview about interfaces and novel surgical techniques.
-	Haptic feedback: (1) current strategies for the development of systems for the restoration of haptic feedback; (2) advanced methods: invasive and non-invasive techniques.
-	Functional assessments: current methods to evaluate the performance of neuroprostheses, Cybathlon, emerging trends in the field, opportunities and challenges","The teaching methods will include:
- Lectures (2 SWS),
- Exercise and application-specific tutorials (2 SWS): design principles, control methods (based on surface EMG sensors), sensory feedback, virtual reality environment development","PowerPoint, Exercises in Matlab or Python","1) Aszmann, Oskar C., and Dario Farina. (2021). Bionic Limb Reconstruction. Springer
2) Merletti, R., & Farina, D. (Eds.). (2016). Surface electromyography: physiology, engineering, and applications. John Wiley & Sons.
3) M. Bishop, Neural networks for pattern recognition, Oxford university press, 1995.
4)  Muzumdar, Powered Upper Limb Prostheses: Control, Implementation and Clinical Application, Springer Science & Business Media, 2004.",197,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3018441/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2308,Programming and Control for Human-Robot Interaction,5.0,-,Always,Albu,Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"Type of Assessment: project work, oral examination
The examination is based on the project work. Students should demonstrate that they understood the theoretical concepts from the lecture and that they can apply them in in practical problems.
The evaluation of the project work is composed off:
-	Evaluation of the written answers from the simulation and control tutorial
-	Evaluation of the simulation program
-	Evaluation of the programming results with the robots
-	Evaluation of the final presentation and the final discussion
-	Evaluation of the overall involvement and performance during the project",No,Yes,"Introduction to robotics, IN2067 Robotics","At the end of the lecture, the students have gained not only theoretical knowledge but also first practical experience with compliant, torque controlled robots and their programming. Half of the lecture will be dedicated in block units to implementations in simulation and to hands-on experiments.","The lecture treats aspects of robotic manipulation and human-robot interaction starting from the theoretical basis over implementation in simulation up to hands-on validation on the KUKA-DLR light-weight robot.
Topics:
-	Robot modelling and parameter identification
-	Position control
-	Torque control
-	Cartesian Impedance Control
-	Collision detection
-	Reactive path generation
-	State machines for task programmingThe lecture treats aspects of robotic manipulation and human-robot interaction starting from the theoretical basis over implementation in simulation up to hands-on validation on the KUKA-DLR light-weight robot.
Topics:
-	Robot modelling and parameter identification
-	Position control
-	Torque control
-	Cartesian Impedance Control
-	Collision detection
-	Reactive path generation
-	State machines for task programming","Lecture, supervised teamwork and individual work. Substantial part of the lecture time will be dedicated in block units to implementations in simulation and to hands-on experiments.
The lecture will include an excursion to the AUTOMATICA fair in Munich, with visit of the DLR booth as well as of other robotics demonstration.","slides, whiteboard, written tutorial, Simulink libraries, java libraries, web-contents","C. Ott: “Cartesian Impedance Control of Redundant and Flexible-Joint Robots”. Springer Tracts in Advanced Robotics, Vol. 49, 2008, ISBN 978-3-540-69253-9

Albu-Schäffer, C. Ott and G. Hirzinger: “A Unified Passivity Based Control Framework for Position, Torque and Impedance Control of Flexible Joint Robots”. Int. Journal of Robotics Research, Vol. 26, No. 1, pp. 23 – 39",198,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/977264/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2138,Robot Motion Planning,5.0,-,Always,"Knoll, Alois",Department of Computer Engineering,5 Credits ab SoSe 2015,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"In a written exam of 75 minutes the participants have to explain principles of trajectory planning using direct and probabilistic methods, and they need to parametrize a data fusion framework from multiple sources based on Kalman Filter for a specific robotics system considering the uncertainties in the sensory inputs. The Kalman framework is used to build SLAM (Simultaneous Localization and Mapping) frameworks as a basis for trajectory planning.",No,Yes,Not specified,"The goal of the module is to show the participants existing direct planning methods for low-dimensional problems, e.g. mobile robots, and show how probabilistic approaches help to deal with the increasing complexity in high-dimensional planning cases. The students learn how to design a planning system by understanding how to build maps from a-priori information or from sensor input (SLAM) and how to use these maps to efficiently plan collision-free trajectories in space.","The module has two parts. In the first part, planning methods are discussed starting with complete knowledge about the environment, over partial knowledge of the local area, to probabilistic sampling in high-dimensional spaces. This part covers:
bug-algorithms, direct planning methods for planar robots, and probabilistic road-maps.
In the second part, Kalman Filter techniques are discussed that allow to compensate errors in the data and build maps of the environment based on Simultaneous Localization and Mapping (SLAM) and particle filtering approaches.The module has two parts. In the first part, planning methods are discussed starting with complete knowledge about the environment, over partial knowledge of the local area, to probabilistic sampling in high-dimensional spaces. This part covers:
bug-algorithms, direct planning methods for planar robots, and probabilistic road-maps.
In the second part, Kalman Filter techniques are discussed that allow to compensate errors in the data and build maps of the environment based on Simultaneous Localization and Mapping (SLAM) and particle filtering approaches.","The content of the module is presented to the students in a lecture and deepened in an interactive discussion. There are also recorded lectures from previous years that can be used for self-study. The individual learning is supported by tutorials, which are to be solved independently by the students and then their solutions are presented in an exercise. 
Practical examples from the industry on the presented topics will also be shown and guest lectures from the industry will be organized.","Blackboard, slides, videos and online examples","H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, and S. Thrun. Principles of Robot Motion: Theory, Algorithms, and Implementation. MIT Press, 2005.

Steven M. LaValle. Planning Algorithms Cambridge University Press, 2006.",199,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473874/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2067,Robotics,6.0,-,Always,"Burschka, Darius",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"In a 90-minute written exam, participants must create a mathematical model of a kinematic chain of a given manipulator, determine the relationship between the required forces and torques in the actuator and the dynamic state of the robot, and design a stable PID controller for an exemplary task design that is described in the problem.",No,Yes,"- Vector algebra
- Differential calculus
- Basic knowledge of physics (Newton's Law, etc.)","The participants should be able to create a mathematical model of a mechanical system using force/torque analysis (Newton-Euler approach) or by energy analysis (Lagrange method), which relates the drive torques in the joints to motion parameters of the manipulator.
They should also be able to explain the meaning and mathematical relationship to the above model for the control parameters of a PID controller for a robotic system and determine their optimal values for a position and force controller.","On the one hand, this module presents a method how a mechanical system can be converted into a mathematical system of equations for analysis of motion. In a second step, the parameterization of the control of a manipulator is derived from the mathematical analysis of the above equation in order to compensate for any errors and deviations along a given trajectory.

The following topics are defined in the lecture and discussed using practical examples:
- Coordinate systems (Denavit-Hartenberg convention)
- Forward kinematics (relationship: joint rotation to manipulator motion)
- Inverse kinematics (relationship: manipulator motion to joint rotations)
 - Newton-Euler/Lagrange analysis of the dynamic state in the joints
- Dynamic modeling of the manipulator (mathematical model (MVG) for motion analysis)
- PID control of position and forceOn the one hand, this module presents a method how a mechanical system can be converted into a mathematical system of equations for analysis of motion. In a second step, the parameterization of the control of a manipulator is derived from the mathematical analysis of the above equation in order to compensate for any errors and deviations along a given trajectory.

The following topics are defined in the lecture and discussed using practical examples:
- Coordinate systems (Denavit-Hartenberg convention)
- Forward kinematics (relationship: joint rotation to manipulator motion)
- Inverse kinematics (relationship: manipulator motion to joint rotations)
 - Newton-Euler/Lagrange analysis of the dynamic state in the joints
- Dynamic modeling of the manipulator (mathematical model (MVG) for motion analysis)
- PID control of position and force","The course content is presented to the students in a lecture and deepened in an interactive discussion. There are also recorded lectures from previous years that can be used for self-study. The individual learning is supported by tutorials, which are to be solved independently by the students and then their solutions are presented in a 2-hour exercise. 
Practical examples from the industry on the presented topics will also be shown and guest lectures from the industry will be organised.","Blackboard, slides, videos and online examples","Introduction to Robotics Mechanics and Control John
J, Craig, Prentice Hall. ISBN 0-13-123629-6",200,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261359/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2068,Sensor-based Robotic Manipulation and Locomotion,3.0,-,Always,Albu,Department of Computer Engineering,ab WS 13/14 2 SWS und 3 Credits,Bachelor/Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"Type of Assessment: written exam (60 minutes)

The exam takes the form of written test of 60 minutes. Questions allow assessing acquaintance with concepts of Informatics and programming, small programming tasks assess the ability to conceive appropriate algorithmic solutions and realize concurrent applications.",No,Yes,"IN2067 Robotics, basic knowledge of the description of dynamic systems in mechanics",The lecture introduces methods for modelling as well as kinematic and dynamic control of complex (for example humanoid) robot systems which interact with unknown environments. Students will gain an overview on the main algorithms and methods used in robotics for manipulation and locomotion.,"Introduction: Manipulation und locomotion with complex robot systems
- Basics of differential geometry

Representations of orientation: so3, se3

Transformation of coordinates for vectors, convectors, tensors
- Task based control decoupling in task space

Robot model and control in task coordinates
- Redundant systems, micro-/macro-manipulation

Inverse Kinematics

Task priorities: Cartesian and null-space coordinates
- Parallel robots

Dual arm systems

Dexterous hands

Humanoid manipulators

Legged robots
- Grasp planning
- Mobile manipulation
- Visual servoing
- Mobile, non-holonomic robots sensor-guided surgical roboticsIntroduction: Manipulation und locomotion with complex robot systems
- Basics of differential geometry

Representations of orientation: so3, se3

Transformation of coordinates for vectors, convectors, tensors
- Task based control decoupling in task space

Robot model and control in task coordinates
- Redundant systems, micro-/macro-manipulation

Inverse Kinematics

Task priorities: Cartesian and null-space coordinates
- Parallel robots

Dual arm systems

Dexterous hands

Humanoid manipulators

Legged robots
- Grasp planning
- Mobile manipulation
- Visual servoing
- Mobile, non-holonomic robots sensor-guided surgical robotics","Class lecture, combined with their own experimental elaboration of the examples on the computer and further reading for review technical issues.","Slides, whiteboard, web-contents","T. Frankel: The Geometry of Physics - An Introduction, Cambridge University Press 1997
O. Khatib, Lecture Notes: Advanced Robotic Manipulation
M. W. Spong, S. Hutchinson, M. Vydiasagar: Robot Modelling and Control, John Wiley & Sons, 2006
Richard M. Murray, Zexiang Li and S. Shankar Sastry: A Mathematical Introduction to Robotic Manipulation
J. J. Slotine, W. Li: Applied Nonlinear Control, Prentice-Hall, 1990",201,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261771/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330017,Trustworthy Machine Learning Systems,3.0,-,from Winter semester 2023/24,"Knoll, Alois",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,The written exam (60 minutes) held without any allowed aids assesses whether the learning objectives targeted in the learning outcomes have been met. The answering of the questions requires own formulations and the application of the lecture contents to new tasks.,No,Yes,Foundations of machine learning and deep neural networks.,"At the end of the module students are able to evaluate the need, benefits, as well as the particular challenges of trustworthy systems with modules created with machine learning in various application fields. They will understand the connection between trusted components and their use for dependable functions. They know the European Ai Act the relevant standards and can evaluate concerns about the use of machine learning in dedicated applications. They can create an appropriate risk analysis for applications. Graduates know the dimensions of trustworthiness and the scientific and practical foundations of creating trustworthy systems with machine learning components.","- Motivation to create trustworthy systems with components built with machine learning
- Fields of application
- Dimensions of trustworthiness
- Concerns regarding the trustworthiness of machine learning systems
- Relationship between trustworthiness and safety
- ""European AI Act"" and relevant standards
- Development processes
- Requirements definition
- Risk Analysis
- Architectures for building trustworthy systems
- Creation of trusted components with machine learning
- Dimensions of data quality
- Failure Mode and Effects Analysis
- Learning assurance
- Trustworthiness Assessment- Motivation to create trustworthy systems with components built with machine learning
- Fields of application
- Dimensions of trustworthiness
- Concerns regarding the trustworthiness of machine learning systems
- Relationship between trustworthiness and safety
- ""European AI Act"" and relevant standards
- Development processes
- Requirements definition
- Risk Analysis
- Architectures for building trustworthy systems
- Creation of trusted components with machine learning
- Dimensions of data quality
- Failure Mode and Effects Analysis
- Learning assurance
- Trustworthiness Assessment","Presentation of the content following a structure that is presented at the beginning of the lecture. The presentation of the content is combined with discussion between the lecturer and the students that are introduced by questions that integrate “trusted AI related news” like ongoing development of standards and regulations, product introductions or trustworthiness problems.",PowerPoint presentations and videos,"“European Ai Act” available at  EUR-Lex - 52021PC0206 - EN - EUR-Lex (europa.eu)
„EASA Artificial Intelligence concept paper - proposed Issue“ https://www.easa.europa.eu/en/downloads/137631/en
“ISO/IEC TR 24028 - Overview of trustworthiness in AI” available at https://www.vde-verlag.de/iec-normen/248797/iso-iec-tr-24028-2020.html
“ISO/IEC CD 5259” - Data quality for analytics and ML available at https://www.iso.org/standard/81088.html
“ISO/IEC DTR 5469” - Functional safety and AI systems available at https://www.iso.org/standard/81283.html
“VDE-AR-E-2842-61 1-6”  available at  https://www.vde-verlag.de/normen/0800731/vde-ar-e-2842-61-2-anwendungsregel-2021-06.html",202,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3573501/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI71070,Advanced Cryptographic Implementations,5.0,-,from Summer semester 2020,"Sigl, Georg",Chair of Security in Information Technology (Prof. Sigl),-,Master,ACIm,,one semester,summer semester,English,-,150.0,45.0,105.0,"The examination consists of a 60-minute written exam. In this examination, the understanding of the knowledge imparted in the lecture on the implementation of symmetric cryptographic procedures and hash functions, on the implementation of asymmetric cryptographic procedures as well as on the optimization and hardening of cryptographic procedures against implementation attacks is demonstrated by answering open and closed questions. 
If the number of participants is low, the examination can be held in oral form.

Translated with DeepL.com (free version)",Yes,Yes,"The following lectures should be successfully completed: Applied Cryptography or equivalent. Further, the following courses are recommended: “Secure implementations of cryptographic devices”, “SmartCard Lab”, and “Seminar on Security in Information Technology”.","Upon successful completion of the module, students will master advanced implementation techniques to optimize state-of-the-art cryptographic algorithms for embedded systems. Additionally, students will be able to implement advanced countermeasures to secure cryptographic implementations against implementation attacks such as side-channel and fault attacks.","This module introduces methods and techniques to securely and efficiently implement state-of-the-art cryptographic algorithms on embedded systems, including countermeasures against physical attacks such as side-channel and fault attacks.
The module is organized into the following thematic blocks: 
• Secure implementation of symmetric cryptographic algorithms, e.g., AES-GCM and ChaCha20-Poly1305.
• Efficient implementation of asymmetric cryptographic algorithms incl. post-quantum cryptography, e.g., Kyber and Dilithium.
• Special topics: Discussion of current research results.

As part of the thematic blocks, students will be required to implement cryptographic algorithms and prepare presentations on current research work as homework assignments.This module introduces methods and techniques to securely and efficiently implement state-of-the-art cryptographic algorithms on embedded systems, including countermeasures against physical attacks such as side-channel and fault attacks.
The module is organized into the following thematic blocks: 
• Secure implementation of symmetric cryptographic algorithms, e.g., AES-GCM and ChaCha20-Poly1305.
• Efficient implementation of asymmetric cryptographic algorithms incl. post-quantum cryptography, e.g., Kyber and Dilithium.
• Special topics: Discussion of current research results.

As part of the thematic blocks, students will be required to implement cryptographic algorithms and prepare presentations on current research work as homework assignments.","The module is offered as lectures using slides and notes on the blackboard. In the lectures, the contents will be provided in a talk with practical examples and demonstrations, as well as through discussion with the students. In each lecture, further literature will be suggested to motivate students to deepen their understanding of the methods and concepts presented in the lecture. 
During the exercise sessions students will be invited to present current research results assigned as homework during the course. Discussions will be held to consolidate the shared understanding to the class.","Presentation slides, blackboard, and research papers.","The following textbooks are recommended:
1.	Cetin Kaya Koc, Cryptographic Engineering, Springer Verlag, 2009 2. 
2.	Joseph Yiu, The Definitive Guide to ARM® Cortex®-M3 and Cortex®-M4 Processors. 2013
3.	Stefan Mangard, Elisabeth Oswald, Thomas Popp: Power Analysis Attacks Revealing the Secrets of Smart Cards, Springer Verlag, 2007
Further readings will be suggested during the course.",205,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1808723/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT333000,Applied Cryptography for Decentralized Systems (ACDS),5.0,-,from Winter semester 2024/25,"Carle, Georg",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"A written examination is performed in the form of a 75-minute exam. Questions of comprehension and arithmetic tasks check the familiarity with the technologies and methods of cryptographic primitives, protocols, and zero-knowledge proof systems for decentralized systems, and confidential computing principles covered in the module.",No,Yes,"- Introduction to Computer Networking and Distributed Systems 
(IN0010) 
- IT Security (IN0042) or Network Security (IN2101)","After participating in the module, students can describe the goals and properties and internals of cryptography of selected decentralized systems and blockchain systems. They can describe the concepts of zero-knowledge-proof constructions and their application in decentralized systems. They will be able apply advanced security concepts such as threshold cryptography and trusted execution environments in a correct manner to solve security problems. They are able to assess performance properties of different cryptographic concepts for decentralized systems, and to develop solutions based on the methods and concepts they have learned.","Cryptographic Proof Basics 
• Hash Functions, Commitment Schemes, ZKP Basics 
• Sigma Protocols 
• SNARK Constructions 
 
Polynomials in Cryptography (Secret Sharing, Polynomial 
Commitments) 
• Arithmetization 
• PlonK 
 
SNARK Applications 
• Circuit programming 
• zkVMs 
 
Trusted Execution Environments 
• Process and VM based solutions 
• Building blocks, Performance and use-cases 
 
Secure Multiparty Computation 
• Oblivious Transfer, Garbled Circuits 
• Beaver Triples, BGW and GMW protocolsCryptographic Proof Basics 
• Hash Functions, Commitment Schemes, ZKP Basics 
• Sigma Protocols 
• SNARK Constructions 
 
Polynomials in Cryptography (Secret Sharing, Polynomial 
Commitments) 
• Arithmetization 
• PlonK 
 
SNARK Applications 
• Circuit programming 
• zkVMs 
 
Trusted Execution Environments 
• Process and VM based solutions 
• Building blocks, Performance and use-cases 
 
Secure Multiparty Computation 
• Oblivious Transfer, Garbled Circuits 
• Beaver Triples, BGW and GMW protocols","Lecture for content transfer, as well as tasks for self-study in order to deepen the subject, as well as programming challenges to test and apply the learned knowledge.","Lecture slides, whiteboard, exercise sheets, demos","- A Graduate Course in Applied Cryptography,  
By Dan Boneh and Victor Shoup 
- As many topics are relatively new, additional information  
on recent reading material will be provided in the course",206,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4112127/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3470,Selected Topics in Security and Privacy,5.0,-,Always,-,Department of Computer Engineering,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,207,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498142/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI70520,Circuit Design for Security,5.0,-,from Summer semester 2020,"Pehl, Christian",Department of Computer Engineering,-,Master,CDS,-,one semester,summer semester,English,-,150.0,75.0,75.0,"The knowledge and the theoretical understanding of
- Essential elements of digital circuits such as state machines, FIFOs, LFSRs, adders and multipliers,
- Typical problems of circuit design such as clock domain crossing, the choice of synchronous and asynchronous reset, or the testability of circuits,
- The usage scenarios of multipliers and LFSRs in the security context, 

and the skills 
- For the selection of solutions to typical problems of circuit design, in particular in the security context, and
- To identify the advantages and disadvantages of the discussed multiplier and LFSR concepts

will be examined in the form of open and closed questions in a written test (60 minutes). The questions are to be answered as a short text or in bullet points without the use of aids. To answer the questions calculations may be necessary.

The practical skills of
- being able to independently implement essential elements of digital circuits,
- to synthesize circuits, and
- to simulate circutis on different levels of abstraction,

is demonstrated by solving 3-5 implementation tasks. Successful completion of the tasks results in a grade bonus of  0.3 to the final grade. The tasks are a voluntary mid-term achievement.",Yes,No,"Basic knowledge in VHDL
Basic knowledge of IT security as taught,e.g., in the lectures Grundlagen der IT-Sicherheit and Angewandte Kryptographie","After successful completion of the module, students have the following qualifications:
- They know essential elements of digital circuits such as state machines, FIFOs, LFSRs and multipliers and can implement them independently.
- They know typical circuit design issues such as clock domain crossing, the choice of synchronous and asynchronous reset or the testability of circuits and can choose suitable solutions.
- They know application scenarios of multipliers and LFSRs in the security context, can understand the theoretical foundations of the concepts discussed, and can name the advantages and disadvantages of these.
- They are able to describe digital circuits in VHDL and perform initial synthesis steps.","In this module, the development of digital circuits in the security context is examined starting from basic circuits. First of all, the knowledge of implementing state machines will be refreshed and extended. The implementation of important components of digital circuit design such as FIFOs and LFSRs is introduced. The implementation of pseudo-random number generators based on LFSRs and their application in the security context will be discussed. The implementation of multipliers is essential in many cryptographic applications. For this purpose, fundamental implementations as well as special variants for modulo-multiplication are discussed in the module. Also, concepts are discussed to test cryptographic circuits appropriately; Implementation strategies are introduced to optimize circuits in terms of area, power consumption, and performance.
In addition to the theoretical teaching of the content in lectures, the practical relevance is clarified in exercises and in a lab course. The students also learn to implement and synthesize digital circuits with a commercial design tool.In this module, the development of digital circuits in the security context is examined starting from basic circuits. First of all, the knowledge of implementing state machines will be refreshed and extended. The implementation of important components of digital circuit design such as FIFOs and LFSRs is introduced. The implementation of pseudo-random number generators based on LFSRs and their application in the security context will be discussed. The implementation of multipliers is essential in many cryptographic applications. For this purpose, fundamental implementations as well as special variants for modulo-multiplication are discussed in the module. Also, concepts are discussed to test cryptographic circuits appropriately; Implementation strategies are introduced to optimize circuits in terms of area, power consumption, and performance.
In addition to the theoretical teaching of the content in lectures, the practical relevance is clarified in exercises and in a lab course. The students also learn to implement and synthesize digital circuits with a commercial design tool.","Lecture and exercise content is provided through slides and blackboard. The learning process of students is supported in the exercises by interactively solving tasks, group work and program demonstrations of the advisor which show implementation tasks and security scenarios. Programming exercises during the semester give students the opportunity to practice and to demonstrate their skills in implementing and synthesizing digital circuits in a security context using a commercial design tool.","In lecture and exercise, slides, blackboard, example code and interactive online tools, e.g. Question Catalogs, are used. The offer is complemented by a forum on Moodle, where teachers answer questions about the content and the lab course tasks.","Niklaus Wirth; Digital Circuit Design for Computer Science Students - An Introductory Textbook; Springer; 1995 ISBN 978-3-540-58577-0

Further literature recommendations will be provided at the beginning of each semester through the Moodle course.",208,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1744305/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330015,Coding for Private Reliable and Efficient Distributed Learning,5.0,-,from Winter semester 2023/24,Wachter,Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The students would be assessed through a semester-long group-project consisting of three students, and a written exam. The project is divided into three phases: In phase 1, the students choose a paper from a collection of suggested papers, read it and choose one of them (""student A"") to present it. The duration of the presentation is expected to be between 15 to 25 minutes depending on the number of groups. In phase 2, the students implement (in a programming language of their choice) the algorithm introduced in the chosen paper. ""Student B"" explains their observations in a poster, while the other two roam around and ask about the posters of others. The poster should be of size A0. In phase 3, the students write a report about their own project summarizing their findings and summarizing the findings of two projects of their peers. ""Student C"" drives the report-writing phase. The report should consist of 5 to 10 pages. A summary on good practices in writing and structuring a report and a poster will be given during the semester.

For fairness and to encourage all students to collaborate and give their best, the project grading is divided as follows: The grade of student A is equal to 0.5*(group grade for presentation) + 0.25*(group grade for poster) + 0.25*(group grade for re the report). Students B and C are graded in a similar fashion with the highest weight corresponding to their main task.

In case the total number of students is not a multiple of three, groups of 4 students will be formed. Phase 1 for those groups will consist of reading two papers. The additional student presents the second paper. The grading will be of the form 0.4*(group grade for first presentation) + 0.2*(group grade for second presentation) + 0.2*(group grade for poster) + 0.2*(group grade for re the report). The 0.4 corresponds to the main task of the student.

The written exam (duration 60 mins) will consist of problems covering the topics explained by the lecturer in class.
The final grade for each student is equal to 2/3*(project grade) + 1/3*(exam grade).

Exam retake is only allowed for the written exam. To make up for the project, students should participate in the whole project phase again next semester.",Yes,No,"Basic knowledge of mathematics, e.g., linear algebra, calculus and probability theory
Basic knowledge of a programming language, e.g., MATLAB or python
The course ""Channel Coding"" is recommended","At the end of this course, the students are able to:
- Identify the challenges of modern distributed computing systems and tackle them using coding theory
- Analyze and assess the privacy and the performance guarantees of coding theoretic methods applied to distributed computing
- Manipulate the fundamental secret sharing tool and be able to apply it in several applications to private distributed systems
- Understand the basics of machine learning algorithms
- Implement through programming languages algorithms explained in a research paper, produce their own observations and analyze their findings
- Prepare and present a poster (or a paper) within the standards of international conferences/workshop","This course covers the coding-theoretic tools behind speeding up distributed computing. In addition, data privacy being of crucial importance, this course includes a deep understanding of the main tool behind information-theoretic privacy: secret sharing. Several applications of secret sharing and coding theoretic tools in modern distributed systems and distributed machine learning are then explained together with the impact brought by applying those tools.

More precisely, the course covers the following topics
- Coding to ensure information-theoretic privacy through secret sharing.
- Communication efficient secret sharing: a modification of secret sharing to better suit modern distributed systems
- Basic probability theory such as ordered statistics used to analyze the performance of different techniques used in coding for distributed systems
- Coding for private and fast distributed matrix multiplication, based on secret sharing schemes. Several state-of-the-art techniques will be explained in detail and their performance will be analyzed
- Basics of machine learning algorithms: gradient descent, stochastic gradient descent, linear and logistic regression
- Fast distributed gradient descent with and without coding theoryThis course covers the coding-theoretic tools behind speeding up distributed computing. In addition, data privacy being of crucial importance, this course includes a deep understanding of the main tool behind information-theoretic privacy: secret sharing. Several applications of secret sharing and coding theoretic tools in modern distributed systems and distributed machine learning are then explained together with the impact brought by applying those tools.

More precisely, the course covers the following topics
- Coding to ensure information-theoretic privacy through secret sharing.
- Communication efficient secret sharing: a modification of secret sharing to better suit modern distributed systems
- Basic probability theory such as ordered statistics used to analyze the performance of different techniques used in coding for distributed systems
- Coding for private and fast distributed matrix multiplication, based on secret sharing schemes. Several state-of-the-art techniques will be explained in detail and their performance will be analyzed
- Basics of machine learning algorithms: gradient descent, stochastic gradient descent, linear and logistic regression
- Fast distributed gradient descent with and without coding theory","Lectures: The lecturer uses slides and the blackboard (or an iPad) to explain the fundamental theoretical concepts. Lectures are designed to be interactive and to encourage the students to ask questions and initiate discussions with the lecturer and each other.

Tutorials: The lecturer, or teaching assistants, solve concrete problems to simplify the understanding of the theoretical content and help the students better understand the material.

Students’ presentations: Each group of three students nominates one of them to present a paper of their choice. The paper is recent research on topics discussed in class. (Groups of four students nominate two students, each presents a paper)

Poster session: A workshop-style session in which each group of three students nominate one of them to present a poster. The others would go around and ask questions about other posters. This session is designed to introduce the students to environments of international scientific events.

Throughout the semester, the students can ask for question-and-answer sessions and/or lab sessions in which the lecturers and teaching assistants come to answer the students' questions about the topics discussed in class. In lab sessions, the teaching assistants provide help to further their progress in the programming tasks.",-,"A collection of papers will be given to the students for further reading.

All slides and notes written in class will be passed to students.",209,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3539143/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2341,Current Trends in IT Security,5.0,-,Always,"Eckert, Claudia",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,The assessment is realized by means of a written exam of 75 minutes. In the written examination students demonstrate their theoretical knowledge of the security concepts that have been presented and discussed in the classroom by answering questions under time pressure and without helping material.,No,Yes,IN0009 Basic Principles: Operating Systems and System Software,"Upon completion of the module, the students will be able to understand and analyse the basic concepts and techniques used by adversaries and defenders.","IT Security is an important field of computer science in the Internet-driven era. It refers to the process of implementing systems and measures that can protect and secure information. However, IT Security evolves over the years as new attacks introduced that require new defense strategies. Therefore, the topics of the lecture cover among the others:
-- Network security
-- Web security
-- Privacy
-- Malware
-- Underground economy
-- Internet of Things (IoT) securityIT Security is an important field of computer science in the Internet-driven era. It refers to the process of implementing systems and measures that can protect and secure information. However, IT Security evolves over the years as new attacks introduced that require new defense strategies. Therefore, the topics of the lecture cover among the others:
-- Network security
-- Web security
-- Privacy
-- Malware
-- Underground economy
-- Internet of Things (IoT) security","By means of a presentation, the lecture presents the current research in the field of IT Security. Practical exercises help to deepen this knowledge.",Slide show,Papers published in conferences and journals,210,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1264715/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI70530,Embedded Systems and Security,5.0,-,from Summer semester 2020until Winter semester 2024/25,"Sigl, Georg",Department of Computer Engineering,-,Master,ESS,-,one semester,winter/summer semester,German/English,-,150.0,75.0,75.0,"The acquisition of the theoretical knowledge which is required to explain
- memory organization,
- memory mapped I/O,
- the purpose of discussed peripherals,
- interrupts,
- methods for separation,
- MMUs/MPUs,
- side channels,
- the concept of trusted computing,
to name
- the discussed peripherals,
- examples for typical vulnerabilities,
- security objectives,
and to
- classify types of on-chip memory,
- recall the boot process of a uC,
- compare methods for embedded debugging,
- choose appropriate countermeasures,
- discuss common attacks
is examined by open and closed questions in a written exam (90 min). The questions must be answered without aids by noting down key points or brief running text. The questions partly refer to given exemplary code. Calculations can be necessary for answering the questions. The grade for this part of the exam contributes to the grade of the module with 80%.

The practical capabilities to use
- tool chains for embedded development,
- memory mapped I/O,
- interrupts
- methods for embedded debugging
- cryptography
and to apply some common attacks is examined in form of 3 to 5 programming tasks. The grade for this part of the exam contributes to the grade of the module with 20%.",Yes,No,"C programming
Basic knowledge in computer architectures","The students are able to design a secure embedded system. In particular, to implement given tasks on an embedded system and to assess and choose appropriate measures to secure an embedded system. The former includes being able to
- Use tool chains for embedded development
- Discuss memory organization
- Classify types of on-chip memory
- Recall the boot process of a uC
- Describe and use memory mapped I/O
- List common peripherals and explain their purpose
- Explain and use interrupts
- Compare and use methods for embedded debugging

while the latter encompasses the ability to
- List security objectives
- Exemplify typical vulnerabilities
- Apply some common attacks
- Choose appropriate countermeasures
- Use cryptography
- Illustrate methods for separation
- Explain and use MMUs/MPUs
- Explain side channels
- Demonstrate the concept of trusted computing","- Introduction to micro controllers, differences to desktop computers
- Memory in embedded systems and its usage by C compilers
- Typical peripherals and their usage
- Interrupts and exceptions
- Embedded debugging

- Short introduction to security objective and cryptographic operations
- Typical vulnerabilities in embedded systems
- Common attacks and countermeasures
- A note on side-channels
- Concepts of separation and trusted computing- Introduction to micro controllers, differences to desktop computers
- Memory in embedded systems and its usage by C compilers
- Typical peripherals and their usage
- Interrupts and exceptions
- Embedded debugging

- Short introduction to security objective and cryptographic operations
- Typical vulnerabilities in embedded systems
- Common attacks and countermeasures
- A note on side-channels
- Concepts of separation and trusted computing","Knowledge will be taught using slides and notes on the blackboard. Learning by students is supported within the exercises through interactive problem discussion, group work and live programming of the tutor for exemplary security scenarios. Programming exercises regarding the implementation of security measures during the semester give students the opportunity to train and show their skills on real hardware, e.g. an ARM-plattform.

Language of instruction, English in Winter Semester and German in Summer Semester.","Lecture as well as exercise sessions employ slides, working on the blackboard, and interactive online tools, e.g., questionnaires and etherpads. An additional Moodle forum, where teaching staff answers questions regarding content and programming exercises, complements the offer.","The definitive guide to ARM Cortex-M3 and Cortex-M4 processors
Joseph Yiu

Understanding Cryptography
Christoph Paar, Jan Pelzl
Accompanied lecture slides: http://www.crypto-textbook.com

Handbook of Applied Cryptography
Alfred J. Menezes, Paul C. van Oorschot, Scott A. Vanstone
Download from: http://www.cacr.math.uwaterloo.ca/hac/

Security Engineering
Ross Anderson
Download from: https://www.cl.cam.ac.uk/~rja14/book.html",211,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1743551/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT433040,Embedded Systems and Security,6.0,-,from Summer semester 2025,"Sigl, Georg",Chair of Security in Information Technology (Prof. Sigl),-,Master,ESS,-,one semester,winter/summer semester,German/English,-,180.0,90.0,90.0,"The examination consists of a written exam (90 minutes, 80% of the overall grade) and an exercise with programming tasks (20% of the overall grade). The two examination components test different learning outcomes: 

The acquisition of the theoretical knowledge which is required to explain
- memory organization,
- memory mapped I/O,
- the purpose of discussed peripherals,
- interrupts,
- methods for separation,
- MMUs/MPUs,
- side channels,
- the concept of trusted computing, to name
- the discussed peripherals,
- examples for typical vulnerabilities,
- security objectives,
and to
- classify types of on-chip memory,
- recall the boot process of a uC,
- compare methods for embedded debugging,
- choose appropriate countermeasures,
- discuss common attacks
is examined by open and closed questions in a written exam (90 min). The questions must be answered without aids by noting down key points or brief running text. The questions partly refer to given exemplary code. Calculations can be necessary for answering the questions. The grade for this part of the exam contributes to the grade of the module with 80%.

The practical capabilities to use
- tool chains for embedded development,
- memory mapped I/O,
- interrupts
- methods for embedded debugging
- cryptography
and to apply some common attacks is examined in form of 3 to 5 programming tasks. The grade for this part of the exam contributes to the grade of the module with 20%.",Yes,No,"C programming
Basic knowledge in computer architectures","The students are able to design a secure embedded system. In particular, to implement given tasks on an embedded system and to assess and choose appropriate measures to secure an embedded system. The former includes being able to
- Use tool chains for embedded development
- Discuss memory organization
- Classify types of on-chip memory
- Recall the boot process of a uC
- Describe and use memory mapped I/O
- List common peripherals and explain their purpose
- Explain and use interrupts
- Compare and use methods for embedded debugging

while the latter encompasses the ability to
- List security objectives
- Exemplify typical vulnerabilities
- Apply some common attacks
- Choose appropriate countermeasures
- Use cryptography
- Illustrate methods for separation
- Explain and use MMUs/MPUs
- Explain side channels
- Demonstrate the concept of trusted computing","- Introduction to micro controllers, differences to desktop computers
- Memory in embedded systems and its usage by C compilers
- Typical peripherals and their usage
- Interrupts and exceptions
- Embedded debugging

- Short introduction to security objective and cryptographic operations
- Typical vulnerabilities in embedded systems
- Common attacks and countermeasures
- A note on side-channels
- Concepts of separation and trusted computing- Introduction to micro controllers, differences to desktop computers
- Memory in embedded systems and its usage by C compilers
- Typical peripherals and their usage
- Interrupts and exceptions
- Embedded debugging

- Short introduction to security objective and cryptographic operations
- Typical vulnerabilities in embedded systems
- Common attacks and countermeasures
- A note on side-channels
- Concepts of separation and trusted computing","Knowledge will be taught using slides and notes on the blackboard. Learning by students is supported within the exercises through interactive problem discussion, group work and live programming of the tutor for exemplary security scenarios. Programming exercises regarding the implementation of security measures during the semester give students the opportunity to train and show their skills on real hardware, e.g. an ARM-plattform.

Language of instruction: English in Winter Semester and German in Summer Semester.","Lecture as well as exercise sessions employ slides, working on the blackboard, and interactive online tools, e.g., questionnaires and etherpads. An additional Moodle forum, where teaching staff answers questions regarding content and programming exercises, complements the offer.","The definitive guide to ARM Cortex-M3 and Cortex-M4 processors
Joseph Yiu

Understanding Cryptography
Christoph Paar, Jan Pelzl
Accompanied lecture slides: http://www.crypto-textbook.com

Handbook of Applied Cryptography
Alfred J. Menezes, Paul C. van Oorschot, Scott A. Vanstone
Download from: http://www.cacr.math.uwaterloo.ca/hac/

Security Engineering
Ross Anderson
Download from: https://www.cl.cam.ac.uk/~rja14/book.html",212,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4389126/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2407,Hardware Security,5.0,-,from Summer semester 2022,"Eckert, Claudia",Department of Computer Engineering,-,Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,"The examination is performed in the form of a 75-minute exam. Knowledge questions test the familiarity with basic concepts and methodical procedures of hardware security for securing components and systems, as well as the familiarity with basic algorithms. Smaller tasks assess the ability to show the effects of attacks and name countermeasures. Furthermore, the knowledge to apply security concepts in a targeted and correct manner is assessed.",No,Yes,"Introduction to Computer Organization and Technology - Computer Architecture (IN0004)
Microprocessors (IN2075)
IT Security (IN2209)","After successful participation in this module, participants understand the basic concepts, methods and architectures for protecting embedded systems from manipulation and physical attacks at a fundamental, practice-oriented, scientific level. They understand the causes of vulnerabilities in current embedded systems, as well as logical and physical methods for exploiting these vulnerabilities. Furthermore, they can reproduce the relationships between protection mechanisms and the problems they address and apply them to case studies.","Basics of hardware security
Architecture of secure embedded systems
Security concepts for microcontrollers and processors
Physical attacks on embedded systems and countermeasures
Components for secure embedded systems (e.g. PUF, TRNG)
Presentation and discussion of practical examples in the exerciseBasics of hardware security
Architecture of secure embedded systems
Security concepts for microcontrollers and processors
Physical attacks on embedded systems and countermeasures
Components for secure embedded systems (e.g. PUF, TRNG)
Presentation and discussion of practical examples in the exercise",Lecture supplemented by exercises to deepen the understanding of conceptual and technical issues by means of concrete tasks and practical case studies.,Slides,"Hardware Security : A Hands-On Learning Approach, S Bhunia, M. Tehranipoor, Elsevier, 2018
Power Analysis Attacks: Revealing the Secrets of Smart Cards, S. Mangard, E. Oswald, Th. Popp, Springer, 2007",213,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3106362/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI73451,Information Theoretic Security,5.0,-,from Winter semester 2017/18,"Boche, Holger",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,German,-,150.0,75.0,75.0,-,Yes,No,-,-,--,-,-,-,214,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1366633/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330009,IoT Security,5.0,-,from Summer semester 2023,"Steinhorst, Sebastian",Department of Computer Engineering,-,Master,IOTSEC,-,one semester,winter/summer semester,English,-,150.0,60.0,90.0,"The intended learning outcomes are assessed in a written exam at the end of the semester (60% of the final grade). Additionally, two assignments  (in the form of  Capture The Flag (CTF) competitions) are evaluated and contribute 20% each to the final grade. The first CTF is mainly about cryptography challenges while the second one is about attacking IoT devices. For each CTF, the teams' members need to collect flags to gain points. The students need to apply their gained knowledge to solve different challenges. Each challenge will reveal a flag once it was solved that the students can submit to prove their successful work and gain the predefined points for that challenge. The team that will collect the highest number of points during the limited time of the CTF will gain the competition. The duration of every CTF will be two weeks. The goal of the CTF is to assess the capability of the student to perfom cyber secrurity attacks practically. Such knowldge will not be possible to  be assessed via the written exam. On the other hand, the writen exam (90 minutes) will focus on the theoritical part of the security attacks and vulnerabilities. 

Criteria for assessment include:
The ability to explain the basic security terms and attacks against the different layers of the IoT stack (assessed via a written exam).
- Perform basic penetration testing on IoT applications and protocols (assessed via CTFs).
- Demonstrate the ability to define and implement security mitigation mechanisms against various attacks (assessed through CTFs and an exam).",Yes,No,"Must: good programming skills.
Preferable: basic knowledge of computer networking.","Upon successful completion of the module, students are able to:
- Explain the basic concepts of IoT (computer) security and the most common threats that threaten the modern IoT systems.
- Plan and execute pen testing for IoT systems.
- Choose, design and implement some protection techniques to secure IoT systems.","This course focuses on the security aspects within the IoT protocol stack (i.e., data, application, and network). The course starts by looking at the IoT stack and discussing the most common IoT applications and some recent attacks against those applications. The course discusses some of the famous crypto algorithms applied to secure the (exchanged) data. Students shall implement some of these algorithms and try some techniques to break them (if possible). The course also introduces some of the authentication protocols that shall be adopted to solve some security issues in modern IoT applications. Students must implement these protocols and, later, try to break them. Attacks such as DoS and MITM are discussed in detail during the course. The students need to perform such attacks using existing tools (e.g., using Kali Linux tools) or writing their own tools. The course investigates the SSL protocol as an excellent example of securing IoT communication. Students need to integrate this protocol to ensure secure communication between smart devices. Finally, the course discusses some of the IoT software vulnerabilities and attacks which exploit these security weaknesses and how to harden the system.This course focuses on the security aspects within the IoT protocol stack (i.e., data, application, and network). The course starts by looking at the IoT stack and discussing the most common IoT applications and some recent attacks against those applications. The course discusses some of the famous crypto algorithms applied to secure the (exchanged) data. Students shall implement some of these algorithms and try some techniques to break them (if possible). The course also introduces some of the authentication protocols that shall be adopted to solve some security issues in modern IoT applications. Students must implement these protocols and, later, try to break them. Attacks such as DoS and MITM are discussed in detail during the course. The students need to perform such attacks using existing tools (e.g., using Kali Linux tools) or writing their own tools. The course investigates the SSL protocol as an excellent example of securing IoT communication. Students need to integrate this protocol to ensure secure communication between smart devices. Finally, the course discusses some of the IoT software vulnerabilities and attacks which exploit these security weaknesses and how to harden the system.",The content will be taught using slides. Tutorials will be given to the students to exercise what they learned in the lectures and help them solve the assignments.,"The following media are used:
- Presentations (Projector, Blackboard)
- E-learning platform Moodle","Book: Bruce Schneier, Applied Cryptography Protocols, Algorithms, and Source Code in C.
- Ziegler, Sébastien, ed. Internet of Things Security and Data Protection. Springer International Publishing, 2019.
• Dhanjani, Nitesh. Abusing the internet of things: blackouts, freakouts, and stakeouts. "" O'Reilly Media, Inc."", 2015.",215,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3395263/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3330002,IT Security 2,5.0,-,from Summer semester 2023,"Eckert, Claudia",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,"The examination is performed in the form of a 90-minute exam. The exam questions test whether the candidate has acquired a subset of the skills in the list below.

List of Skills: The student
- masters basic and advanced concepts and techniques to secure systems and individual artifacts,
- can apply learned techniques correctly,
- is able to identify security problems using concrete examples,
- knows the advantages and disadvantages of the most important classical and advanced security concepts.",No,Yes,"IN0042 	IT Security, IN0010 Introduction to Computer Networking and Distributed Systems, IN0009 Basic Principles: Operating Systems and System Software","After participating in the module, students are able to evaluate complex security solutions. They are able to analyze the security level of applications. They will be able apply basic and advanced security concepts in a correct manner to solve security problems. They understand the causes of security problems in networks but also in mobile and embedded systems. They master the most important concepts for their protection and can also apply advanced approaches. They are able to identify possible security weaknesses in designs or protocols and to develop solutions based on the methods and concepts they have learned.","The module treats selected types in depth and discusses special topics of IT security. Current concepts and solutions in the field of digital identity, such as smart cards, physically unclonable functions (PUF), SSI and token-based authentication in distributed systems are dealt with in depth. In the area of application security, selected issues such as the security of Instant Messenger services are discussed. In the area of system security, the module is dedicated to advanced concepts such as Trusted Computing, Trusted Execution Environments and Confidential Computing.  It also discusses selected aspects of hardware-security. The module deals with the current and developing state of the security of wireless and mobile communication architectures (e.g. 5G) and with concepts for ad-hoc security in networked IoT devices (e.g. BluetoothLE). The module will also give an insight into the methodological development and evaluation of secure systems (security engineering).The module treats selected types in depth and discusses special topics of IT security. Current concepts and solutions in the field of digital identity, such as smart cards, physically unclonable functions (PUF), SSI and token-based authentication in distributed systems are dealt with in depth. In the area of application security, selected issues such as the security of Instant Messenger services are discussed. In the area of system security, the module is dedicated to advanced concepts such as Trusted Computing, Trusted Execution Environments and Confidential Computing.  It also discusses selected aspects of hardware-security. The module deals with the current and developing state of the security of wireless and mobile communication architectures (e.g. 5G) and with concepts for ad-hoc security in networked IoT devices (e.g. BluetoothLE). The module will also give an insight into the methodological development and evaluation of secure systems (security engineering).","The module consists of a lecture and an accompanying exercise. In the lecture, the teaching content is conveyed and the students are encouraged to study the literature and to deal with the content of the topics. In the exercises, concrete questions are discussed and examples are worked on, in groups. With 6-8 exercise sheets, the students are guided to work through the topics of the lecture and to deepen the material of the lecture using concrete tasks.",Slides,"- IT-Sicherheit: Konzepte, Verfahren, Protokolle, Claudia Eckert, 11. Auflage, De Gruyter, 2023. (in german)
- William Stallings, Lawrie Brown: Computer Security: Principles and Practice, 2018
- Understanding Cryptography, C. Paar und J. Pelzl, Springer",216,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3470518/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3330003,Cryptography,5.0,-,from Summer semester 2023,"Eckert, Claudia",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,"The examination takes the form of a 90-minute written test. The exam questions test whether the candidate has acquired a subset of the skills in the list below

List of Skills: The student
- masters the most important modern cryptographic schemes and describes basic elements (e.g. AES, ChaCha, RSA, AEAD, rCTR, NMAC, CBC-MAC, ENC-THEN-MAC, OAEP, FDH, PSS, DH, Elgamal, hybrid encryption) and how they work and explain the mathematical basis;
- understands the functionality and starting points of attacks on cryptographic processes and is able to explain which properties a secure cryptographic system must have;
- understands the need for (pseudo-)randomization in cryptography and the difference between randomness and pseudo-randomness;
- can explain the assumptions underlying public key cryptography;
- can use the definitions to decide whether a simple cryptographic scheme is secure or not;
- can create provably secure cryptographic schemes based on these constructions and primitives;
- can describe and apply the algebraic and number-theoretic fundamentals of RSA and DLP-based cryptography;
- can explain the basic advantages and disadvantages of elliptic curves in DLP-based cryptography.",No,No,"IN0011 Introduction to Theoretical Informatics, IN0015 Discrete Structures, IN0018 Discrete Probability Theory, IN0042 IT Security","After participating in the module, the student is able to
- recognize the basic primitives of symmetric and asymmetric cryptography,
- understand the theoretical foundations of these primitives,
- analyze cryptographic methods based on it,
- understand the most important security definitions.","- Theoretical basics:
++ Security definitions: perfect secrecy, computational security (IND-CPA,IND-CCA,IND-CCA2), semantic security
++ Cryptographic primitives and pseudo-random: pseudo-random number generator (PRG), -functions (PRF) and -permutations (PRP), one-way functions (OWF) and -permutations (OWP) (with trapdoor (TDP)), cryptographic hash functions, tweakable blockcipher (TBC)
++ Basics of group and number theory, elliptic curves
- Symmetric cryptography:
++ Block ciphers: AES, DES and stream ciphers: ChaCha
++ Construction of encryption methods based on block ciphers.
++ Construction of message authentication code: CBC-MAC, NMAC, HMAC
- Asymmetric cryptography:
++ The RSA problem and the encryption and signature methods derived from it: RSA-OAEP, RSA-FDH, RSA-PSS
++ The discrete logarithm and methods derived from it: Diffie-Hellman protocol, El Gamal, DH-KEM, DSA- Theoretical basics:
++ Security definitions: perfect secrecy, computational security (IND-CPA,IND-CCA,IND-CCA2), semantic security
++ Cryptographic primitives and pseudo-random: pseudo-random number generator (PRG), -functions (PRF) and -permutations (PRP), one-way functions (OWF) and -permutations (OWP) (with trapdoor (TDP)), cryptographic hash functions, tweakable blockcipher (TBC)
++ Basics of group and number theory, elliptic curves
- Symmetric cryptography:
++ Block ciphers: AES, DES and stream ciphers: ChaCha
++ Construction of encryption methods based on block ciphers.
++ Construction of message authentication code: CBC-MAC, NMAC, HMAC
- Asymmetric cryptography:
++ The RSA problem and the encryption and signature methods derived from it: RSA-OAEP, RSA-FDH, RSA-PSS
++ The discrete logarithm and methods derived from it: Diffie-Hellman protocol, El Gamal, DH-KEM, DSA","The module consists of a lecture and an accompanying exercise. In the lecture, the teaching content is conveyed and the students are encouraged to study the literature and to deal with the content of the topics. In the exercises, concrete questions are discussed and examples are worked on, sometimes in groups.",Slides and black/whiteboard,"- A Graduate Course in Applied Cryptography, Dan Boneh, Victor Shoup, http://toc.cryptobook.us/
- Introduction to modern cryptography, J. Katz, Y. Lindell, Chapman&Hall/CRC, 2007
- Lecture Notes on Cryptography, S. Goldwasser, M. Bellare, online version
- Elliptic Curves: Number Theory and Cryptography, Lawrence C. Washington, Chapman&Hall/CRC, 2nd edition, 2003
- Handbook of Applied Cryptography, Alfred J. Menezes, Paul C. van Oorschot and Scott A. Vanstone, CRC Press, 1996",217,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3494362/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2161,Networks for Monetary Transactions,3.0,-,Always,"Baumgarten, Uwe",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,The exam takes the form of a 60 minutes written test. In the written exam students should prove to be able to identify a given problem and find solutions within limited time.,No,Yes,-,"Verstehen und Einschätzen der Grundlagen, Architektur und Sicherheit von Netzwerken für den nationalen und internationalen Zahlungsverkehr sowie deren rechtliche Rahmenbedingungen","Systemarchitektur (Hardware, Software)
Protokollschichten und Protokolle (eg. ISO 8583)
Sicherheitsarchitekturen und Sicherheitsstandards
Authorisierungslösungen und Signaturen
Arten von Attacken
Mobile Architekturen und deren Sicherheitskonzepte (OTA Services)
AnwendungenSystemarchitektur (Hardware, Software)
Protokollschichten und Protokolle (eg. ISO 8583)
Sicherheitsarchitekturen und Sicherheitsstandards
Authorisierungslösungen und Signaturen
Arten von Attacken
Mobile Architekturen und deren Sicherheitskonzepte (OTA Services)
Anwendungen",Lecture,Slides,"Claudia Eckert, IT Sicherheit: Konzepte-Verfahren-Protokolle, Oldenburg 2007  Lienemann, TCP/IP-Praxis, Heise 2003  Lepschies, Ecommerce und Hackerschutz, Vieweg 2000  Rankl, Effing Handbuch der Chipkarten, Hanserverlag 2002  Pohlmann ""Digitale Signatur für optimale Sicherheit"", HüŸthigverlag 1997  ZKA, Elektronisch cash im Umfeld von SEPA, 2006",218,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458249/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2194,Peer-to-Peer-Systems and Security,6.0,-,Always,"Carle, Georg",Department of Computer Engineering,ab SoSe 13 5 SWS und 6 Credits,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"Students will be evaluated based on their project in which they design and implement components of a peer-to-peer protocol or application. The outcome of the project allows to assess the competences of a student of understanding and explaining goals and properties of peer-to-peer systems, to utilize selected mechanisms and protocols of peer-to-peer networks in order to design system components with specific properties, and to implement such components. The project will be evaluated based on the implementation and tests (70%), the design and implementation of the P2P protocol (20%) and the different reports (10%).",No,Yes,"IN0010 Introduction to Computer Networking and Distributed Systems, Knowledge in computer networks and the ability to program in C or Java are expected.","At the end of the module the students can describe the goals and properties of peer-to-peer systems. They can recite the internals of selected systems. They can utilize the fundamental mechanisms and protocols of peer-to-peer networks, in particular for search of data and managing membership.
They can explain security goals of such networks and discuss concepts to provide security services. They can assess various mechanisms to provide anonymity and can compare selected anonymity systems.
Finally, they are able to apply this theoretical knowledge into the design and implementation of new protocols and applications, can explain their new design, predict its behavior and critially analyze its weaknesses.","The course covers the following topics:
- P2P applications, advantages and disadvantages of P2P systems
- common problems and operations in P2P systems
- routing in structured and unstructured overlay networks, in particular distributed hash tables
- network address translation and traversal
- decentralized network size estimation
- reputation systems
- common attacks on P2P protocols and defenses against them
- anonymity, protocols to create anonymity and attacks on anonymity

The various protocols are described in theory and practical implementations of those ideas are discussed (in particular Freenet, Bittorrent, Tor, JAP, GNUnet, I2P and Gnutella).  The course will also include a practical component focusing on the design and implementation of a new P2P protocol or application with design choices being discussed in classThe course covers the following topics:
- P2P applications, advantages and disadvantages of P2P systems
- common problems and operations in P2P systems
- routing in structured and unstructured overlay networks, in particular distributed hash tables
- network address translation and traversal
- decentralized network size estimation
- reputation systems
- common attacks on P2P protocols and defenses against them
- anonymity, protocols to create anonymity and attacks on anonymity

The various protocols are described in theory and practical implementations of those ideas are discussed (in particular Freenet, Bittorrent, Tor, JAP, GNUnet, I2P and Gnutella).  The course will also include a practical component focusing on the design and implementation of a new P2P protocol or application with design choices being discussed in class","Lecture for content transfer with accompanying weekly tutorial exercises, in which tasks are treated, as well as programming tasks for computer-aided deepening.","Slides, Whiteboard, Exercises","- Shen, Xuemin, et al., eds. Handbook of Peer-to-Peer Networking. Vol. 34. Springer Science & Business Media, 2010.
- Maymounkov, Petar, and David Mazieres. ""Kademlia: A Peer-to-Peer Information System based on the XOR Metric."" International Workshop on Peer-to-Peer Systems, 2002.
- Chaum, David L. ""Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms."" Communications of the ACM 24.2 (1981): 84-90.
- Syverson, Paul, Roger Dingledine, and Nick Mathewson. ""Tor: The Second Generation Onion Router."" Usenix Security. Berkeley, CA: USENIX Association, 2004.",219,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/487459/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI71029,Physical Unclonable Functions,5.0,-,from Summer semester 2018,"Sigl, Georg",Chair of Security in Information Technology (Prof. Sigl),-,Master,PUFs,-,one semester,winter semester,English,-,150.0,75.0,75.0,"The achievement of the learning objectives of the module is demonstrated in the form of a 60-minute written examination. Students demonstrate that they can name and explain concepts and applications for PUFs and TRNGs, including the post-processing of the raw data obtained from them. They demonstrate their knowledge of the PUF and TRNG structures discussed by creating and explaining schematic representations. By interpreting the results of methods for quality assessment of PUFs and TRNGs, explaining how these methods are used and where possible weaknesses of the methods lie, they demonstrate their understanding and ability to apply such methods and show that they can critically question the results of the assessment procedures. They demonstrate their knowledge and understanding of typical attack vectors on PUFs by naming and explaining them; by naming and discussing suitable countermeasures and explaining them in detail, students demonstrate their knowledge and ability to select suitable countermeasures.
If the number of participants is low, the examination can be converted into a 30-minute oral examination.

Practical Assignment: Students demonstrate that they are able to practically implement selected concepts for PUFs discussed in the lecture on an FPGA by means of the practical part of the course, which consists of three to four subtasks and represents a voluntary mid-term performance. A grade bonus of 0.3 is awarded for the successful completion of subtasks, which is voluntary in the style of a mid-term assignment.",Yes,No,"Prior knowledge of VHDL is required to complete the lab.

No special preknowledge is required for the lecture.","After successful completion of the module, students know the concepts of Physical Unclonable Functions and random number generators. They can apply and interpret metrics for quality evaluation of PUFs and random numbers. Students know and understand applications of PUFs. They can apply their knowledge on PUFs and random number generators and can use to implement basic PUF applications.","This lecture addresses concrete concepts to utilize randomness which is available in hardware for IT-security. In the first part of the lecture, Physical Unclonable Functions (PUFs) are considered. First, concepts of PUFs are presented on a circuit level and effects, which are used, are discussed. Next, metrics for quality evaluation of PUFs are taught and applications of PUFs are presented. Required components for applications of PUFs are discussed as well as attacks and countermeasures. In a second part of the lecture, true random number generators (TRNGs) and methods to analyze TRNGs are addressed.
In the lab part of the project, students implement on their own a module for en- and decryption of data on FPGA using a PUF. The goal is to implement key storage and random number generation on an FPGA where interface specification must be met. Modules for en- and decryption as well as for communication are provided.
The exercise part of the module is dedicated to practice the content of the lecture, on the one hand. On the other hand, it helps the students in transferring content from the lecture to the lab part and supports the lab part.This lecture addresses concrete concepts to utilize randomness which is available in hardware for IT-security. In the first part of the lecture, Physical Unclonable Functions (PUFs) are considered. First, concepts of PUFs are presented on a circuit level and effects, which are used, are discussed. Next, metrics for quality evaluation of PUFs are taught and applications of PUFs are presented. Required components for applications of PUFs are discussed as well as attacks and countermeasures. In a second part of the lecture, true random number generators (TRNGs) and methods to analyze TRNGs are addressed.
In the lab part of the project, students implement on their own a module for en- and decryption of data on FPGA using a PUF. The goal is to implement key storage and random number generation on an FPGA where interface specification must be met. Modules for en- and decryption as well as for communication are provided.
The exercise part of the module is dedicated to practice the content of the lecture, on the one hand. On the other hand, it helps the students in transferring content from the lecture to the lab part and supports the lab part.","Teacher-centered teaching is used in the lecture of this module to  provide knowledge regarding concepts of PUFs and RNGs, evaluation methods for PUFs, and application of PUFs. The understanding of these theoretical contents is advanced in an exercise where interactive teacher-centered teaching is used as a learning method. Furthermore, in the exercise, knowledge regarding the transfer from theory into practice is provided. 
Also, students learn important aspects of practical implementations of PUFs and RNGs in the laboratory part of the module. Theoretical background for the laboratory part is provided in the lecture. The knowledge on how to transfer theory into practice is teached in the exercise. Based on that, students have to find solutions for the realization of typical components of PUF applications on their own. The components which are to be implemented are specified. Literature resources as well as discussions with a supervisor can be used to solve the task.","- Lecture/Exercise: PowerPoint and blackboard presentation
- Lab: Brief instruction","The following literature is recommended:
- C. Böhm und M. Hofer, ""Physical Unclonable Functions in Theory and Practice"", Springer 2012
- M. Hiller, ""Key Derivation with Physical Unclonable Functions "", Dissertation, TUM 2016
- J. Delvaux, ""Security Analysis of PUF-Based Key Generation and Entity Authentication"", PhD Thesis, KU Leuven, 2017
- M. Pehl, ""Design, Evaluation, and Application of Security Primitives that are Based on Hardware-Intrinsic Features"", Cummulative Habilitation Thesis, TUM, 2024",220,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1439257/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI71073,Quantum Computers and Quantum Secure Communications,5.0,-,from Summer semester 2020,"Sigl, Georg",Department of Computer Engineering,-,Master,QSCom,Quantum Computers and Quantum Secure Communications,one semester,summer semester,English,-,150.0,60.0,90.0,"The evaluation is individual. The capabilities to: i) understand the main concepts for quantum computers and post-quantum cryptography; ii) be familiar with the quantum and post-quantum algorithms; and iii) understand the vulnerabilities of post-quantum cryptographic implementations are evaluated through a written exam (60 minutes) (oral examination if the number of students is low).

In addition, the capabilities to: i) evaluate the security and performance of Post-Quantum cryptographic implementations; and 5) apply security countermeasures to post-quantum cryptographic implementations are evaluated through practical exercises and a project task. Passing those exercises and project is rewarded with a bonus of 0.3 towards the final grade. The exercises are a voluntary mid-term performance.",No,Yes,"Good knowledge of Microcontroller programming, basics on security like it is taught in the lecture Embedded Systems and Security.","At the end of this module, students 1) are able to understand the basic concepts of quantum computers and post-quantum cryptography; 2) are familiar with quantum and post-quantum algorithms; 3) understand the vulnerabilities of post-quantum cryptography implementations; 4) can evaluate the security and performance of Post-Quantum cryptographic implementations; and 5) can apply security countermeasures to post-quantum cryptographic implementations.","The course is comprised of a lecture accompanied by exercises and a project part. 
The topics presented in the class are: 
1) Introductory lecture; 
2) Quantum computing and technologies; 
3) Quantum algorithms; 
4) Post-quantum algorithms general description; 
5) Post-quantum implementation and evaluation; 
6) Secure implementation.The course is comprised of a lecture accompanied by exercises and a project part. 
The topics presented in the class are: 
1) Introductory lecture; 
2) Quantum computing and technologies; 
3) Quantum algorithms; 
4) Post-quantum algorithms general description; 
5) Post-quantum implementation and evaluation; 
6) Secure implementation.","Individual support by the advisor, introductive lectures, examples and support for the seminar exercises are given. 
In addition, the following methods are used: i) Real use cases of the presented concepts; ii) invited talks from industry partners; iii) Videos; iv) in-class discussions and presentations; v) exercises and experience sharing.","board, slides and articles","Post-Quantum Cryptography. Daniel J. Bernstein, Johannes Buchmann, Erik Dahmen, 2009. Springer-Verlag Berlin Heidelberg.

Post-Quantum Cryptography: Code-Based Cryptography and Hash Based Signatures Schemes, Umaa, Valrie Gauthier, 2014, isbn 3639715500. Scholar’s Press.

NIST Post-Quantum Submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions",221,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1808722/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI75671,Lecture Series System Security,3.0,-,from Winter semester 2016/17,-,Department of Computer Engineering,ersetzt EI7567,Master,RISEC,Current Practical Problems and Solutions,one semester,winter semester,German,-,90.0,30.0,60.0,"In a written exam (60 min), students answer open questions regarding safety and security critical problems. This shows their understanding of central statements in different areas of system safety and security which were discussed in the course.",Yes,No,"Attending the module ""Grundlagen der IT-Sicherheit"" (or equvalent) can ease the understanding.","After successful completion of this module, students are able to understand fundamental problems of safety and security critical systems
and can reproduce current solutions to these problems.","In this lecture, different speakers from industry and research facilities give an overview of current problems and solutions for IT Security of systems and applications.In this lecture, different speakers from industry and research facilities give an overview of current problems and solutions for IT Security of systems and applications.",Lectures with practical demonstration,Presentation with slides,Current publications in the covered areas,222,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1235884/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2313,Secure Coding,6.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"The students will develop an application in five iterative programming/testing phases in groups, and will be asked individually about intermediate results. They will present and discuss vulnerabilities found and their respective fixes. Every student must present the partial results of the development project at least once. Groups must hand in their results in electronic form at the end of each phase. The outcome of each phase will be graded and will contribute to the final grade proportionally to its duration. Groups will document individual effort (in hours and percentage of contribution to final result) and this information, together with the presentations, will be taken into account for the final individual grades.

Retake: End of Semester , written examination 120-180 min.",No,Yes,Students should have sound programming skills and a general security background (for instance IN229 or IN2178 for security and IN1501 for programming).,"The participants acquire the ability to apply general principles on secure software development, independent of the programming language. They can perform basic Black-box and White-box vulnerability analyses for PHP, Java and C/C++. They learn how to develop in-depth defense strategies and best practices for PHP, C/C++ and Java.
They acquire basic reverse-engineering and software obfuscation skills. They acquire knowledge of software tools for vulnerability detection and code protection.
Finally, they learn how to adequately report testing and fixing outcomes.","In this lecture we focus on tools and guidelines for the development of secure software. The course will cover two main types of software: Web services (in PHP) and native applications (in C/C++ and Java). For these two categories, we will briefly recall the most exploited vulnerabilities (OWASP Top 10, memory errors, common logical vulnerabilities, errors using cryptography) and we will concentrate on best-practices to avoid them, as well as on tools that help developers to build security into their software, including automatic and semi-automatic security testing tools, syntactic analysis tools for source code, reverse engineering/obfuscation tools and code-reviewing. Parallel to the theoretical course, we will develop an actual application and analyse its security through five iterative development and testing phases.In this lecture we focus on tools and guidelines for the development of secure software. The course will cover two main types of software: Web services (in PHP) and native applications (in C/C++ and Java). For these two categories, we will briefly recall the most exploited vulnerabilities (OWASP Top 10, memory errors, common logical vulnerabilities, errors using cryptography) and we will concentrate on best-practices to avoid them, as well as on tools that help developers to build security into their software, including automatic and semi-automatic security testing tools, syntactic analysis tools for source code, reverse engineering/obfuscation tools and code-reviewing. Parallel to the theoretical course, we will develop an actual application and analyse its security through five iterative development and testing phases.","This module comprises lectures and tutorials. Lectures will include presentations by the organizers as well as by the students, showcasing intermediate results of the accompanying development project. Tutorials will include hands-on applcation of the lecture's material as well as tutored progress on the development project.","Slides, whiteboard, Virtual Machines, discussion","+ Secure Coding: Principles and Practices, Graff and van Wyck,O'Reilly Media, 2003
+ Building secure software, Viega and McGraw, Addison-Wesley Professional Computing Series, 2001
+ OWASP secure coding practices, https://www.owasp.org
+ Secure Coding in C and C++, Robert C. Seacord, Adisson-Wesley, 2009
+ The Ida Pro Book: The Unofficial Guide to the World's Most Popular Disassembler, Chris Eagle No Starch Press, Incorporated, 2011
+ Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection, Jasvir Nagra, Christian Collberg, Pearson Education, Jul 24, 2009",223,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1020200/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2178,Security Engineering,5.0,-,Always,"Pretschner, Alexander",Department of Computer Engineering,Erhöhung auf 5 Credits ab SoSe 2014,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"75 minutes written exam, closed book examination

In the exam, we require students to convey knowledge and understanding about processes and techniques for analysis, design, hardening, evaluation and operations of secure IT applications. Students also need to be able to apply these techniques and processes.",No,Yes,IN2209 IT Security,"At the end of the module students are able to understand and apply processes and techniques required for analysis, design, evaluation and operation of secure IT applications, as well as for design, implementation and verification of secure software. Thus students are enabled to analyze and assess the IT security of applications, and to develop and represent systematically appropriate IT security solutions.","A secure IT application requires both presence of desired security features (example: access control), and absence of undesired security flaws (example: processing of un-validated user input).

We discuss basic terms (example: security versus safety), and security goals as well as secure design principles (example: least privilege). We get familiar with the engineering process for security critical applications.

We focus on system analysis, threat and risk analysis, derivation of security requirements, and recommendation of potential security controls, also taking into account economical considerations. We learn how to specify security policies and how these policies reflect in a security architecture in the context of an overall system architecture. We exemplary take into account basic security controls (example: PKI). We address methods to validate and assess secure applications (example: Common Criteria) and deal with concepts for IT security management (example: ISO 2700x) and secure operation of applications. A further focal point is the development of secure software. We talk about basic attack vectors of hackers, crackers and malware authors. We experience, how insecure programming opens up vulnerabilities (example: cross site scripting). We learn how to detect such vulnerabilities in a systematical manner. We investigate the professional handling of security incidents and the work of Computer Emergency Response Teams (CERTs). We address principles of and guidelines for secure software design and implementation, as well as corresponding verification techniques. We exemplary take a closer look at Microsoft's Security Development Cycle, and get to know models to assess and improve the quality of a secure software development process (example: SSE-CMM).A secure IT application requires both presence of desired security features (example: access control), and absence of undesired security flaws (example: processing of un-validated user input).

We discuss basic terms (example: security versus safety), and security goals as well as secure design principles (example: least privilege). We get familiar with the engineering process for security critical applications.

We focus on system analysis, threat and risk analysis, derivation of security requirements, and recommendation of potential security controls, also taking into account economical considerations. We learn how to specify security policies and how these policies reflect in a security architecture in the context of an overall system architecture. We exemplary take into account basic security controls (example: PKI). We address methods to validate and assess secure applications (example: Common Criteria) and deal with concepts for IT security management (example: ISO 2700x) and secure operation of applications. A further focal point is the development of secure software. We talk about basic attack vectors of hackers, crackers and malware authors. We experience, how insecure programming opens up vulnerabilities (example: cross site scripting). We learn how to detect such vulnerabilities in a systematical manner. We investigate the professional handling of security incidents and the work of Computer Emergency Response Teams (CERTs). We address principles of and guidelines for secure software design and implementation, as well as corresponding verification techniques. We exemplary take a closer look at Microsoft's Security Development Cycle, and get to know models to assess and improve the quality of a secure software development process (example: SSE-CMM).","Combintion of lecture, case studies (partly in team work), exercises, and home work for individual study.
Students are encouraged to study literature, to examine the addressed subjects and to analyze related current news. By applying the lecture contents to case studies the mediated theoretical foundations are substantiated via practical tasks.","Lecture, electronic slides, white board","- Claudia Eckert: IT-Sicherheit, Oldenbourg
- Ross Anderson: Security Engineering, Wiley & Sons
- Jack Koziol et.al.: The Shellcoder's Handbook, Wiley & Sons
- Michael Howard et.al.: The Security Development Lifecycle, Microsoft Press",224,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/460596/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI71060,Security in Communications and Storage,5.0,-,from Winter semester 2019/20,Wachter,Department of Computer Engineering,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"In a final written exam (90 min) about the content of the lecture, the students should demonstrate their understanding of the considered security schemes and the respective applications.
They have to show (while using only one handwritten sheet of notes) that they can evaluate and design the respective security and coding schemes for the considered applications (post-quantum cryptography, authentication, distributed data storage, private information retrieval).",Yes,No,"- Mathematical basics (in particular linear algebra)
- Recommended: some knowledge in channel coding or information theory (the lectures can be taken in parallel to this lecture)","After successful completion of the module the students are able
- to name and explain means to achieve security in modern communication and storage systems,
- to understand and analyze basic cryptographic schemes,
- to understand the challenges of post-quantum cryptography and to name which schemes are post-quantum secure,
- for code-based cryptography: to choose a suitable error-correcting code, adapt its parameters, evaluate it, and implement it in software,
- to understand and implement known attacks on code-based cryptographic schemes,
- to give an overview of symmetric cryptography and authentication,
- to explain the main coding methods used for distributed storage systems (DSSs),
- identify various design challenges and interplay between design parameters,
- identify security issues in DSSs,
- to understand the basic principle and different forms of private information retrieval (PIR),
- give an overview of known results related to complexity, capacity, and coding methods used for PIR","- Motivation and practical need for secure systems
- Short overview of classical cryptography: symmetric and public-key cryptography
- Short introduction to linear error-correcting codes: generator and parity-check matrix, dual code, minimum distance, MDS codes
- Post-quantum cryptography: threat of a quantum computer, code-based cryptography (McEliece & Niederreiter schemes, attacks), lattice-based cryptography
- Authentication
- Distributed data storage: choice of parameters, regenerating codes, locally repairable codes, bounds
- Basics of information theory: entropy, mutual information
- Secure distributed data storage
- Private information retrieval: basic idea (security vs anonymity vs privacy as concepts), toy schemes for 1-3 servers; computational vs. information-theoretic PIR; review of communication complexity results
- Private information retrieval over coded databases: PIR rate and capacity results- Motivation and practical need for secure systems
- Short overview of classical cryptography: symmetric and public-key cryptography
- Short introduction to linear error-correcting codes: generator and parity-check matrix, dual code, minimum distance, MDS codes
- Post-quantum cryptography: threat of a quantum computer, code-based cryptography (McEliece & Niederreiter schemes, attacks), lattice-based cryptography
- Authentication
- Distributed data storage: choice of parameters, regenerating codes, locally repairable codes, bounds
- Basics of information theory: entropy, mutual information
- Secure distributed data storage
- Private information retrieval: basic idea (security vs anonymity vs privacy as concepts), toy schemes for 1-3 servers; computational vs. information-theoretic PIR; review of communication complexity results
- Private information retrieval over coded databases: PIR rate and capacity results","Lecture: The fundamental theoretical contents are presented in the lecture (by a slide presentation and on the black board) and illustrated with examples. Students are encouraged to ask questions and discuss the topics of the lecture.

In an accompanying tutorial, the content of the lecture is applied by calculating problems and programming small tasks.",Slides and black board.,"The slides will be provided. If necessary, current research papers to each of the topics are uploaded .",225,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1704173/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI7243,Secure Implementation of Cryptographic Algorithms,6.0,-,from Summer semester 2011,"Sigl, Georg",Department of Computer Engineering,-,Master,-,-,one semester,winter semester,German,-,180.0,45.0,135.0,-,Yes,No,-,-,--,-,-,-,226,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/669621/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2362,Language-based Security,5.0,-,Always,"Seidl, Helmut",Department of Computer Engineering,-,Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"The examination is an oral examination (60 minutes) in two parts (weighting 50/50).

The first part consists in a presentation of the executable implementations of simple techniques of the four exercise sheets on the laptop or projector and the answering of specific questions. Through this first part, students demonstrate the ability to use theoretical content to solve concrete, application-related problems and to implement these solutions.
The second part of the oral examination consists of three questions on the subject matter of the lecture and the questions and topics covered here. This second part of the oral test demonstrates the extent to which understanding of basic language-based security procedures can be obtained.
Thus, as a whole, it should be demonstrated that in a limited time, for example, types of current attacks and/or related security issues can be correctly identified and effective defence techniques and/or answers can be found, applied or assessed.",No,Yes,"IN2227 - Compiler Construction I
IN2209 - IT Security","Students acquire necessary foundations to understand concrete attacks and defenses. The presented techniques will be analyzed on both, a practical and theoretical level. As a result, students will be able to solve security-related problems by way of program transformation in a methodological fashion.","+ run-time organization of programs
+ code injection attacks and defenses
  o buffer overflows and stack canaries
  o control-flow hijacking and control-flow integrity
+ code re-use attacks and defenses
  o return-oriented programming and software diversity
  o counterfeit object-oriented programming (COOP)
+ data attacks
  o non-control data attacks and data-flow integrity/randomization
+ current topics
  o theoretical limits of control-flow integrity
  o trends in software diversity

Relevant aspects of the lecture will be complemented by lab assignments.+ run-time organization of programs
+ code injection attacks and defenses
  o buffer overflows and stack canaries
  o control-flow hijacking and control-flow integrity
+ code re-use attacks and defenses
  o return-oriented programming and software diversity
  o counterfeit object-oriented programming (COOP)
+ data attacks
  o non-control data attacks and data-flow integrity/randomization
+ current topics
  o theoretical limits of control-flow integrity
  o trends in software diversity

Relevant aspects of the lecture will be complemented by lab assignments.",A slide deck complemented by blackboard details and examples as needed. The accompanying lab assignments focus on hands-on implementations of simple techniques in an actual compiler.,-,-,227,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1536250/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2345,Algorithms for Uncertainty Quantification,5.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,"Type of Assessment: written exam (75 minutes), since tasks involve in particular short calculations.

In the exam, students should prove to be able to identify a given problem and find solutions within limited time. The examination will cover the complete content of the lectures. The type of questions will be oriented along the tutorial exercises. The answers will require own formulations. In addition, questions requiring short calculations may be posed.
Exam questions assess the participants´ knowledge on the basic principles and goals of UQ as well as on central algorithms for forward UQ problems. 
They also test the capability to classify, explain, and analyze these algorithms and to describe methods to overcome the curse of dimensions of high-dimensional parameter space. The exam evaluates the students´ ability to list and differentiate current state-of-the-art software developments in UQ.",No,Yes,"Basics of statistics and/or probability theory such as ""Discrete Probability Theory"" (IN0018); A basic understanding of numerical simulation is advantageous as covered for example in ""Modelling and Simulation"" (IN2010), ""Numerical Programming"" (IN0019), or ""Scientific Computing 1"" (IN2005).","At the end of the module, participants can describe the basic principles and goals of UQ. They are able to classify, explain, and analyze central algorithms for forward UQ problems. The participants are able to elaborate on measures of complexity for UQ problems as well as to explain the underlying potential of parallel computations.
They are familiar with the curse of dimensions of high-dimensional stochastic parameter spaces and can explain why/how certain schemes can overcome this issue. Participants are able to list and differentiate current state-of-the-art software developments in UQ as well as to implement simple scenarios using the python package chaospy.","Computer simulations of different phenomena heavily rely on input data which – in many cases – are not known as exact values but face random effects. 
Uncertainty Quantification (UQ) is a cutting-edge research field that supports decision making under such uncertainties. Typical questions tackled in this course are ""How to incorporate measurement errors into simulations and get a meaningful output?"", ""What can I do to be 98.5% sure that my robot trajectory will be safe?"", ""Which algorithms are available?"", ""What is a good measure of complexity of UQ algorithms?"", ""What is the potential for parallelization and High-Performance Computing of the different algorithms?"", or ""Is there software available for UQ or do I need to program everything from scratch?"" 
In particular, this course will cover
- Brief repetition of basic probability theory and statistics
- 1st class of algorithms: sampling methods for UQ (Monte Carlo): the brute-force approach
- More advanced sampling methods: Quasi Monte Carlo & Co.
- Relevant properties of interpolation & quadrature
- 2nd class of algorithms: stochastic collocation via the pseudo-spectral approach: Is it possible to obtain accurate results with (much) less costs?
- 3rd class of algorithms: stochastic Galerkin: Are we willing to (heavily) modify your software to gain accuracy?
- Dimensionality reduction in UQ: apply hierarchical methodologies such as tree-based sparse grid quadrature. How does the connection to Machine Learning and classification problems look like?
- Which parameters actually do matter? => sensitivity analysis (Sobol’ indices etc.)
- What if there is an infinite amount of parameters? => approximation methods for random fields (KL expansion)
- Software for UQ: What packages are available? What are the advantages and downsides of major players  (such as chaospy, UQTk, and DAKOTA)
- Outlook: inverse UQ problems, data aspects, real-world measurementsComputer simulations of different phenomena heavily rely on input data which – in many cases – are not known as exact values but face random effects. 
Uncertainty Quantification (UQ) is a cutting-edge research field that supports decision making under such uncertainties. Typical questions tackled in this course are ""How to incorporate measurement errors into simulations and get a meaningful output?"", ""What can I do to be 98.5% sure that my robot trajectory will be safe?"", ""Which algorithms are available?"", ""What is a good measure of complexity of UQ algorithms?"", ""What is the potential for parallelization and High-Performance Computing of the different algorithms?"", or ""Is there software available for UQ or do I need to program everything from scratch?"" 
In particular, this course will cover
- Brief repetition of basic probability theory and statistics
- 1st class of algorithms: sampling methods for UQ (Monte Carlo): the brute-force approach
- More advanced sampling methods: Quasi Monte Carlo & Co.
- Relevant properties of interpolation & quadrature
- 2nd class of algorithms: stochastic collocation via the pseudo-spectral approach: Is it possible to obtain accurate results with (much) less costs?
- 3rd class of algorithms: stochastic Galerkin: Are we willing to (heavily) modify your software to gain accuracy?
- Dimensionality reduction in UQ: apply hierarchical methodologies such as tree-based sparse grid quadrature. How does the connection to Machine Learning and classification problems look like?
- Which parameters actually do matter? => sensitivity analysis (Sobol’ indices etc.)
- What if there is an infinite amount of parameters? => approximation methods for random fields (KL expansion)
- Software for UQ: What packages are available? What are the advantages and downsides of major players  (such as chaospy, UQTk, and DAKOTA)
- Outlook: inverse UQ problems, data aspects, real-world measurements","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations. Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","-	R. C. Smith, Uncertainty Quantification – Theory, Implementation, and Applications, SIAM, 2014
-	D. Xiu, Numerical Methods for Stochastic Computations – A Spectral Method Approach, Princeton Univ. Press, 2010
-	T. J. Sullivan, Introduction to Uncertainty Quantification, Texts in Applied Mathematics 63,  Springer, 2015",229,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1333663/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2001,Algorithms for Scientific Computing,8.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"Type of Assessment: The exam takes the form of a 120 minutes written exam.
The examination consists of a written exam of 120 minutes in which students show that they are able to find solutions for algorithmic problems arising in the field of scientific computing in a limited time. Questions and small tasks concerning code are used to test the student´s knowledge on known and related hierarchical methods as well as their ability to implement them. Example algorithms and questions are used to examine the capability of analyzing the efficiency of algorithms and the accuracy of a given method.",No,Yes,-,"At the end of the module, students are able to identify, explain, and implement selected hierarchical methods that are of particular interest to the informatical aspects of scientific computing because of their algorithmic structure and their significance for practical applications.
Participants can analyse and judge the efficiency of such methods by deriving statements about the required computational cost and - where applicable - the achieved accuracy and by comparing them with corresponding results for other methods. 
The students are able to transfer the methodology to new methods for related problems.","Discrete Fourier transform and related transforms
- FFT: derivation and implementation
- Fast discrete cosine/sine transforms: derivation and implementation via FFT
- Applications: multi-dimensional data (images, video, audio) and FFT-based solvers for linear systems of equations

Space-filling curves
- Peano- and Hilbert curves: representation by algebraic and grammatical means
- Applications: organisation of multi-dimensional data; parallel, adaptive, and cache oblivious algorithms

Hierarchical numerical methods
- Hierarchical bases for one- and multi-dimensional problems
- Computational cost versus accuracy; Sparse Grids
- Adaptive representation of continuous data
- Applications: numerical quadrature, differential equations
- Outlook: multigrid methods, waveletsDiscrete Fourier transform and related transforms
- FFT: derivation and implementation
- Fast discrete cosine/sine transforms: derivation and implementation via FFT
- Applications: multi-dimensional data (images, video, audio) and FFT-based solvers for linear systems of equations

Space-filling curves
- Peano- and Hilbert curves: representation by algebraic and grammatical means
- Applications: organisation of multi-dimensional data; parallel, adaptive, and cache oblivious algorithms

Hierarchical numerical methods
- Hierarchical bases for one- and multi-dimensional problems
- Computational cost versus accuracy; Sparse Grids
- Adaptive representation of continuous data
- Applications: numerical quadrature, differential equations
- Outlook: multigrid methods, wavelets","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations.
Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","- W.L. Briggs, Van Emden Henson, The DFT - An Owner's Manual for the Discrete Fourier Transform, SIAM, 1995
- Charles van Loan, Computational Frameworks for the Fast Fourier Transform, SIAM, 1992
- M. Bader, Space-Filling Curves - An Introduction with Applications to Scientific Computing, Springer-Verlag, 2013
- H. Sagan, Space-Filling Curves, Springer-Verlag, 1994
- H.-J. Bungartz, Skript Rekursive Verfahren und hierarchische Datenstrukturen in der numerischen Analysis, http://www5.in.tum.de/lehre/vorlesungen/algowiss/Bungartz_HierVerf.ps.gz
- H.-J. Bungartz, M. Griebel: Sparse Grids, Acta Numerica, Volume 13, p. 147-269. Cambridge University Press, May 2004",230,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456346/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2002,Algorithms for Scientific Computing II,4.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,120.0,45.0,75.0,"Type of Assessment: written exam (90 minutes)

In the exam students should prove to be able to identify a given problem and find solutions within limited time. The examination will completely cover the content of the lectures. The answers will require own formulations. In addition, questions requiring short calculations may be posed. Exam questions evaluate the participants' capability to adapt numerical methods to ambitious applications from the practice of scientific computing involving advanced problems and methods in scientific computing. Exam tasks test the students' knowledge on hierarchical aspects.",No,Yes,-,"At the end of the module, students are able to adapt numerical methods to ambitious applications from the practice of scientific computing. They understand and are familiar with advanced problems and methods in scientific computing. These advanced methods comprise in particular hierarchical aspects that students are able to understand, explain and apply to more complex applications.","Courses of this module exist in three different specifications:
- Sparse Matrices (Huckle):
  ++ Data structures, Sparsity Graphs
  ++ Sparse BLAS
  ++ Reordering
  ++ Direct solution of linear equations and algebraic pivoting
  ++ Iterative solution of linear equations and preconditioning.
- Scientific Computing (Mendl):
++ Introduction to quantum mechanics
++ Bell inequalities
++ Quantum circuits and algorithms
++ Quantum error correction
++ Mapping of NP problems to quantum ground states
++ Numerical methods for quantum systems 
- Scientific Computing (Bungartz):
  ++ Molecular dynamics simulation
  ++ Sparse grid methods
  ++ Algebraic multigrid methodsCourses of this module exist in three different specifications:
- Sparse Matrices (Huckle):
  ++ Data structures, Sparsity Graphs
  ++ Sparse BLAS
  ++ Reordering
  ++ Direct solution of linear equations and algebraic pivoting
  ++ Iterative solution of linear equations and preconditioning.
- Scientific Computing (Mendl):
++ Introduction to quantum mechanics
++ Bell inequalities
++ Quantum circuits and algorithms
++ Quantum error correction
++ Mapping of NP problems to quantum ground states
++ Numerical methods for quantum systems 
- Scientific Computing (Bungartz):
  ++ Molecular dynamics simulation
  ++ Sparse grid methods
  ++ Algebraic multigrid methods","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations.
Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","- Y. Saad: Iterative Methods for Sparse Linear Systems
- M. A. Nielsen, I. L. Chuang: Quantum Computation and Quantum Information
- M. Griebel, S. Knapek, G. Zumbusch, A. Caglar: Numerical Simulation in Molecular Dynamics
- H.-J. Bungartz, Skript Rekursive Verfahren und hierarchische Datenstrukturen in der numerischen Analysis, http://www5.in.tum.de/lehre/vorlesungen/algowiss/Bungartz_HierVerf.ps.gz",231,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456348/206?$ctx=lang=en&$scrollTo=toc_details,Browser
NAT7022,Applications of Quantum Computing,6.0,2022w,from Winter semester 2022/23,-,Academic Programs Joint Study Programs TUM/LMU M.Sc. QST/TMP (from the Course Catalog of LMU Munich),-,Master,-,-,one semester,winter/summer semester,English,-,150.0,60.0,90.0,"The graded examination consists of a written exam of 60 min.
The exam will test if the student is able to identify NISQ algorithms suited for a provided application problem and has gained competencies on how to construct NISQ algorithms including fitting quantum circuits. 
Additionally, general knowledge about further NISQ algorithms and current error mitigation techniques will be checked.
Participation in the exercise classes is strongly recommended since the exercises prepare for the problems of the exam and rehearse the specific competencies.",No,Yes,"For students within the Quantum Science & Technology master program: No preconditions in addition to the requirements for the Master's program in Physics and Quantum Science and Technology.
For other bachelor or master students in physics: 
- Quantum mechanics I
- An introduction to statistics and/or machine learning techniques is very helpful
In particular students with a first contact to research projects will profit from this lecture.","After successful completion of the module the students are able to:
1. Understand the basics of current NISQ algorithms such as the Variational Quantum Eigensolver and the Quantum Approximate Optimization Algorithm and differentiate these from algorithms requiring fault-tolerant quantum computers like Grover's algorithm.
2. Understand the different directions of quantum machine learning and how certain problems could profit from higher-dimensional kernel methods.
3. Discuss in which application areas the use of a quantum computer may be sensible or not.
4. Implement algorithms for a few example problems that may benefit from quantum computers, taken e.g. from high energy physics or medical imaging.
5. Obtain a first knowledge about current quantum hardware limitations and error mitigation techniques with respect to practical applications.","This module will introduce students to potential applications of near-term noisy immediate scale quantum (NISQ) computers within physics and industrial areas. The focus is here on completing simulation tasks by quantum computers, using quantum computers to solve optimization problems, or to benefit from quantum machine learning. Potential application fields in physics e.g. include quantum machine learning techniques in high energy physics such as improving tracking algorithms in interpreting detector signals or in the identification of physics beyond the Standard Model of particle physics, or improving simulation tasks in cosmology. Industrial application areas e.g. include quantum-computing assisted methods in drug discovery or within (medical) imaging. To fully understand the potential benefit of NISQ computers, this module will first introduce the basic concepts of NISQ algorithms, re-summarize the abilities of current quantum hardware, and then dive into specific algorithm areas (e.g. quantum machine learning) with concrete applications. This is helped by practical hands-on sessions on the algorithms based on recent research papers within the tutorials. Furthermore, the module discusses how current error mitigation techniques may help the near-term use of quantum computers.This module will introduce students to potential applications of near-term noisy immediate scale quantum (NISQ) computers within physics and industrial areas. The focus is here on completing simulation tasks by quantum computers, using quantum computers to solve optimization problems, or to benefit from quantum machine learning. Potential application fields in physics e.g. include quantum machine learning techniques in high energy physics such as improving tracking algorithms in interpreting detector signals or in the identification of physics beyond the Standard Model of particle physics, or improving simulation tasks in cosmology. Industrial application areas e.g. include quantum-computing assisted methods in drug discovery or within (medical) imaging. To fully understand the potential benefit of NISQ computers, this module will first introduce the basic concepts of NISQ algorithms, re-summarize the abilities of current quantum hardware, and then dive into specific algorithm areas (e.g. quantum machine learning) with concrete applications. This is helped by practical hands-on sessions on the algorithms based on recent research papers within the tutorials. Furthermore, the module discusses how current error mitigation techniques may help the near-term use of quantum computers.","This module is a lecture and exercise classes (in total 4 SWS). The teaching style will switch between blackboard presentations, possibly on a tablet computer, to present the basic concepts, and presentation slides to discuss more complicated concepts or recent research results. During the weekly practical tutorial classes integrated within the lecture, the students will work on basic examples to understand the core concepts of the lecture and practical examples from recent research papers. It is intended to gain a hands-on programming experience during the tutorials.","Blackboard / tablet computer, computer presentation slides.","- Quantum Computation & Quantum Information by M. A. Nielsen, I. J. Chuang
- Quantum machine learning: An applied approach by S. Ganguly
- Machine Learning with Quantum Computers by M. Schuld, P. Petruccione
- Noisy intermediate-scale quantum (NISQ) algorithms by K. Bharti et al.",232,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3304082/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN3480,Selected Topics in Scientific Computing and High Performance Computing,5.0,-,Always,-,Department of Computer Science,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,233,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1498144/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2381,Introduction to Quantum Computing,5.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The assessment is by means of a written exam of 90 minutes. Allowed tools: one DIN-A4 sheet (both sides) with own notes; can be handwritten or prepared digitally and printed. 
Problems related to the fundamental mathematical formalism may ask the students to compute the quantum mechanical state vector after passing through an experimental setup, or the derivation of a mathematical relation. Problems on quantum circuits test to what degree students have understood the individual building blocks (e.g., Pauli matrices or Hadamard gates), and can use these for the design of (simple) circuits. The exam assesses the knowledge of quantum algorithms for example by asking the students to analyze the number of required operations. Reaching a pre-specified number of the maximum homework points can be rewarded by a grade bonus in the evaluation of the exam. The exact details are timely announced at the beginning of the course.",No,Yes,"Linear Algebra, e.g., MA0901 Linear Algebra for Informatics","After successful completion of this module, students are familiar with the fundamentals and the mathematical formalism of quantum computing. They can analyse quantum algorithms, like Grover search, and construct quantum circuits for simple algorithms. The students can apply software tools (like Qiskit or Cirq), and can evaluate possible fields of applications of (future) quantum computers.","- Mathematical formalism and foundations of quantum mechanics
- Quantum circuits
- Quantum teleportation
- Bell inequality
- Fundamental quantum algorithms- Mathematical formalism and foundations of quantum mechanics
- Quantum circuits
- Quantum teleportation
- Bell inequality
- Fundamental quantum algorithms","The whiteboard lectures convey the fundamentals and the mathematical formalism of quantum computing in-depth, and the slide presentations illustrate state-of-the art technical developments. The accompanying exercises for individual study deepen the understanding of the topics explained in the lecture, and foster the creative application of the learnt techniques.","whiteboard, slides, online programming","M. A. Nielsen, I. L. Chuang: Quantum Computation and Quantum Information. Cambridge University Press (2010)",234,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1816255/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2400,Advanced Concepts of Quantum Computing,5.0,-,from Winter semester 2021/22,"Mendl, Christian",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The assessment is by means of a written exam of 90 minutes. Allowed tools: one DIN-A4 sheet (both sides) with own notes; can be handwritten or prepared digitally and printed. 
Problems related to quantum operations may ask the students to derive such an operation from a quantum circuit with principal and auxiliary qubits, the identification of a phase estimation step in a circuit, or using quantum Fourier transformation to solve a specific task. Problems on quantum error-correction and the stabilizer formalism might ask students to prove commutation relations, identity the subspace stabilized by a subgroup of the Pauli group, or transform such a subspace after conjugation by unitary gates. Reaching a pre-specified number of the maximum homework points can be rewarded by a grade bonus in the evaluation of the exam. The exact details are timely announced at the beginning of the course.",No,Yes,"- Introduction to Quantum Computing (IN2381)
- Linear Algebra, e.g., MA0901 Linear Algebra for Informatics
- Analysis (for Quantum Fourier transform), e.g., MA0902 Analysis for Computer Science
- Fundamentals of group theory helpful (for quantum error correction), but not strictly required, e.g., MA2010 Algebra","After successful completion of this module, students are familiar with advanced concepts and algorithms related to quantum computing, in particular the quantum Fourier transformation, quantum operations and quantum error correction. They can differentiate the quantum Fourier transform from other algorithms, understand its relevance for integer factorization, and apply the quantum Fourier transform in new scenarios. The students also understand the mathematical formalism of quantum error correction and related concepts like the stabilizer formalism.","- Quantum Fourier transform
- Shor's algorithm for integer factorization
- Quantum operations
- Quantum error-correction- Quantum Fourier transform
- Shor's algorithm for integer factorization
- Quantum operations
- Quantum error-correction","The whiteboard lectures convey the advanced concepts of quantum computing in-depth, and the slide presentations illustrate state-of-the art technical developments. The accompanying exercises for individual study deepen the understanding of the topics explained in the lecture, and foster the creative application of the learnt techniques.","whiteboard, slides","M. A. Nielsen, I. L. Chuang: Quantum Computation and Quantum Information. Cambridge University Press (2010)

J. Preskill: Quantum Computing in the NISQ era and beyond. Quantum 2, 79 (2018)",235,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2981021/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2010,Modelling and Simulation,8.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,240.0,90.0,150.0,"Type of Assessment: exam

The exam takes the form of a 120 minutes written test. In the exam students should prove to be able to identify a given problem and find solutions within limited time. The examination will completely cover the content of the lectures. The answers will require own formulations. In addition, questions requiring short calculations may be posed. Exam questions check the ability to develop and to assess formal (mathematical or informatical) model concepts for a verbally described problem. The assignments test whether the participants are able to select and apply successfully strategies for simulation. Exam tasks evaluate the students' knowledge on important model classes and corresponding solution procedures for simple scenarios.",No,Yes,"MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics, IN0019 Numerical Programming","The participants are able to develop and to assess formal (mathematical or infomatical) model concepts for a verbally described problem. They can select and apply successfully strategies for simulation, i.e., the computer-aided solution of these models. They know exemplary important model classes and can develop own solution procedures for simple scenarios.","- Introduction to mathematical modelling (notions and notations, fields of application, derivation of models, analysis of models, classification of models, scales and hierarchy)
- Discrete modelling and simulation (decision models: games, strategies, elections; scheduling problems; discrete event simulation: data and job traffic; neural networks)
- Continuous modelling and simulation (population dynamics: models and their numerical treatment; control: deterministic and fuzzy logic approaches; traffic flow: modelling via continuous quantities; heat conduction: models and their numerical treatment)
- Modelling in software design (optional; basic concepts, description techniques, methodology)- Introduction to mathematical modelling (notions and notations, fields of application, derivation of models, analysis of models, classification of models, scales and hierarchy)
- Discrete modelling and simulation (decision models: games, strategies, elections; scheduling problems; discrete event simulation: data and job traffic; neural networks)
- Continuous modelling and simulation (population dynamics: models and their numerical treatment; control: deterministic and fuzzy logic approaches; traffic flow: modelling via continuous quantities; heat conduction: models and their numerical treatment)
- Modelling in software design (optional; basic concepts, description techniques, methodology)","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations.
Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","- Bungartz, Zimmer, Buchholz, Pflüger: Modellbildung und Simulation - eine anwendungsorientierte Einführung, Springer, 2009
- Fowkes, Mahoney: Einführung in die mathematische Modellierung, Spektrum,1996
- Gander, Hrebicek: Solving Problems in Scientific Computing Using Maple and MATLAB, Springer, 1997
- Bossel: Modellbildung und Simulation, Vieweg, 1994
- Banks et al.: Discrete Event System Simulation, Prentice Hall, 1996
- Golub, Ortega: Scientific Computing: An Introduction with Parallel Computing, Academic Press, 1993
- Nauck, Klawonn, Kruse: Neuronale Netze und Fuzzy-Systeme, Vieweg, 1994",236,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456362/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2398,Numerical Algorithms for High Performance Computing,8.0,-,from Winter semester 2021/22,"Bader, Michael",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,240.0,90.0,150.0,"The examination consists of a written exam of 120 minutes in which students show that they are able to develop and implement parallel algorithms for numerical methods in the context of high performance computing. On the basis of example algorithms the ability to analyze algorithms with respect to parallelizability and parallel runtime is assessed. Questions test the understanding of vectorization, thread parallelism and MPI parallelization and their impact on numerical algorithms. Small implementation tasks assess the skills in writing parallel numerical code. The knowledge about parallelizing the algorithmic problems handled in the module is examined by questions and small implementation tasks.",No,Yes,"IN0019 Numerical Programming, IN2156 Numerical Programming (CSE), IN2147 Parallel Programming","Participants know important algorithms from various representative problems in parallel and high performance computing, in particular motivated by applications in scientific computing. They can evaluate their range of application in standard scenarios, are familiar with their basic performance features, and can also evaluate their parallel scalability. 
Students are able to decide whether a numerical algorithm is parallelizable in an efficient way and to analyze internal data dependencies and the runtime of parallel algorithms. They understand the different ways of parallelism and are able to exploit them when writing numerical code for different architectures. 
Participants know different parallelization strategies for solving linear systems and partial differential equations and are able to implement and evaluate them.","The lecture discusses selected algorithms from the following classical problem settings in scientific computing (""the seven dwarfs of HPC""):
- Solvers for partial differential equations (and related problems) on structured and unstructured grids (e.g. domain decomposition methods)
- Algorithms in numerical linear algebra on sparse and dense matrices (direct and iterative solution of linear systems on HPC architectures, eigenvalue problems, etc.)
- Particle-oriented simulation (Barnes-Hut/Fast Multipole algorithm, etc.)
- Spectral methods (parallel fast Fourier transform, etc.)

In that context, the following approaches for optimisation and analysis of algorithms will be discussed:
- Performance analysis and performance models (Roofline, Cache, Bulk Synchronous Parallelism) 
- Shared-memory parallelism (data dependencies, parallel loop, tasking)
- Distributed-memory parallelism (MPI; tiling, blocking and partitioning methods)The lecture discusses selected algorithms from the following classical problem settings in scientific computing (""the seven dwarfs of HPC""):
- Solvers for partial differential equations (and related problems) on structured and unstructured grids (e.g. domain decomposition methods)
- Algorithms in numerical linear algebra on sparse and dense matrices (direct and iterative solution of linear systems on HPC architectures, eigenvalue problems, etc.)
- Particle-oriented simulation (Barnes-Hut/Fast Multipole algorithm, etc.)
- Spectral methods (parallel fast Fourier transform, etc.)

In that context, the following approaches for optimisation and analysis of algorithms will be discussed:
- Performance analysis and performance models (Roofline, Cache, Bulk Synchronous Parallelism) 
- Shared-memory parallelism (data dependencies, parallel loop, tasking)
- Distributed-memory parallelism (MPI; tiling, blocking and partitioning methods)","This module comprises lectures and accompanying tutorials. The contents of the lectures will be taught by talks and presentations. Students will be encouraged to study literature and to get involved with the topics in depth. In the tutorials, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","- Bisseling: Parallel Scientific Computation - A Structured Approach Using BSP;
- Dongarra, Duff, Sorensen, van der Vorst: Numerical Linear Algebra for High-Performance Computers;
- Pacheco: A User’s Guide to MPI, Parallel Programming with MPI",237,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2911533/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2310,Parallel Program Engineering,5.0,-,Always,"Gerndt, Hans",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"In the written 75 minutes or 20 minutes oral exam, students should prove their knowledge of concepts, techniques and tools. They should show their ability to apply the knowledge to outline solutions for tasks in the software development process of parallel applications. The examination will cover the content of the lectures. The answers will require own formulations.",No,No,"IN2076 Advanced Computer Architecture, IN2147 Parallel Programming",The participants will be able to apply a structured approach in the development of parallel applications. They are able to assess and apply existing tools for a given problem. They understand tool development infrastructures and are able to design and implement own solutions to issues in the development process of parallel software.,"This module starts with a short introduction to parallel programming, programming models and languages, applications, and the parallelization approach. It presents the software development process focusing on aspects and requirements for parallel and high performance applications. Development environments supporting the orchestration of parallel programs are introduced. The module then concentrates on concepts and tools for engineering parallel programs focusing on: e.g. omain decomposition, Debugging, Performance analysis, Performance modeling and prediction, Application tuning, Performance engineering workflows, and tool development infrastructures.This module starts with a short introduction to parallel programming, programming models and languages, applications, and the parallelization approach. It presents the software development process focusing on aspects and requirements for parallel and high performance applications. Development environments supporting the orchestration of parallel programs are introduced. The module then concentrates on concepts and tools for engineering parallel programs focusing on: e.g. omain decomposition, Debugging, Performance analysis, Performance modeling and prediction, Application tuning, Performance engineering workflows, and tool development infrastructures.",This module comprises lectures and accompanying project work. The lectures will be based on presentations. Interactive brainstorming elements will be integrated. Students will be encouraged to study literature based on the given books and available research papers. Participants will apply the concepts learned based on real tools in multiple small projects executed in teamwork in the exercises.,"Slides, whiteboard, mind manager, project specifications","+ Andrew Tanenbaum: Structure Computer Organization, 2013
+ David E. Culler, Jasweinder Pal Singh, Anoop Gupta: Parallel Computer Architecture: A Hardware / Software Approach, 1999
+ David Padua (ed.): Encyclopedia of Parallel Programming, Springer, 2011
+ Roberto Battiti and Mauro Brunato: The LION Way: Machine Learning plus Intelligent Optimization, 2014
+ Matthias Müller, Michael Resch, Alexander Schulz, Wolfgang Nagel: Tools for High Performance Computing, Springer, Book Series (2009-2013)",238,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1060581/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2147,Parallel Programming,5.0,-,Always,"Schulz, Martin",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The exam takes the form of a 120 minutes written test. Questions allow to asses acquaintance with the concepts of parallel programming models, languages, and tools. Code snippets of sequential and parallel programs are given. Students apply their knowledge on dependence analysis and code transformations to these codes. Based on code snippets the students apply the learned parallel models to demonstrate their ability to evaluate different parallelization strategies, to parallelize code, and tune applications.",No,Yes,IN2076 Advanced Computer Architecture,At the end of the module students are able to create parallel programs in MPI and OpenMP. They understand the performance aspects of different parallelization strategies and can evaluate those parallelization strategies in the context of applications. They are able to apply data dependence analysis and program transformations. They can analyze and tune the performance of parallel applications.,"The module starts with a motivation for parallel programming and a classification of parallel architectures. It focuses first on parallelization for distributed memory architectures with MPI. It introduces the major concepts, e.g., point to point communication, collective operations, communicators, virtual topologies, non-blocking communication, single-sided communication and parallel IO. In addition, it covers the overall parallelization approach based on four phases, i.e., decomposition, assignment, orchestration and mapping. The next section presents dependence analysis as the major theoretical basis for parallelization. It introduces program transformations and discusses their profitability and safety based on data dependence analysis. The second major programming interface in the module is OpenMP for shared memory systems. This section covers most of the language concepts as well as proposed extensions. In the last part, the module presents novel programming interfaces, such as PGAS languages, threading building blocks, CUDA, OpenCL, and OpenACC.The module starts with a motivation for parallel programming and a classification of parallel architectures. It focuses first on parallelization for distributed memory architectures with MPI. It introduces the major concepts, e.g., point to point communication, collective operations, communicators, virtual topologies, non-blocking communication, single-sided communication and parallel IO. In addition, it covers the overall parallelization approach based on four phases, i.e., decomposition, assignment, orchestration and mapping. The next section presents dependence analysis as the major theoretical basis for parallelization. It introduces program transformations and discusses their profitability and safety based on data dependence analysis. The second major programming interface in the module is OpenMP for shared memory systems. This section covers most of the language concepts as well as proposed extensions. In the last part, the module presents novel programming interfaces, such as PGAS languages, threading building blocks, CUDA, OpenCL, and OpenACC.","The different parallel programming models and parallelization techniques are introduced in the lecture. Voluntary short student presentations demonstrate the techniques in application areas. Within a central exercise session, assignments are presented and discussed. The students solve the assignments and submit the solutions which are checked for correctness. In the assigments the students apply the learned concepts to larger example programs.",Slides,"- MPI: A Message-Passing Interface Standard (Language Standard)
- OpenMP: Open Application Program Interface (Language Standard)
- R. Allen, K. Kennedy: Optimizing Compilers for Modern Architectures, Morgan Kaufmann
- David E. Culler et.al.: Parallel Computer Architecture: A Hardware / Software Approach, Morgan Kaufmann",239,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/457062/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2365,Parallel Programming Systems,3.0,-,Always,"Schulz, Martin",Department of Computer Engineering,-,Master,-,-,one semester,irregularly,English,-,90.0,30.0,60.0,"Depending on course size either oral exam (20 min. per student) or 60 min. written exam. Both options are without additional aids and result in one grade for the course. The exam mainly tests concepts in the area of parallel system software: Have the students understood how parallel runtime systems work and do they have a basic understanding for developing such a system? The exam requires the students to answer in their own words, and possibly completing some code segments.",No,Yes,"Lecture Parallel Programming (IN2147)
Lecture Microprocessors (IN2075)","•	Provide students with the fundamental knowledge about how parallel programming models and languages can be implemented efficiently.
•	Students will learn how a parallel programming model and its runtime interacts with the underlying hardware.
•	Students will be taught fundamental algorithms for key parallel mechanisms such as locks, barriers, etc.","This lecture focuses on the implementation aspects of parallel programming systems.  Parallel programming models need compiler and runtime support to map the rich feature set of a parallel programming model to actual parallel hardware. To obtain high performance and high efficiency, this mapping needs to take into account the specific architectural aspects of the underlying computer architecture. This lecture briefly reviews key concepts that have been presented in the lecture ""Parallel Programming"" and ""Microprocessors"". It then turns towards the fundamental algorithms used to implement the concepts of parallel programming models and how they interact with modern processors. While the lecture will focus on the general mechanisms, we will use the Intel processor architecture to exemplify the discussed implementation concepts.This lecture focuses on the implementation aspects of parallel programming systems.  Parallel programming models need compiler and runtime support to map the rich feature set of a parallel programming model to actual parallel hardware. To obtain high performance and high efficiency, this mapping needs to take into account the specific architectural aspects of the underlying computer architecture. This lecture briefly reviews key concepts that have been presented in the lecture ""Parallel Programming"" and ""Microprocessors"". It then turns towards the fundamental algorithms used to implement the concepts of parallel programming models and how they interact with modern processors. While the lecture will focus on the general mechanisms, we will use the Intel processor architecture to exemplify the discussed implementation concepts.","Lectures with PowerPoint presentation (easier preparation and distribution), augmented with interactive discussions where suitable (depending on class size). Additional documents (e.g., standard documents, papers, code segments, demos, etc.) will be integrated as necessary to make material more comprehensible.","PowerPoint, code and document presentations via projection, documents made available through Moodle","John Hennessy and David Patterson: Computer Architecture: A Quantitative Approach (Morgan Kaufmann Series in Computer Architecture and Design). Morgan Kaufmann, 6th edition, ISBN-13 978-0128119051.

William Stallings: Computer Organization and Architecture: Designing for Performance. Prentice Hall, 7th edition, ISBN 978-0131856448.

Yan Solihin: Fundamentals of Parallel Multicore Architecture. Apple Academic Press, ISBN 978-1482211184.

Sources of the LLVM OpenMP Runtime Implementation. https://openmp.llvm.org/.

Sources of the Threading Building Blocks. https://www.threadingbuildingblocks.org/.

Select research papers regarding barrier implementation, lock implementation, scheduling task graphs, etc.

Intel Corporation: Intel® 64 and IA-32 Architectures Optimization Reference Manual, document ID 248966-040.

Barbara Chapman, Gabriele Jost, and Ruud van der Pas: Using OpenMP - Portable Shared Memory Parallel Programming. MIT Press, ISBN-13 978-0262533027.

Ruud van der Pas, Eric Stotzer, and Christian Terboven: Using OpenMP - The Next Step: Affinity, Accelerators, Tasking, and SIMD. MIT Press, ISBN-13 978-0262534789.

James Reinders: Threading Building Blocks. O'Reilly, ISBN 978-0596514808.",240,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1507004/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2306,Scientific Computing in Circuit Simulation,5.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"Type of Assessment: exam

The 75 minutes written exam assesses the students' ability to describe the modeling of electronic circuits and their simulation. The participants demonstrate that they understand the role and importance of mathematical problem analysis and its theoretical treatment, which are transformed into an engineer's solution. Questions requiring short calculations may be posed. The exercises examine the students' ability to implement the numerical algorithms for the simulation of electronic circuits. The participants demonstrate how they understood and applied these methods and it will be assessed how well they interpret the algorithms and their outcomes as well as how they analyze the performance of these.",No,Yes,"IN0019 Numerical Programming (or similar)
IN0002 Fundamentals of Programming (Exercises & Laboratory) (or similar)
Students should have basic knowledge in differential calculus and linear algebra","At the end of the module, participants know the basic modeling and algorithms needed for circuit simulation. They are able to understand the necessary interaction between engineers, mathematicians, and computer scientists in industrial problem modeling. They understand the role and importance of mathematical problem analysis and its theoretical treatment, which are transformed into an engineer's solution. The participants are able to analyze the impact of different mathematical approaches for industrial problems. They can understand, apply, and interprete the basic methods how to implement the algorithms in an efficient way allowing a fast simulation of electronic circuits.","The lecture includes the following scientific computing topics:
- industrial design of electronic circuits
- modeling of electrical networks and network elements
- differential-algebraic equations (DAEs): theory, numerical integration
- sparse matrix techniques
- algorithms for parallel and distributed computing
- further challenges (e.g., latency and bypass strategies, noise)The lecture includes the following scientific computing topics:
- industrial design of electronic circuits
- modeling of electrical networks and network elements
- differential-algebraic equations (DAEs): theory, numerical integration
- sparse matrix techniques
- algorithms for parallel and distributed computing
- further challenges (e.g., latency and bypass strategies, noise)","This module comprises lectures and accompanying exercises. The contents of the lectures will be taught by talks and presentations. Students will be encouraged to study literature and get involved with the topics in depth. In the exercises, concrete problems will be analyzed and implemented in software --- partially in teamwork --- and selected examples will be discussed.","Whiteboard, slides, exercise sheets","- Chua, Lin: Computer-Aided Analysis of Electronic Circuits, Prentice Hall, 1984
- Günther, Feldmann, ter Maten: Modelling and discretization of circuit problems. In: Handbook of numerical analysis, Vol. XIII (Ed. Ciarlet), Elsevier, 2005
Further references will be addressed during lecture",241,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/977334/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4330012,Software for Quantum Computing,5.0,-,Always,"Wille, Robert",Department of Computer Engineering,-,Master,Quantum SW,-,one semester,winter semester,English,-,150.0,45.0,105.0,"The examination is performed in form of either an oral (30 mins) or a written exam (90 mins). The exam will cover tasks conducted before in the hands-on sessions/exercises (which in turn, cover the main content of the lecture in a practical fashion). The tasks/exercises allow to evaluate how well the students understood the respective concepts and how well they can realize corresponding (software) methods for quantum computing.",Yes,No,"Basic knowledge in programming (e.g., in Python, C++, etc.)
Basic knowledge in the use of design tools such as compilers, debuggers, etc.","At the end of the module, students will have detailed expertise of software for quantum computing with which corresponding applications can be realized. More precisely, they will 
* understand the paradigm of quantum computing and will be able to evaluate how it differs from classical computing,  
* be able to analyze whether an application is suited for quantum computing, 
* be able to utilize and, if necessary, extend different data-structures as well as core methods that provide the basis for quantum computing software tools, 
* be able to utilize and, if necessary extend software solutions for quantum computing (e.g., for quantum circuit simulation, quantum circuit compilation, and quantum circuit verification), as well as 
* be able to realize, simulate, compile, verify, and execute quantum circuits using this software.","Quantum computers have the potential to solve certain tasks that would take millennia to complete even with the fastest (conventional) supercomputer. Numerous quantum computing applications with a near-term perspective (e.g., for finance, chemistry, machine learning, optimization) and with a long-term perspective (i.e., cryptography, unstructured search) are currently investigated. However, while impressive accomplishments can be observed in the physical realization of quantum computers, the development of automated methods and software tools that provide assistance in the design and realization of applications for those devices is at risk of not being able to keep up with this development anymore. This may lead to a situation where we might have powerful quantum computers but hardly any proper means to actually use them.

This module provides an in-depth introduction into the internals of quantum computing software. This includes 
* an elaboration on the differences between classical computing and quantum computing,
* an introduction to the design flow for quantum computing applications,
* a detailed coverage of data-structures and method dedicated to quantum computing,
* a detailed coverage of software tools and methods for important design tasks such as quantum circuit simulation, quantum circuit compilation, quantum circuit verification, etc., as well as
* corresponding hands-on experiences of those tools considering actual quantum algorithms as well as quantum computing platforms.Quantum computers have the potential to solve certain tasks that would take millennia to complete even with the fastest (conventional) supercomputer. Numerous quantum computing applications with a near-term perspective (e.g., for finance, chemistry, machine learning, optimization) and with a long-term perspective (i.e., cryptography, unstructured search) are currently investigated. However, while impressive accomplishments can be observed in the physical realization of quantum computers, the development of automated methods and software tools that provide assistance in the design and realization of applications for those devices is at risk of not being able to keep up with this development anymore. This may lead to a situation where we might have powerful quantum computers but hardly any proper means to actually use them.

This module provides an in-depth introduction into the internals of quantum computing software. This includes 
* an elaboration on the differences between classical computing and quantum computing,
* an introduction to the design flow for quantum computing applications,
* a detailed coverage of data-structures and method dedicated to quantum computing,
* a detailed coverage of software tools and methods for important design tasks such as quantum circuit simulation, quantum circuit compilation, quantum circuit verification, etc., as well as
* corresponding hands-on experiences of those tools considering actual quantum algorithms as well as quantum computing platforms.","The module will be held in the form of presentations about the topics covered above followed by corresponding hands-on sessions/exercises. Using slides presentations and whiteboard sketches, the main concepts of the respectively considered topics are provided. In addition, the students will have the opportunity to deepen their knowledge through individual hands-on experiences with corresponding software tools.","Lecture slides, software tools.","M. A. Nielsen, I. L. Chuang: Quantum Computation and Quantum Information. Cambridge University Press (2010)
A. Zulehner and R. Wille. Introducing Design Automation for Quantum Computing. Springer, 2020.",242,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3397169/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2388,Tensor Networks,5.0,-,from Summer semester 2021,"Mendl, Christian",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"The assessment is by means of a written exam of 90 minutes, or a 20 minute oral examination. Problems on the underlying approximation theory test whether students can apply the acquired knowledge and methods to a new domain. Problems related to the graphical representation may ask students to express an algorithm stated in matrix notation into a graphical form.  The exam assesses the knowledge of tensor network methods for simulating quantum systems for example by asking them to tailor an algorithm for a given quantum Hamiltonian. Reaching a certain fraction of the maximum number of homework points can be rewarded by a grade step bonus (“eine Notenstufe”) in the evaluation of the exam. The exact details are timely announced at the beginning of the lecture.",No,Yes,"•	MA0901 Linear Algebra for Informatics
•	MA0902 Analysis for Informatics
•	IN0018  Discrete Probability Theory
•	Knowledge about quantum mechanics or computing helpful (but not a formal prerequisite)","After successful completion of this module, students are familiar with the mathematical formalism and graphical notation for tensor networks. They can assess and apply tensor network approaches for approximating high-dimensional data. They understand why tensor network methods are suitable for simulating strongly correlated quantum systems, and are familiar with corresponding algorithms.","- Fundamentals and graphical representation of tensor networks
- Mathematical approximation theory
- Backpropagation through tensor network operations
- Simulating strongly correlated quantum systems and digital quantum computers
- Probability distribution sampling using tensor networks- Fundamentals and graphical representation of tensor networks
- Mathematical approximation theory
- Backpropagation through tensor network operations
- Simulating strongly correlated quantum systems and digital quantum computers
- Probability distribution sampling using tensor networks","The whiteboard lectures convey the mathematical formalism and graphical representation of tensor network methods and algorithm in-depth. The accompanying exercises for individual study deepen the understanding of the topics explained in the lecture, and foster the creative application of the learnt techniques.","Whiteboard or digital tablet, slides","W. Hackbusch, S. Kühn:  A new scheme for the tensor representation.  J. Fourier Anal. Appl. 15, 706 (2009)

M. Espig, W. Hackbusch, S. Handschuh, R. Schneider: Optimization problems in contracted tensor networks. Comput. Visual Sci. 14, 271 (2011)

U.  Schollwöck: The density-matrix renormalization group in the age of matrix product states. Annals of Physics 326, 96 (2011)

R. Orús: Tensor networks for complex quantum systems. Nature Reviews Physics 1, 538 (2019)

J. Haegeman, Ch. Lubich, I. Oseledets, B. Vandereycken, F. Verstraete: Unifying time evolution and optimization with matrix product states.  Phys. Rev. B 94, 165116 (2016)

L. Vanderstraeten, J. Haegeman, F. Verstraete:  Tangent-space methods for uniform matrix product states.  SciPost Phys. Lect. Notes 7 (2019)

H.-J. Liao, J.-G. Liu, L. Wang, T. Xiang: Differentiable programming tensor networks. Phys. Rev. X 9, 031041 (2019)",243,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2809143/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2387,Time Integration and Differential Equations,5.0,-,from Summer semester 2021,"Schulz, Martin",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,60.0,90.0,Depending on course size either oral exam (30min per student) or 60min written exam. Both options are without additional aids and result in one grade for the course. Questions allow to assess the student’s ability to understand the fundamental concepts and interplay of time and space discretization methods to develop solvers for time dependent partial differential equations.,No,Yes,"MA0902 Analysis for Informatics
Basic knowledge on numerics (e.g. via course on numerical programming), Basic Python programming skills for the tutorials","Upon completion of the module students will be able to develop solvers for initial value problems of certain classes of partial differential equations. Furthermore, they will be able to evaluate some of them regarding various numerical properties. They will be able to understand the interplay between time and various space discretizations. Finally, they will be able to apply advanced time integration methods.","- Basics
-- Basics of ordinary differential equations
-- Basics of standard time integration (Runge-Kutta)
-- Dispersion properties
-- Splitting methods
- Partial differential equations (PDEs)
-- Classification
-- Analytical properties and solutions
- Discretization of spatial dimension
- Discretization of PDE operators
- DE solvers on high-performance computers
- Advanced time integration (examples)
-- Semi-Lagrangian Methods
-- Spectral Deferred Correction Methods
-- Exponential time integration
-- Parareal
-- Parallel Full Approximation Scheme in Space and Time (PFASST)- Basics
-- Basics of ordinary differential equations
-- Basics of standard time integration (Runge-Kutta)
-- Dispersion properties
-- Splitting methods
- Partial differential equations (PDEs)
-- Classification
-- Analytical properties and solutions
- Discretization of spatial dimension
- Discretization of PDE operators
- DE solvers on high-performance computers
- Advanced time integration (examples)
-- Semi-Lagrangian Methods
-- Spectral Deferred Correction Methods
-- Exponential time integration
-- Parareal
-- Parallel Full Approximation Scheme in Space and Time (PFASST)","Lecture, Tutorials, Assignments for self-study and consolidation","Slides of lectures, excercise sheets with assignments, other working material","Hairer, E., Norsett, S. P., & Wanner, G. (1987). Solving ordinary differential equations I: Nonstiff problems.
Durran, D. R. (2010). Numerical Methods for Fluid Dynamics (Vol. 32). 
Various research papers which will be announced during the course.",244,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2809326/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2311,Turbulent Flow Simulation on HPC-Systems,5.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,150.0,45.0,105.0,"Type of assessment: exercise work

Students work on three different exercises. Each of these assignments consists of submission of code, submission of a short report (3-5 pages), written answers to questions, and a short oral examination. The submitted code shows the participants' ability to implement turbulence models and to write parallel code for high-performance computing (HPC) systems. The short report demonstrates that the students are able to analyze turbulence models and results of parallel HPC code. Written answers show that the students understand the problems arising in modelling turbulence, HPC and the different approaches to the overall topic computational fluid dynamics (CFD). The oral examinations assure that the students are able to list, explain, and interpret different aspects of HPC and fluid mechanical problems.

For exercise 1, the weighting is: code (1/4), report (1/4), written answers (1/4), oral examination (1/4).
For exercise 2, the weighting is: code (15/40), report (15/40), written answers (5/40), oral examination (5/40).
For exercise 3, the weighting is: code (1/3), report (1/3), written answers (1/6), oral examination (1/6).

The final grade is a weighted average of the results of the three worksheets with the following weighting: exercise 1 (1/6), exercise 2 (1/2), exercise 3 (1/3).",No,No,IN0019 Numerical Programming and/or IN2147 Parallel Programming,"After participation in this module, the students are able to understand problems in the field of modelling turbulent flows. They can analyze and implement algorithms to solve the corresponding model equations. Furthermore they can implement these algorithms in parallel code for distributed computing systems and can thus execute parallel simulations.
They are able to develop an understanding of the different approaches to computational fluid dynamics by the two fields of research (computer science, fluid dynamics) and they can thus successfully apply the learned techniques of effective work in interdisciplinary teams.","- introduction of the RANS-equations for incompressible flows: concept of RANS and a short introduction to turbulence
- introduction to programming in C++, numerical discretization of conservation equations, techniques for solving incompressible flow problems, algorithms for solving differential equations, visualization of simulation data
- introduction to parallelization, application of existing toolkits
- introduction to applied turbulence modelling, method for validating simulation results, creation of experimental and numerical results and their processing- introduction of the RANS-equations for incompressible flows: concept of RANS and a short introduction to turbulence
- introduction to programming in C++, numerical discretization of conservation equations, techniques for solving incompressible flow problems, algorithms for solving differential equations, visualization of simulation data
- introduction to parallelization, application of existing toolkits
- introduction to applied turbulence modelling, method for validating simulation results, creation of experimental and numerical results and their processing","This module comprises a practical course. The theoretical contents of the module will be taught by talks and presentations of the supervisors. Students will be encouraged to study literature to get involved with the topics in depth. Specific problems are posed as homework assignments. In these assignments students implement turbulence models and related parts. Simulation runs have to be carried out to check correctness. The students work on the assignments in small groups and get, if necessary, advice by the supervisors during the computer lab session. The participants submit their solution and get feedback. A short discussion takes place after an assignment is submitted and corrected. The supervisors and the students discuss on the implementation as well as on the theoretical background.","slides, blackboard presentations, handouts, lecture notes","1. David Wilcox: Turbulence Modeling for CFD 
2. Paul A. Libby: Introduction to Turbulence 
3. Stephen B. Pope: Turbulent Flows 
4. M. Griebel, T. Dornseifer and T. Neunhoeffer: Numerical
Simulation in Fluid Dynamics: A Practical Introduction.",245,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1060610/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2390,Advanced Deep Learning for Computer Vision: Visual Computing,8.0,-,from Summer semester 2021,Nie,Department of Computer Science,-,Master,-,-,one semester,winter/summer semester,English,-,240.0,75.0,165.0,"- Written test of 60 minutes at the end of the course (for lecture)
- The lecture will have reading assignments (e.g., from the DeepLearning book and recent CVPR/ICCV/ECCV papers)
- After each practical session, the students will have to provide the written working code to the teaching assistant for evaluation. The students will be awarded a bonus in case they successfully complete all practical assignments.
- In the written exam, we will ask questions regarding lecture theory
- In addition, to the written exam, the results of the projects will be evaluated; we will evaluate projects on a (bi-)weekly basis including reports (33.33%), oral presentations (33.33%), and code/submissions (33.33%).",No,Yes,"MA0902 Analysis for Informatics
MA0901 Linear Algebra for Informatics
IN2346 Introduction to Deep Learning (expert knowledge required!)

This is the advanced lecture for deep learning with a specific focus on computer vision. Taking the “Introduction to Deep Learning” course is expected.","Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks, in particular in the context of computer vision tasks in visual computing. In addition to the theoretical foundations, a significant aspect lies on the practical realization and training of neural networks.","Note, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Dynamic Vision”. The two lectures share some theoretical content, but the “Visual Computing” module provides a clear focus on visual computing tasks, which is especially important for the practical part in the form of a semester-long project.

Common lectures with “ADL4CV: Dynamic Vision” lecture:
- Recap of Neural Networks and CNNs
- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)
- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs)
- Autoregressive Networks and their parallelization
- Probabilistic vs deterministic generative methods
- Graph neural networks
- Transformer Networks
- Open Problems in Deep Learning for Computer Vision

Unique lectures for this module:
- Multi-dimensional CNNs: from audio to 3D scene environments; 3D vs multi-view CNNs, sparse CNNs (e.g., Octrees); 
- Pointer Networks (focus on Scene Understanding, Meshes and 3D Geometry)
- Neural rendering: From Novel View Point synthesis, Video Generation and Editing
- Deep Fakes: Creation and Detection 
- CNNs on meshes: learning on structured and unstructured graphs. Mesh data structures and derived convolution operators on meshes using differential geometry.Note, this lecture is closely related (and mutually exclusive) to the lecture “Advanced Deep Learning for Computer Vision: Dynamic Vision”. The two lectures share some theoretical content, but the “Visual Computing” module provides a clear focus on visual computing tasks, which is especially important for the practical part in the form of a semester-long project.

Common lectures with “ADL4CV: Dynamic Vision” lecture:
- Recap of Neural Networks and CNNs
- Advanced Auto-encoders: Probabilistic approaches and the mathematical foundations (e.g., variational auto-encoders)
- Generative Adversarial Networks (from Goodfellow to CycleGANs and Progressive GANs)
- Autoregressive Networks and their parallelization
- Probabilistic vs deterministic generative methods
- Graph neural networks
- Transformer Networks
- Open Problems in Deep Learning for Computer Vision

Unique lectures for this module:
- Multi-dimensional CNNs: from audio to 3D scene environments; 3D vs multi-view CNNs, sparse CNNs (e.g., Octrees); 
- Pointer Networks (focus on Scene Understanding, Meshes and 3D Geometry)
- Neural rendering: From Novel View Point synthesis, Video Generation and Editing
- Deep Fakes: Creation and Detection 
- CNNs on meshes: learning on structured and unstructured graphs. Mesh data structures and derived convolution operators on meshes using differential geometry.","The lectures will provide extensive theoretical aspects of neural networks and in particular deep learning architectures, specifically for advanced methods in the field of Computer Vision. 
The practical sessions will be key, students shall get familiar with Deep Learning through hours of training and testing. They will work with PyTorch and implement advanced network architectures. The project will have a focus on visual computing, including the following topics: 
- neural rendering 
- generative neural networks (GANs)
- neural radiance fields
- deep fake generation
- media forensics (forgery detection)
- scene reconstruction (multi-view, depth sensors, etc.)
- generative geometric models
- semantic scene understanding (object detection, instance segmentation, semantic segmentation)
- 3D scene understanding for autonomous driving (e.g., with Lidar/Radar)
- reinforcement learning (e.g., for 3d modeling, 3d auto-scanning, 3d navigation)
- natural language processing (NLP) for scene understanding

We recommend to take a look at the recent list of publications at  https://niessnerlab.org/ to get a better idea of recent research projects.","Projector, blackboard, PC","- Slides given during the course
- www.deeplearningbook.org",250,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2808965/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT323002,AI Governance,2.0,-,from Summer semester 2025,Gro,Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,English,-,60.0,30.0,30.0,"Written examination in the form of three submissions throughout the semester, of which two have to be passed. Each submission is assessed as ""passed"" or ""failed"".

The submissions allow students to apply the contents from the lecture series, including to critically reflect AI as well as the possibilities and challenges of AI governance. Students will apply three different foundational frameworks, which are grounded in the content discussed in the lecture. Using these frameworks, they will assess and analyze, e.g., the risks or impact of certain AI systems (such as through risk assessment or impact assessment frameworks) and come to a conclusion regarding impact of the assessment on AI development or AI governance efficacy.",No,Yes,Basic understanding of the fundamentals of artificial intelligence,"After attending this class, students can understand, assess, and contextualize different facets of AI governance based on the EU AI Act and its operationalization at the level of university education.","As AI technologies increasingly permeate various sectors, it is crucial for future developers to understand the ethical, legal, and social dimensions of their work. The lecture series “AI Governance” will invite experts to talk about topics ranging from responsible AI over participatory AI to the European AI Act. The structure of the lecture series is provided by the EU AI Act's obligations to high-risk AI system providers, including data and data governance, transparency, human oversight, or risk management. The lecture series will provide students with both theoretical and practical approaches to AI governance based on the European legal framework. 
All lectures will link to ""Responsible AI"" and “Participatory AI”, covering principles such as fairness, accountability, and transparency, and exploring the role of diverse stakeholders in the AI development process. Thereby, methods for engaging communities and ensuring that AI solutions reflect a wide range of perspectives and needs will be highlighted. With a focus on regulatory frameworks, particularly the EU AI Act, students will learn about risk assessment, compliance, and the responsibilities of AI practitioners in adhering to the AI Act. 

The lecture series will include sessions on:
- The context of the EU AI Act
- The EU AI Act as legal framework
- Risk Management (Art 9)
- Risk Management (e.g., NIST)
- Data and Data Governance (Art 10)
- Record-Keeping (Art 12)
- Transparency (Art 13)
- Human Oversight (Art 14)
- Accuracy and Robustness (Art 15)
- Cybersecurity (Art 15)
- Post-Market Monitoring (Art 72)
- Quality Management System (Art 17)
- AI literacy (Art 4)
- Fundamental Rights Impact Assessment (Art 27)
- AI AuditsAs AI technologies increasingly permeate various sectors, it is crucial for future developers to understand the ethical, legal, and social dimensions of their work. The lecture series “AI Governance” will invite experts to talk about topics ranging from responsible AI over participatory AI to the European AI Act. The structure of the lecture series is provided by the EU AI Act's obligations to high-risk AI system providers, including data and data governance, transparency, human oversight, or risk management. The lecture series will provide students with both theoretical and practical approaches to AI governance based on the European legal framework. 
All lectures will link to ""Responsible AI"" and “Participatory AI”, covering principles such as fairness, accountability, and transparency, and exploring the role of diverse stakeholders in the AI development process. Thereby, methods for engaging communities and ensuring that AI solutions reflect a wide range of perspectives and needs will be highlighted. With a focus on regulatory frameworks, particularly the EU AI Act, students will learn about risk assessment, compliance, and the responsibilities of AI practitioners in adhering to the AI Act. 

The lecture series will include sessions on:
- The context of the EU AI Act
- The EU AI Act as legal framework
- Risk Management (Art 9)
- Risk Management (e.g., NIST)
- Data and Data Governance (Art 10)
- Record-Keeping (Art 12)
- Transparency (Art 13)
- Human Oversight (Art 14)
- Accuracy and Robustness (Art 15)
- Cybersecurity (Art 15)
- Post-Market Monitoring (Art 72)
- Quality Management System (Art 17)
- AI literacy (Art 4)
- Fundamental Rights Impact Assessment (Art 27)
- AI Audits",Presentations with slides due to the nature of this class with speakers from different disciplines as well as from theory and practice.,Slides,"• EU AI Act: European Parliament and The Council. 2024. REGULATION (EU) 2024/1689 OF THE EUROPEAN PARLIAMENT AND OF THE COUNCIL of
13 June 2024 laying down harmonised rules on artificial intelligence and amending Regulations (EC) No 300/2008, (EU) No 167/2013, (EU) No
168/2013, (EU) 2018/858, (EU) 2018/1139 and (EU) 2019/2144 and Directives 2014/90/EU, (EU) 2016/797 and (EU) 2020/1828 (Artificial Intelligence
Act). https://eur-lex.europa.eu/eli/reg/2024/1689/oj/eng
• EU AI Act & Risk Management: Schuett J. Risk Management in the Artificial Intelligence Act. European Journal of Risk Regulation. 2024;15(2):367-385. doi:10.1017/err.2023.1",251,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4390207/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2359,Blockchain-based Systems Engineering,5.0,-,from Winter semester 2018/19,"Matthes, Florian",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,150.0,60.0,90.0,"Type: Written exam
The assessment is by means of a written exam of 90 minutes. Students are required to be able to answer questions regarding the contents of the lecture without further aids. Answering the questions requires partly own formulations, partly own calculations.
Amount of Work:
Comprehensive knowledge about the contents of the lecture and the exercises has to be gained. The completion of voluntary homework assignments is recommended for the successful passing.",No,No,"•	IN0002: Fundamentals of Programming
•	IN0006: Introduction to Software Engineering
•	IN0009: Basic Principles: Operating Systems and System Software","After the successful participation in this module, the students are able to analyze Blockchain-based application systems. Further, they are able to create these systems for given use cases and to select appropriate technology. They understand the technological foundations such that they are enabled to comprehend and assess alternative distributed ledger technologies.","Blockchain technology and, in general, distributed ledger technology (DLT) provide the technical foundation for the development and usage of innovative, decentralized distributed systems. In this lecture, we analyze the characteristics of these technologies. Additionally, students should be empowered to analyze and develop Blockchain-based solutions. Following contents are going to be covered:
•	Cryptographic basics
•	Peer to peer-networks
•	Data structure and setup of Blockchain
•	Consensus mechanisms
•	Smart contracts & smart contract Engineering
•	Use cases of digital ledger technologies
•	Alternative DLT approaches
•	Risks, challenges, and limitations of the technology
•	Trends and developments in BlockchainBlockchain technology and, in general, distributed ledger technology (DLT) provide the technical foundation for the development and usage of innovative, decentralized distributed systems. In this lecture, we analyze the characteristics of these technologies. Additionally, students should be empowered to analyze and develop Blockchain-based solutions. Following contents are going to be covered:
•	Cryptographic basics
•	Peer to peer-networks
•	Data structure and setup of Blockchain
•	Consensus mechanisms
•	Smart contracts & smart contract Engineering
•	Use cases of digital ledger technologies
•	Alternative DLT approaches
•	Risks, challenges, and limitations of the technology
•	Trends and developments in Blockchain","Lecture, central exercise",Presentation with digital slides,"Narayanan, A., Bonneau, J., Felten, E., Miller, A., & Goldfeder, S. (2016). Bitcoin and Cryptocurrency Technologies: A Comprehensive Introduction. Princeton University Press",252,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1616748/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2073,Cloud Computing,4.0,-,Always,"Gerndt, Hans",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,summer semester,English,-,120.0,45.0,75.0,"The exam takes the form of an written 60 minutes test without aids. Questions allow to asses acquaintance with the concepts of Cloud and Grid Computing. Questions describing usage scenarios and asking for the evaluation of the learned techniques in these scenarios are used to assess the ability to apply the learned techniques. In a discussion, their ability to solve research question is assessed.",Yes,No,Knowledge in computer architectures and distributed systems would be helpful.,"The students know the goals of Cloud and Grid computing. They can present application scenarios in different domains. They are familiar with the fundamental techniques in the areas security, application development and resource management. They can identify the differences and similarities between Cloud and Grid computing and distributed systems. They are able to participate in Cloud and Grid-related research projects.","The lecture starts with an introduction and a presentation of the base technologies for Cloud and Grid computing. The layered architecture of Grids and the base services are presented. Cloud Computing is then introduced and the different models SaaS, PaaS, IaaS. The list of base services is extended for Cloud Computing. The lecture also covers a discussion of legal issues.The lecture starts with an introduction and a presentation of the base technologies for Cloud and Grid computing. The layered architecture of Grids and the base services are presented. Cloud Computing is then introduced and the different models SaaS, PaaS, IaaS. The list of base services is extended for Cloud Computing. The lecture also covers a discussion of legal issues.","The concepts of Grid and Cloud Computing are introduced in the lecture. In the exercises, the student work on assignments that allow them to train the development of Cloud applications. References to current literature allow the students to deepen their understanding of the concepts.","Slides, Script, Exercise Sheets, Prepared Code Snippets.","- Berman, F., Fox, G., Hey, A. (ed.): Grid Computing-Making the Global Infrastructure a Reality, Wiley, Chichester 2003 (collection of 43 contributions, Grids and applications)
- Di Martino et.al. Engineering the Grid, American Scientific Publishers, 2004, (collection of 34 contributions to application and technology of grids)
- Furht, B., Escalante, A.: Handbook of Cloud Computing, Springer 2010
- Chorafas, D.: Cloud Computing Strategies, CRC Press 2011",253,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456656/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2406,Fundamentals of Artificial Intelligence,6.0,-,from Winter semester 2022/23,"Althoff, Matthias",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,75.0,105.0,"Written exam at the end of the semester lasting 90min. The questions will cover most of the learned material and are typically shorter than the problems solved in the exercise, but similar in difficulty. All questions will be aligned with the learning outcomes. The correct answers to these questions may involve mathematical derivations and calculations. As an incentive to create artificial intelligence oneself, we provide programming challenges: if students solve a required number of programming challenges, they obtain a 0.3 grade bonus for their exam. During the exam, students are allowed to use a pen (color should not be red or green and pencils are not allowed), a non-programmable calculator, and a formula sheet. Whether this formula sheet is provided or can be written by the students will be announced before each exam.",No,Yes,"Previous attendance of
- IN0007 Fundamentals of Algorithms and Data Structures
- IN0015 Discrete Structures
- IN0018 Discrete Probability Theory
is beneficial. However, all content is taught from ground up and the listed lectures are not essential. Students who have not attended these lectures will have to invest additional time.","After attending the module, you are able to create artificial intelligence on a basic level using search techniques, logics, probability theory and decision theory. Your learned abilities will be the foundation for more advanced topics in artificial intelligence. In particular, you will acquire the following skills:
- You can analyze problems of artificial intelligence and judge how difficult it is to solve them.
- You can recall the basic concepts of intelligent agents and know possible task environments.
- You can formalize, apply, and understand search problems.
- You understand the difference between constraint satisfaction and classical search problems as well as apply and evaluate various constraint satisfaction approaches.
- You can critically assess the advantages and disadvantages of logics in artificial intelligence.
- You can formalize problems using propositional and first-order logic.
- You can apply automatic reasoning techniques in propositional and first-order logic.
- You understand the advantages and disadvantages of probabilistic and logic-based reasoning.
- You can apply and critically asses methods for probabilistic reasoning with Bayesian networks and Hidden Markov Models.
- You understand and know how to compute rational decisions.
- You have a basic understanding on how a machine learns.
- You know the basic areas and concepts in robotics.","- Task environments and the structure of intelligent agents.
- Solving problems by searching: breadth-first search, uniform-cost search, depth-first search, depth-limited search, iterative deepening search, greedy best-first search, A* search.
- Constraint satisfaction problems: defining constraint satisfaction problems, backtracking search for constraint satisfaction problems, heuristics for backtracking search, interleaving search and inference, the structure of constraint satisfaction problems.
- Logical agents: propositional logic, propositional theorem proving, syntax and semantics of first-order logic, using first-order logic, knowledge engineering in first-order logic, reducing first-order inference to propositional inference, unification and lifting, forward chaining, backward chaining, resolution.
- Bayesian networks: acting under uncertainty, basics of probability theory, Bayesian networks, inference in Bayesian networks, approximate inference in Bayesian networks.
- Hidden Markov models: time and uncertainty, inference in hidden Markov models (filtering, prediction, smoothing, most likely explanation), approximate inference in hidden Markov models.
- Rational decisions: introduction to utility theory, utility functions, decision networks, the value of information, Markov decision processes, value iteration, policy iteration, partially observable Markov decision processes.
- Learning: types of learning, supervised learning, learning decision trees, reinforcement learning.
- Introduction to robotics: robot hardware, robotic perception, path planning, planning uncertain movements, control of movements, application domains.- Task environments and the structure of intelligent agents.
- Solving problems by searching: breadth-first search, uniform-cost search, depth-first search, depth-limited search, iterative deepening search, greedy best-first search, A* search.
- Constraint satisfaction problems: defining constraint satisfaction problems, backtracking search for constraint satisfaction problems, heuristics for backtracking search, interleaving search and inference, the structure of constraint satisfaction problems.
- Logical agents: propositional logic, propositional theorem proving, syntax and semantics of first-order logic, using first-order logic, knowledge engineering in first-order logic, reducing first-order inference to propositional inference, unification and lifting, forward chaining, backward chaining, resolution.
- Bayesian networks: acting under uncertainty, basics of probability theory, Bayesian networks, inference in Bayesian networks, approximate inference in Bayesian networks.
- Hidden Markov models: time and uncertainty, inference in hidden Markov models (filtering, prediction, smoothing, most likely explanation), approximate inference in hidden Markov models.
- Rational decisions: introduction to utility theory, utility functions, decision networks, the value of information, Markov decision processes, value iteration, policy iteration, partially observable Markov decision processes.
- Learning: types of learning, supervised learning, learning decision trees, reinforcement learning.
- Introduction to robotics: robot hardware, robotic perception, path planning, planning uncertain movements, control of movements, application domains.","The module consists of a lecture and exercise classes. The content of the lecture is presented via slides, which are completed during the lecture using the blackboard and/or an electronic writing pad. Students are encouraged to additionally study the relevant literature. In the exercise classes, the learned content is applied to practical examples to consolidate the content of the lecture. Students should ideally have tried to solve the problems before they attend the exercise. To encourage more participation, students are regularly asked questions or encouraged to participate in online polls. As an incentive to create artificial intelligence oneself, we provide programming challenges: if students solve a required number of programming challenges, they obtain a 0.3 grade bonus for their exam.","Slides, blackboard, electronic writing pad, exercise sheets;","- P. Norvig and S. Russell: Artificial Intelligence: A Modern Approach, 
Prentice Hall, 4th edition. (English version)
- P. Norvig and S. Russell: Künstliche Intelligenz: Ein moderner Ansatz, 
Pearson Studium, 4. Auflage. (German version)
- W. Ertel: Grundkurs Künstliche Intelligenz: Eine praxisorientierte 
Einführung, Springer, 4. Auflage.
- P. Zöller-Greer: Künstliche Intelligenz: Grundlagen und 
Anwendungen, composia, 2. Auflage.
- D. L. Poole and A. K. Mackworth: Artificial Intelligence: Foundations of 
Computational Agents, Cambridge University Press.
- P. C. Jackson Jr: Introduction to Artificial Intelligence, Dover 
Publications.",254,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3106358/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2079,IT-Consulting,3.0,-,Always,"Bichler, Martin",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,"The examination mainly takes the form of solving case studies in team work. The results are summarized in presentations for the case study and graded. In addition, one of the prepared case studies is presented in front of all students (15-25 minutes) and the presentation is included into the final grade. In order to successfully process the case studies, students must be able to create their own adequate solutions to the typical problems of IT consulting. This requires in particular the ability to assess the fundamental strategical decisions in IT management and their implications. The team work ensures that the attained understanding of fundamental IT consulting processess and their interrelationships can be communicated. The consecutive presentation of results verifies whether the developed solutions can be defended in front of others.",No,No,"IN0006 Introduction to Software Engineering,
IN0008 Fundamentals of Databases,
Bachelor's in Informatics or
Bachelor's in Information Systems",After successful completion of the module students are able to analyze the most important IT-Consulting processes and their interdependences. Participants are capable to evaluate the major strategic decision and their implications within the field of IT-Management. Participants understand typical problems of implementing IT-Consulting such as the definition of an IT-Strategy or successful IT-Organization. They can develop adequate solutions and justify them in front of third parties.,"The module offers the students an overview over the basic structures and current problems of IT-Consulting. Concepts like IT-Strategy, IT-Governance, IT-Organization and Processes are presented. Moreover, the module introduces the students to IT-Controlling, IT-Cost- and IT-Value Management. All topics are vividly explained and discussed by the use of practically relevant case studies.The module offers the students an overview over the basic structures and current problems of IT-Consulting. Concepts like IT-Strategy, IT-Governance, IT-Organization and Processes are presented. Moreover, the module introduces the students to IT-Controlling, IT-Cost- and IT-Value Management. All topics are vividly explained and discussed by the use of practically relevant case studies.","The module consists of a seminar, in which several external experts from IT consulting present the content of the module, parts of the corresponding literature and case studies interactively. Students are accustomed with the fundamental methods of IT consulting and learn to differentiate their applications. Furthermore, participants work in teams to design solutions for exemplary case studies of the most important current challenges within IT consulting. Based on this, they prepare and give presentations during the seminar, which enhances a constructive assessment of the work of others and the defense of their own work in front of third parties.",The external experts use (PowerPoint) slides in the seminar and make them accessible to the students together with additional literature via an Elearning platform. Participants have the possibility to actively communicate on this platform and to ask questions. They summarize their case study team work on PC and present their solutions with (PowerPoint) slides.,The literature of the module consists of current case studies and slides from the practice of IT-Consulting.,255,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456924/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2396,Advanced Seminar Information Systems,5.0,-,from Winter semester 2021/22,"Bichler, Martin",Academic Programs Informatik,-,Master,-,-,one semester,winter/summer semester,German/English,-,150.0,30.0,120.0,"Type of Assessment: Research paper

Before the start of the seminar, each participant receives a challenging scientific topic from the discipline of information systems, for which s/he prepares a written paper using independently researched scientific literature. The results of the paper are presented to the other participants of the seminar and supported by visual media such as beamers or slides. It is also evaluated how the student responds to questions, suggestions and discussion points concerning his/her work and presentation, and how s/he participates in the scientific discussion on the work and presentations of the other participants. Before the start of the seminar, the respective lecturer will announce how the individual performances will be weighted to determine the grade.",Yes,No,Possibly previous knowledge from the specific subject area necessary,"Participants possess the necessary methodological and interdisciplinary skills to familiarize themselves with a challenging scientific topic in the discipline of information systems, to independently prepare a scientific seminar paper, to present it and to analyze and comparatively evaluate the results. They are proficient in working with scientific literature (researching, evaluating, citing) and can present essential aspects in a paper and in a presentation.","- Independent development of a challenging scientific topic
- Preparation of a seminar paper with an overview of references
- Presentation and discussion of scientific results

This module is offered by various chairs. The chairs choose suitable topics from their area of expertise and support the students in learning the professional and scientific skills.- Independent development of a challenging scientific topic
- Preparation of a seminar paper with an overview of references
- Presentation and discussion of scientific results

This module is offered by various chairs. The chairs choose suitable topics from their area of expertise and support the students in learning the professional and scientific skills.","Participants work independently on seminar papers on a challenging scientific topic in the discipline of information systems and present and discuss their results.
The accompanying paper summarizes the essential concepts of the topic and provides an overview of references.","Beamer, slides, whiteboard, report, possibly tool presentation and/or animations",Scientific publications in the respective area,256,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3003603/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2101,Network Security,5.0,-,Always,"Carle, Georg",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,"The examination will take the form of a 75-minute examination.
Questions of comprehension and arithmetic tasks check the familiarity with the technologies and methods of cryptographic procedures and protocols and mechanisms for network security covered in the module.",No,Yes,"IN0009 Basic Principles: Operating Systems and System Software, IN0010 Introduction to computer networking and distributed systems","Participants understand security goals for the Internet and the components in which communication protocols are implemented. They understand the possibilities available to attackers in the network. They understand the protection offered by cryptographic and network security mechanisms, and have the knowledge to apply network security protocols and implement architectures that can achieve specific security goals.","The course provides an introduction to the field of network security. Starting with possible threats and attack scenarios, requirements for providing specific security services are derived. After introducing the basic concepts of security mechanisms, the integration of security mechanisms into network architectures and network protocols are discussed. Security vulnerabilities of existing network architectures are also discussed.
As a basis for the realization of security mechanisms, cryptographic algorithms (in particular symmetric cryptography, public key cryptography and cryptographic hash functions) are presented.  Afterwards, the basics and methods for security protocols for authentication, authorization, access control, message integrity, confidentiality and non-repudiation are discussed. Subsequent sections present specific security mechanisms, in particular of the TCP/IP protocol family. The standard examples include PKI, Kerberos, IPSec, and TLS, Firewall-architectures and Intrusion Detection Systems.The course provides an introduction to the field of network security. Starting with possible threats and attack scenarios, requirements for providing specific security services are derived. After introducing the basic concepts of security mechanisms, the integration of security mechanisms into network architectures and network protocols are discussed. Security vulnerabilities of existing network architectures are also discussed.
As a basis for the realization of security mechanisms, cryptographic algorithms (in particular symmetric cryptography, public key cryptography and cryptographic hash functions) are presented.  Afterwards, the basics and methods for security protocols for authentication, authorization, access control, message integrity, confidentiality and non-repudiation are discussed. Subsequent sections present specific security mechanisms, in particular of the TCP/IP protocol family. The standard examples include PKI, Kerberos, IPSec, and TLS, Firewall-architectures and Intrusion Detection Systems.","Lecture for content transfer, as well as tasks for self-study in order to deepen the subject, as well as programming challenges to test and apply the learned knowledge.","Lecture slides, whiteboard, exercise sheets, demos","- R. Bless, S. Mink, E.-O. Blaß, M. Conrad, H.-J. Hof, K. Kutzner, M. Schöller: ""Sichere Netzwerkkommunikation"", Springer, 2005, ISBN: 3-540-21845-9
- Niels Ferguson, B. Schneier: ?Practical Cryptography?, Wiley, 1st edition, March 2003.
- G. Schäfer. Netzsicherheit ? Algorithmische Grundlagen und Protokolle. Soft cover, 422 pages, dpunkt.verlag, 2003.

Additional references to articles and other resources are given in the slides.",257,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456996/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2394,Requirements Engineering,3.0,-,from Summer semester 2021,"Pretschner, Alexander",Department of Computer Science,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"The assessment is a written closed-book exam of 60 minutes. 

Knowledge questions, partly in the form of multiple-choice questions, are used to test whether students can recognize and classify basic terms and concepts. 
In modeling tasks, students demonstrate their ability to apply the learned concepts in an exemplary fashion.
Finally, they analyze a given problem regarding the challenges explained in the lecture and evaluate different solution strategies in this context.

The provided exercise sheet is not graded.",No,Yes,IN0006 Introduction to Software Engineering,"After successful completion of this module, students are familiar with the basic concepts and methods of Requirements Engineering. They have the ability to analyse typical scenarios and identify typical challenges. Furthermore, students can apply and evaluate suitable concepts and methods for concrete problems.","Requirements Engineering (RE) as a first and ongoing activity of a development project, is crucial for the success of every project, as its outcome determines the further course of the project.

In this activity, the stakeholders are identified. Their goals are analysed and conflicting goals resolved. A variety of elicitation methods and decomposition techniques are applied to deduce concrete requirements. Depending on the context of the project, different methods to formulate these requirements are necessary. Continuous quality control is essential to mitigate the risk of project failure due to ill-formulated or invalid specifications.
Furthermore, non-functional requirements need to be formulated with great care to minimize subjectiveness. One major challenge in the context of RE is to manage permanently occurring change. This change can happen due to moving goals of the stakeholders or changes in the environment of the system under construction.

The lecture ""Requirements Engineering"" covers all important topics of Requirements Engineering (RE), especially the RE-Tasks, different types of requirements, requirement extraction, negotiation, documentation, and management. It is shown how the first, mostly informal, requirements are described, concretized, potentially formalized, managed, and evolved. This lecture considers different process models that are used for and within RE.
This forms a solid basis for students to become active in both industrial requirements engineering and RE research.Requirements Engineering (RE) as a first and ongoing activity of a development project, is crucial for the success of every project, as its outcome determines the further course of the project.

In this activity, the stakeholders are identified. Their goals are analysed and conflicting goals resolved. A variety of elicitation methods and decomposition techniques are applied to deduce concrete requirements. Depending on the context of the project, different methods to formulate these requirements are necessary. Continuous quality control is essential to mitigate the risk of project failure due to ill-formulated or invalid specifications.
Furthermore, non-functional requirements need to be formulated with great care to minimize subjectiveness. One major challenge in the context of RE is to manage permanently occurring change. This change can happen due to moving goals of the stakeholders or changes in the environment of the system under construction.

The lecture ""Requirements Engineering"" covers all important topics of Requirements Engineering (RE), especially the RE-Tasks, different types of requirements, requirement extraction, negotiation, documentation, and management. It is shown how the first, mostly informal, requirements are described, concretized, potentially formalized, managed, and evolved. This lecture considers different process models that are used for and within RE.
This forms a solid basis for students to become active in both industrial requirements engineering and RE research.","Lectures, which feature animated slideshows, present the central questions and challenges of requirement engineering. The contents of the lecture are illustrated by realistic examples and hands-on case studies.
A weekly exercise sheet is provided, yet not corrected, for further individual study to deepen the understanding of the concepts explained in the lecture.","Animated Slideshow, weekly exercise sheet (not corrected by tutors)","Ian Sommerville, ""Requirements Engineering: A Good Practice Guide""
Karl Wiegers and Candase Hokanson, ""Software Requirements Essentials: Core Practices for Successful Business Analysis""",258,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2809336/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT4230000,Strategic IT Management,4.0,-,from Winter semester 2022/23,"Matthes, Florian",Department of Computer Science,-,Master,-,-,one semester,winter semester,English,-,120.0,45.0,75.0,"The examination will be in the form of a written exam (90 minutes) in which the students' ability to describe, evaluate and apply models, methods, key figures, visualizations and tools of strategic IT management to given problems in a context-dependent manner will be tested. Successful participation in a voluntary case study or a workshop throughout the exercise can be included as a bonus in the assessment of the exam. The exact regulations for this will be announced in time at the beginning of the module.",No,No,"Bachelor in Informatics or Information Systems, specifically:
-	Fundamentals of Business Information Systems
-	Databases
-	Software Engineering
-	Business Process Management","After participating in the module, students will be able to understand the key challenges, concepts, methods and decision areas of strategic IT management and their interactions. Furthermore, students will understand the relationship between strategic IT management, enterprise architecture management, scaled agile software development and IT governance. Moreover, after participating in the module, students have in-depth knowledge of patterns and frameworks of enterprise architecture management and scaled agile software development in the areas of models, methods, metrics and visualizations, among others.","1. IT Strategy and IT Management Frameworks 
2. IT Governance and IT Organisation
3. Enterprise Architecture Management 
  3.1 Schools of EAM
  3.2 Foundations of EAM
  3.3 Capability Based Planning 
  3.4 Agile EAM and EAM Patterns 
4. Large-scale Agile Software Development
  4.1 Foundations and Frameworks of LSAD 
  4.2 Selected Topics of   LSAD 
5. Case Studies1. IT Strategy and IT Management Frameworks 
2. IT Governance and IT Organisation
3. Enterprise Architecture Management 
  3.1 Schools of EAM
  3.2 Foundations of EAM
  3.3 Capability Based Planning 
  3.4 Agile EAM and EAM Patterns 
4. Large-scale Agile Software Development
  4.1 Foundations and Frameworks of LSAD 
  4.2 Selected Topics of   LSAD 
5. Case Studies","With the help of a slide presentation, the lecture introduces the fundamental concepts of strategic IT management. Furthermore, the understanding of the basic concepts of strategic IT management is deepened in the lectures with the help of appropriate tasks and examples. Through exercises during the lecture and the work on a separate case study, special modeling techniques from enterprise architecture management and from scaled agile software development are explained and practiced. In addition, self-study assignments are provided.","Slide presentation, teamwork","Hanschke, I. (2013). Strategisches Management der IT-Landschaft: Ein praktischer Leitfaden für das Enterprise Architecture Management. Carl Hanser Verlag GmbH Co KG. 

Kaplan, J. D. (2005). Strategic IT portfolio management: governing enterprise transformation. PRTM. 

Buckl, S., Ernst, A. M., Matthes, F., Ramacher, R., & Schweda, C. M. (2009, September). Using enterprise architecture management patterns to complement TOGAF. In 2009 IEEE International Enterprise Distributed Object Computing Conference (pp. 34-41). IEEE. 
Buckl, S., Ernst, J., Lankes, A. M., Matthes (2008).
Enterprise architecture management pattern catalog (version 1.0, february 2008) 

Sandkuhl, K., Fill, H. G., Hoppenbrouwers, S., Krogstie, J., Matthes, F., Opdahl, A., ... & Winter, R. (2018). From expert discipline to common practice: a vision and research agenda for extending the reach of enterprise modeling. Business & Information Systems Engineering, 60(1), 69-80. Chicago 

Uludag, Ö., Kleehaus, M., Caprano, C., & Matthes, F. (2018, October). Identifying and structuring challenges in large-scale agile development based on a structured literature review. In 2018 IEEE 22nd International Enterprise Distributed Object Computing Conference (EDOC) (pp. 191-197). IEEE. 

Dikert, K., Paasivaara, M., & Lassenius, C. (2016). Challenges and success factors for large-scale agile transformations: A systematic literature review. Journal of Systems and Software, 119, 87-108. 
Paasivaara, M., Behm, B., Lassenius, C., & Hallikainen, M. (2018). Large-scale agile transformation at Ericsson: a case study. Empirical Software Engineering, 23(5), 2550-2596. Chicago",259,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3260506/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2018,Augmented Reality,6.0,-,Always,"Plecher, David",Department of Computer Science,Ab WS13/14 6 Credits,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The examination takes the form of a 90-minute written examination. Half of this refers to theoretical concepts, and the other half to abstracted (generalized) characteristics and experiences with the tools and practices used or developed in the exercises and homework. developed in the exercises and homework. The questions will be asked in English; they can be answered in German or English.  No lecture notes are permitted during the exam; a calculator and a dictionary (English mother tongue) may be used as aids.

Knowledge questions test familiarity with the basic concepts of augmented reality (related to the theoretical and overview sections). Short programming tasks, questions on short program examples, and questions on programming concepts test the ability to handle an AR system and to understand and expand small systems (related to the practical exercise part).

Successfully completing of programming tasks is assessed as a graded project as a voluntary mid-term achievement. The tasks are distributed throughout the semester. The points achieved are converted into a grade according to the maximum number of points. If the calculation of 1/3 voluntary mid-term performance and 2/3 of the exam grade results in an improvement, this is accepted as the module grade.",No,Yes,"IN0001 Introduction to Informatics, IN0006 Introduction to Software Engineering, IN0007 Fundamentals of Algorithms and Data Structures, MA0901 Linear Algebra for Informatics, Basic mathematical and programming skills.","At the end of the module students are able to describe and analyze the underlying mathematical and programming aspects (tracking and rendering) of AR systems, and they can extend them towards own, further-reaching solutions. They can also evaluate existing input and output devices regarding their suitability for special application scenarios.","Foundations of Augmented Reality
- Geometric transformations (homogeneous matrices, projective geometry, scene graph)
- Three-dimensional information presentation (OpenGL, 3D APIs)
- Head-mounted displays and other display devices
- Physical foundations of several tracking devices
- Mathematical foundations of optical tracking, sensor fusion and device calibration
- Concepts: augmented reality in comparison with mixed reality, ubiquitous computing, etc.Foundations of Augmented Reality
- Geometric transformations (homogeneous matrices, projective geometry, scene graph)
- Three-dimensional information presentation (OpenGL, 3D APIs)
- Head-mounted displays and other display devices
- Physical foundations of several tracking devices
- Mathematical foundations of optical tracking, sensor fusion and device calibration
- Concepts: augmented reality in comparison with mixed reality, ubiquitous computing, etc.","Lecture, exercise, problems for individual study. The assignments are provided on a weekly basis via the teaching portal. They are discussed in the next exercise class, and a solution is presented. Work on the assignments and participation in the exercise class are voluntary. They serve as a means for students to deepen and test their acquired knowledge – as a self-monitoring aid to prepare for the written exam.

In the second half of the semester, students can participated in a team project (final project) in which they can apply and discuss the learned concepts and methods in a freely selectable application context. Successful presentation of a demonstrator yields a bonus.","Powerpoint slides, films, books, assignment sheets, demonstrations","Excerpts from books and papers from conference proceedings and journals.

Most relevant texts
- D. Schmalstieg and T. Höllerer: Augmented Reality – Principles and Practice. Pearson Education Inc., 2016.
- The OpenGl Programming Guide - The Redbook.
- R. Laganiere: OpenCV 2 - Computer Vision Applications Programming Cookbook, Packt Publishing open source, 2011.
- R. Szeliski: Computer Vision - Algorithms and Applications, Springer Verlag, 2011. 
- R.Hartley and A.Zisserman: Multiple View Geometry in Computer Vision; Cambridge University Press, 2004.
- D.Ballard and C.Brown: Computer Vision.
- R.Tsai: A Versatile Camera Calibration Technique for High Accuracy 3D Machine Vision.
- G. Klein and D. Murray: Parallel Tracking and Mapping for Small AR Workspaces, International Symposium on Mixed and Augmented Reality (ISMAR) 2007.
- J.Rolland, L.Davis, Y. Baillot: A Survey of Tracking Technology for Virtual Environments; in Fundamentals of Wearable Computers and Augmented, 2001.
- D.Allen, G.Bishop, G.Welch: Tracking - Beyond 15 Minutes of Thought; Course 11 at Siggraph 2001.
- J.Rolland, H. Fuchs: Optical versus See-Through Head-Mounted Displays; in Fundamentals of Wearable Computers and Augmented, 2001.
- M.Tuceryan, Y.Genc, N.Navab: Single Point Active Alignment Method (SPAAM) for Optical See-Through HMD Calibration; in Presence: Teleoperators and Virtual Environments, 11(3), 2002.
- P.Milgram, Colquhoun: A Taxonomy of Real and Virtual World Display Integration; in Proc. International Symposium of Mixed Reality (ISMR 1999).
- M.Weiser: The Computer for the Twenty-First Century; Scientific American, 1991.

Further, continuously updated references to the newest publications, as well as links to online versions of many literature sources can be found in the slides of the lectures and on the teaching webpages of G. Klinker, http://campar.in.tum.de/Main/GudrunKlinker.",262,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/456372/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2093,eLearning - Techniques and Infrastructures,3.0,-,Always,"Gerndt, Hans",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,90.0,30.0,60.0,"The examination is taken in oral form (20 minutes). The students have to show that they master the functionalities, architecture and implementation of eLearning and campus management systems and they can write simple XML programs.",No,No,IN2038 Distributed and Web Information Systems,"After attending the module, students are able to oversee te state of the art in eLearning. They can judge the value of Learning/Teaching Environments and evaluate the functionality, architecture and implementation of eLearning environments. They understand the basic technical embedding of eLearning systems into the general functions of campus management systems. Basic skills in programming XML are acquired and can be applied to the definition of eLearning programs.","- Introduction to eLearning:
- eLearning in Universities 
- Pedagogy and didactics: learning process, elements of eLearning, design and structure.
- eLearning concepts, systems and services
- eLearning architectures: CSCW, eLearning portals, Learning Management Systems, Content Management Systems
- Tools: Authoring tools 
- eLearning integration into University information management systems: User management (LDAP), campus management
- Production of eLearning content with XML: eLearning XML languages, transformation of XML documents
- Standards and integration: Learning Technology Standards, eLearning metadata, LMS integration
- Knowledge Management- Introduction to eLearning:
- eLearning in Universities 
- Pedagogy and didactics: learning process, elements of eLearning, design and structure.
- eLearning concepts, systems and services
- eLearning architectures: CSCW, eLearning portals, Learning Management Systems, Content Management Systems
- Tools: Authoring tools 
- eLearning integration into University information management systems: User management (LDAP), campus management
- Production of eLearning content with XML: eLearning XML languages, transformation of XML documents
- Standards and integration: Learning Technology Standards, eLearning metadata, LMS integration
- Knowledge Management",lecture,"Lecture with slides, work in small groups",new publications,263,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/460540/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2241,Social Computing,5.0,-,Always,"Groh, Georg",Department of Computer Science,"5 Credits ab SoSe 2015; Übertrag der Modulverantwortlichkeit von Prof. Klinker auf Prof. Groh ab WiSe25/26 (17.06.25, KG)",Master,-,-,one semester,summer semester,German/English,-,150.0,60.0,90.0,"Type of Assessment: written exam and optional voluntary mid-term

In the exam takes the form of a 90 minutes written test. The exam allows to assess acquaintance with and understanding of Social Computing concepts, techniques and thinking as specified in the section ""Contents"". Making use of small problems, the exam allows to assess the ability to link and apply this knowledge regarding the desired learning outcomes. 
During the semester, students are provided with a number of questions for every topic of the module that allow them to assess their learning progress and to prepare for the exam. The exam contains a number of slightly altered questions from this question pool in order to give an incentive to deal with the topics and the questions. 
In regard to the tutorials, homework may be given. This homework may be handed in and may be scored as voluntary mid-term accomplishment.",No,Yes,Recommended requirements are the contents of the Bachelor Informatics program.,"Upon successful completion of the module participants understand foundations, concepts and ways of thinking of Social Computing as specified in the section ""Contents"" in order to apply them for the design of Social Computing applications. Furthermore, participants are able to apply these foundations, concepts and ways of thinking in Social Computing research. This especially includes the ability to read and understand respective scientific publications in the field as well as the ability to develop their own algorithms and more abstract socio-technical solution approaches for Social Computing problems in connection with the listed content fields.","The module IN2241 is concerned with topics such as:
- Foundations of Social Computing, social media, Web2.0, (mobile, decentralized) social networking, models of social context
- Foundations of sociometry: centrality, dense subnetworks, graph clustering: concepts and algorithms
- Metric clustering approaches for Social Computing / Social Gaming applications
- Metrics, properties, and models for large real world networks
- Models for social relations in time and space
- Foundations of social signal processing
- Foundations of game theory
- Optional: Visualization of static and dynamic social networks
- Optional: Social Semantic WebThe module IN2241 is concerned with topics such as:
- Foundations of Social Computing, social media, Web2.0, (mobile, decentralized) social networking, models of social context
- Foundations of sociometry: centrality, dense subnetworks, graph clustering: concepts and algorithms
- Metric clustering approaches for Social Computing / Social Gaming applications
- Metrics, properties, and models for large real world networks
- Models for social relations in time and space
- Foundations of social signal processing
- Foundations of game theory
- Optional: Visualization of static and dynamic social networks
- Optional: Social Semantic Web",Lecture and practical tutorial tasks (e.g. collect and analyze data with own and foreign software) which are worked at in small groups in blocks in the second half of the semester. The tutorials train the participants in applying concepts and methods of the lecture. The tutorial tasks are introduced in in-class lectures and are tutored via online discussion boards in suitable e-learning platforms.,"Slides, blackboard, lecture recording, discussion boards in suitable e-learning platforms","Original papers, survey papers and chapters from textbooks, which are closely associated with the module content and are provided to the students online.",264,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/654521/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2111,3D User Interfaces,6.0,-,Always,"Plecher, David",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,75.0,105.0,"The exam takes the form of a 90-minute written test. Half of the exam focuses on theoretical concepts, and the other half covers tools and approaches that were learned and used in the exercises and assignments (practical part). Questions are posed in English; answers can be given also in German. No lecture notes are permitted during the exam; a calculator and a dictionary (English mother tongue) may be used as aids.

Questions allow for the assessment of acquaintance with principal concepts of three-dimensional user interfaces (w.r.t. to theoretical part and overview part). Short programming tasks and questions about program examples and three-dimensional user interfaces, as well as programming concepts, assess the ability to work with three-dimensional user interfaces and the ability to understand and extend small systems (w.r.t. the practical part).

Successfully completing of programming tasks is assessed as a graded project as a voluntary mid-term achievement. The tasks are distributed throughout the semester. The points achieved are converted into a grade according to the maximum number of points. If the calculation of 1/3 voluntary mid-term performance and 2/3 of the exam grade results in an improvement, this is accepted as the module grade.",No,Yes,"IN0001 Introduction to Informatics, IN0006 Introduction to Software Engineering, IN0007 Fundamentals of Algorithms and Data Structures, MA0901 Linear Algebra for Informatics","Students receive in-detail knowledge on the advance conception and implementation of 3D user interfaces in interactive, immersive computer applications. At the end of the module they can analyze current concepts of three-dimensional interaction regarding their requirements on input and output devices and with respect to their functionality and usability. Furthermore, they can create and implement novel interaction concepts.","In-depth coverage of concepts of three-dimensional human computer interaction
- Current input and output devices
- Interaction techniques: selection, manipulation, travel, wayfinding, system control
- Evaluation of 3D user interfaces
- Future 3D user interfacesIn-depth coverage of concepts of three-dimensional human computer interaction
- Current input and output devices
- Interaction techniques: selection, manipulation, travel, wayfinding, system control
- Evaluation of 3D user interfaces
- Future 3D user interfaces","Lecture, exercise, problems for individual study. The assignments are provided on a weekly basis via the teaching portal. They are discussed in the next exercise class, and a solution is presented. Work on the assignments and participation in the exercise class are voluntary. They serve as a means for students to deepen and test their acquired knowledge – as a self-monitoring aid to prepare for the written exam.

In the second half of the semester, students can participate in a team project (final project) in which they can apply and discuss the learned concepts and methods in a freely selectable application context. The successful creation and presentation of a demonstrator as a final project is rewarded with a bonus.","Powerpoint slides, films, books, assignment sheets, demonstrations","The lecture is based on:
- 3D User Interfaces - Theory and Practice by: D. Bowman, E. Kruijff, J. Laviola Jr., and I. Poupyrev. Addison-Wesley Pearson Education, 2004. ISBN 0-201-758-67-9.

Further reading:
- Human-Computer Interation in the New Millenium by: J. Caroll (Ed.). Addison-Wesley Pearson Education, 2001. ISBN 0-201-70447-1.
- Usability Engineering by: J. Nielson. Morgan Kaufmann, 1993. ISBN 0-12-518406-9.
- The Design of Everyday Things by: D. Norman. Basic Books, 2002. ISBN 0-465-06710-7.

Further, continuously updated references to the latest publications, as well as links to online versions of many sources of literature can be found in the lecture slides and via the Moodle portal of the course.",265,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473857/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN0009,Basic Principles: Operating Systems and System Software,6.0,v1,Always,"Baumgarten, Uwe",Former TUM Department of Informatics,-,Bachelor,-,-,one semester,winter semester,German,-,180.0,75.0,105.0,"In the 90 minutes written exam students have to show their understanding of the subjects, like resource management and the usage of systems software. They have to prove to be able to identify a given problem and find solutions within limited time.",No,Yes,IN0001 Introduction to Informatics 1 and IN0004 Introduction to Computer Organization and Technology - Computer Architecture are recommended,"After visiting this module, students are able to understand the basics, problems and solutions of operating systems and current developments. In addition they understand the components like process and memory management and they are able to analyze and evaluate different strategies and techniques. They learn to apply the acquired basic knowledge to new developments in the area of operating systems as well as system software.","Basic concepts: Operating systems; concurrency; parallel programming; low-level programming (processes, memory, communication, resource management; models (abstract, formal) for concurrency, e.g. petri nets; mutual exclusion, synchronization, deadlocks; compiler/linker/loader with library integration, transition to (adequate) hardware basic, machine-oriented programming and C; I/O especially as preparation for networking)Basic concepts: Operating systems; concurrency; parallel programming; low-level programming (processes, memory, communication, resource management; models (abstract, formal) for concurrency, e.g. petri nets; mutual exclusion, synchronization, deadlocks; compiler/linker/loader with library integration, transition to (adequate) hardware basic, machine-oriented programming and C; I/O especially as preparation for networking)","By means of a slide presentation, the lecture introduces the basic concepts and methods of operating systems and explains them using examples. 
Accompanying exercises deepen the understanding of the concepts explained in the lecture by means of suitable group exercises and show the application of the different methods with the help of manageable problems in the different aspects of operating system decomposition.
Additional programming assignments enable students to deepen their knowledge in self-study. Feedback and help in programming exercise sessions allow students to measure learning progress and improve their skills.",Slides and further documents via moodle,"A.S. Tanenbaum, H. Bos: Modern Operating Systems, 4/E (Pearson, 2015)",267,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/452822/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN0011,Introduction to Theory of Computation,8.0,-,Always,Esparza,Department of Computer Science,-,Bachelor,-,-,one semester,summer semester,German,-,240.0,90.0,150.0,"The exam takes the form of a 180 minutes written test. Knowledge questions allow to assess acquaintance with concepts of Theoretical Informatics, algorithmic questions assess the ability to apply known algorithms to concrete problems or to design small new algorithms, and deductive questions assess the ability to reason logically about the concepts of the course.",No,Yes,"IN0015 Discrete Structures, MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics","After successfully completing this module, the students understand the core concepts of the theory of computation on a basic but scientific level. They know what regular expressions, contextfree grammars, the Chomsky hierarchy, finite automata and Turing machines are. They can define formal languages with the appropriate grammars or machines. They can prove that a given language cannot be defined with a given class of grammars or machines. They can prove that certain grammars and machines are equivalent and they can transform them into each other algorithmically. They can explain the basic concepts of complexity theory and can reduce decision problems algorithmically to each other under given complexity limitations.","Formal languages, grammars, Chomsky hierarchy.

Regular languages: DFA, NFA with and without ε-transitions, regular expressions and translations between them; systems of language equations; closure under boolean operations; Arden’s lemma; pumping lemma; decision problems; minimization; Myhill-Nerode theorem.

CFLs: PDAs and translation between CFGs and PDAs; proof that DPDAs are weaker than PDAs; closure properties; CYK algorithm; pumping lemma; Chomsky and Greibach normal forms.

Context-sensitive languages and LBAs.

Computability: computability, decidability, semi-decidability, recursive-enumerability and their relationships; existence of non-computable problems; Turing machines, accepted languages, type-0 languages: equivalence of Turig machines, While-programs and Goto-programs; primitive and µ-recursive functions; reductions between problems; the Halting problem; universal Turing machines; Rice’s theorem; Rice-Shapiro theorem; undecidability of the Post Correspondence Problem and important problems on CFGs.

Complexity theory: time and space complexity classes; polynomial-time reductions; the classes P and NP; NP-completeness; Cook’s theorem; important NP-complete problems and reductions between them.

All proofs are covered.Formal languages, grammars, Chomsky hierarchy.

Regular languages: DFA, NFA with and without ε-transitions, regular expressions and translations between them; systems of language equations; closure under boolean operations; Arden’s lemma; pumping lemma; decision problems; minimization; Myhill-Nerode theorem.

CFLs: PDAs and translation between CFGs and PDAs; proof that DPDAs are weaker than PDAs; closure properties; CYK algorithm; pumping lemma; Chomsky and Greibach normal forms.

Context-sensitive languages and LBAs.

Computability: computability, decidability, semi-decidability, recursive-enumerability and their relationships; existence of non-computable problems; Turing machines, accepted languages, type-0 languages: equivalence of Turig machines, While-programs and Goto-programs; primitive and µ-recursive functions; reductions between problems; the Halting problem; universal Turing machines; Rice’s theorem; Rice-Shapiro theorem; undecidability of the Post Correspondence Problem and important problems on CFGs.

Complexity theory: time and space complexity classes; polynomial-time reductions; the classes P and NP; NP-completeness; Cook’s theorem; important NP-complete problems and reductions between them.

All proofs are covered.","The module consists of lectures and exercises. In the lectures, the material is presented by the teacher, in dialogue with the students. During the exercises, the students work on given exercises either individually or in small groups with help from the supervisors. Exercises and homework are primarily pen and paper based but can also involve computer-based components.","Lecture notes, slides, blackboard, animations, video recordings, online exercises and homework assignments, online discussion forum","John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and Computation
Dexter Kozen. Automata and Computability
Katrin Erk, Lutz Priese. Theoretische Informatik. Eine umfassende Einführung.
Uwe Schöning. Theoretische Informatik kurzgefasst.",268,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/454045/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN0019,Numerical Programming,6.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor,-,-,one semester,winter/summer semester,German,-,180.0,75.0,105.0,"Type of Assessment: written exam

The exam takes the form of a 90 minutes written test. In the exam students should prove to be able to identify a given problem and find solutions within limited time. The examination will completely cover the content of the lectures. The answers will require own formulations. Exam tasks allow to assess the participants' understanding of fundamental principles of numerical programming. This includes the evaluation of the participants' knowledge concerning the most important basic numerical algorithms that are relevant for applications from computer science. Small code snippets allow to assess the students' capability to apply and implement these algorithms.",Yes,No,"MA0901 Linear Algebra for Informatics, MA0902 Analysis for Informatics","At the end of the module, participants understand the fundamental principles of numerical programming, know the most important basic numerical algorithms  (e.g. Gaussian elimination, QR-algorithm, Neville-algorithm, Jacobi und Gauß-Seidel-algorithm, Newton's method) that are relevant for applications from computer science, and are capable to apply and implement these algorithms.","- Floating point arithmetic (rounding error analysis, condition and stability)
- Interpolation (polynomial interpolation, splines, trigonometric interpolation, fast Fourier transform)
- Quadrature (simple and composite rules, extrapolation, Gaussian quadrature)
- Solving linear systems (Gaussian elimination, LR-factorization, pivoting, least squares)
- Ordinary differential equations (finite differences, Euler and Runge Kutta methods, discretization error, consistency, stability and convergence, multi-step methods)
- Iterative methods (relaxation methods: Jacobi and Gauss-Seidel, minimization methods: steepest descent, fix point iteration, nonlinear equations: from bisection to Newton)
- The symmetric eigenvalue problem (motivation, condition, vector iteration, QR iteration, reduction algorithms)- Floating point arithmetic (rounding error analysis, condition and stability)
- Interpolation (polynomial interpolation, splines, trigonometric interpolation, fast Fourier transform)
- Quadrature (simple and composite rules, extrapolation, Gaussian quadrature)
- Solving linear systems (Gaussian elimination, LR-factorization, pivoting, least squares)
- Ordinary differential equations (finite differences, Euler and Runge Kutta methods, discretization error, consistency, stability and convergence, multi-step methods)
- Iterative methods (relaxation methods: Jacobi and Gauss-Seidel, minimization methods: steepest descent, fix point iteration, nonlinear equations: from bisection to Newton)
- The symmetric eigenvalue problem (motivation, condition, vector iteration, QR iteration, reduction algorithms)","This module comprises lectures and accompanying exercises. The contents of the lectures will be taught by talks and presentations.
Students will be encouraged to study literature and to get involved with the topics in depth. In the exercises, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.","Slides, whiteboard, exercise sheets","- Huckle, Schneider: Numerische Methoden, Springer-Verlag, Berlin-Heidelberg, 2006
- Späth: Numerik - eine Einführung für Mathematiker und Informatiker, Vieweg, Braunschweig-Wiesbaden, 1994
- Schwarz: Numerische Mathematik, Teubner, Stuttgart, 4. Auflage 1997
- Stoer, Bulirsch: Numerische Mathematik, Springer-Verlag, Berlin Heidelberg, Band 1 (8. Auflage 1999) und Band 2 (4. Auflage 2000)
- Press, Flannery, Teukolsky, Vetterling: Numerical Recipes Cambridge University Press, http://www.nr.com/
- Golub, Ortega: Scientific Computing: An Introduction with Parallel Computing Academic Press, 1993",269,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/454055/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT323000,Concepts of C++ Programming,6.0,-,from Winter semester 2024/25,"Neumann, Thomas",Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,English,-,180.0,75.0,105.0,"The exam consists of a computer-based test under supervision after the lecture period. Optional homework submissions can be used as a 0,3 grade bonus. 
 
For the homework, 1–2 graded weekly programming assignments will be given throughout the course, which participants have to solve and submit in electronic form. This ensures that participants understood the relevant concepts and can apply their knowledge successfully on programming tasks by writing appropriate C++ code. By building on results of previous tasks and working with non-trivial existing code bases, students show their ability to select and implement appropriate concepts and patterns in complex contexts. 
 
The 90-minutes computer-based test consists of questions, where the students are expected to show that they have profound knowledge of the C++ programming concepts covered in the module, and short programming tasks, where students prove that they are able to recognize and analyze problems and use C++ to find elegant and efficient solutions within a limited amount of time.",No,Yes,"IN0001: Introduction to Informatics 
IN0002: Fundamentals of Programming (Exercises & Laboratory) 
IN0007: Fundamentals of Algorithms and Data Structures","The participants master the concepts of C++ programming 
mentioned below. They are able to independently analyze them and to apply the corresponding analysis to related programming problems. Furthermore, the participants are able to use the handled programming concepts, to modify them if necessary, and to compare the quality of different solutions.","First, the module studies the basic concepts of the C++ language (syntax, strong typing, type deduction, focus on runtime efficiency). Then, the module studies the central, modern C++ programming concepts. 
- Concepts for efficient resource management: The module presents RAII, smart pointers, universal references, ownership and copy/move. 
- Concepts for procedural programming: The module investigates C++ mechanisms for procedural programming, such as functions, parameter passing, lambdas, overloads, and error handling. 
- Concepts for object-oriented programming: The module presents classes, inheritance (single and multiple), polymorphy, and RTTI. 
- Concepts for generic programming: The module investigates templates, variadic templates and fold expressions, expression templates for lazy evaluation, and typical patterns such as CRTP. 
- Concepts of compile-time programming: The module investigates concepts such as template recursion, constexpr, and type traits. 
- Concepts for containers, iterators, and ranges: The module presents the STL standard containers, algorithms and runtime guarantees, iterator concepts as well as views and ranges. 
- Concepts for build systems and dependency management: concepts for automatic compilation, linking and management of dependencies are studied. Additionally, concepts for continuous testing and integration are investigated. 
- Optionally, concepts for parallel programming are investigated, such as threads, atomics and async/futures, as well as recent C++ extensions such as concepts and modules.First, the module studies the basic concepts of the C++ language (syntax, strong typing, type deduction, focus on runtime efficiency). Then, the module studies the central, modern C++ programming concepts. 
- Concepts for efficient resource management: The module presents RAII, smart pointers, universal references, ownership and copy/move. 
- Concepts for procedural programming: The module investigates C++ mechanisms for procedural programming, such as functions, parameter passing, lambdas, overloads, and error handling. 
- Concepts for object-oriented programming: The module presents classes, inheritance (single and multiple), polymorphy, and RTTI. 
- Concepts for generic programming: The module investigates templates, variadic templates and fold expressions, expression templates for lazy evaluation, and typical patterns such as CRTP. 
- Concepts of compile-time programming: The module investigates concepts such as template recursion, constexpr, and type traits. 
- Concepts for containers, iterators, and ranges: The module presents the STL standard containers, algorithms and runtime guarantees, iterator concepts as well as views and ranges. 
- Concepts for build systems and dependency management: concepts for automatic compilation, linking and management of dependencies are studied. Additionally, concepts for continuous testing and integration are investigated. 
- Optionally, concepts for parallel programming are investigated, such as threads, atomics and async/futures, as well as recent C++ extensions such as concepts and modules.","The module consists of lectures with integrated exercises and tutorial sessions. The content of the lectures is conveyed in presentations of the scientific material. The lectures include short exercises to encourage active participation. By solving homework assignments, the students are encouraged to work intensively on the respective topics. The solutions of the assignments are discussed in the tutorial sessions.","Slides, whiteboard, quizzes, homework assignments","Bjarne Stroustrup: Programming – Principles and Practice Using 
C++, Addison Wesley 2014 
Scott Meyers: Effective Modern C++: 42 Specific Ways to Improve 
your Use of C++11 and C++14, O’Reilly 2014 
Marius Bancila: The Modern C++ Challenge, Packt Publishing, 2018",274,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4110214/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2169,Guided Research,10.0,-,Always,"Neumann, Thomas",Academic Programs Informatik,-,Master,-,-,one semester,winter/summer semester,English,-,300.0,,300.0,"Type of Assessment: research paper

The research paper (8-12 pages) is used to test the students' mastery of scientific methods (literature research, topic identification, etc.) and their ability to structure and write a scientific text in English on a concrete task from the field of informatics. The talk or presentation (duration 20-40 minutes) shows their experience in presenting their methodically developed project results reduced to the essential core in an illustrated and comprehensible way to an audience (weighting: 80/20).

The examiner/supervisor of a guided research project can be any full-time university lecturer of the two departments Computer Science and Computer Engineering of the TUM School of Computation, Information and Technology.",Yes,No,There are 18 credits to deepen in the profil research (thereof 10 credits for this 'guided research'). We recommend to discuss with the advisor which lectures can be preparative or attendant.,"After successful participation in the module, the students have the ability to apply the basic tools for independent scientific work for the structured development of a thematically limited, research-related task from the field of informatics. In particular, the participants are able to independently conduct a scientific literature search to determine the current state of research in a defined, challenging subject area in informatics, to analyze and evaluate the essential aspects of a scientific subfield of informatics, to develop their own (narrowly defined) results using scientific methods, and to structure and create their own scientific texts in English. In addition, they have experience with the presentation of the respective results in a short lecture.","- Topic identification and incremental specification of the task in close consultation with the advisor.
- Independent scientific literature research (under guidance of or in consultation with the advisor) in order to develop a comprehensive overview of the current state of research in a delimited topic area.
- Development of an own (narrowly defined) result using scientific methods. Emphasis is placed on intensive study of the literature and the preparation of scientific texts.
- Regular meetings with the advisor provide feedback on the results achieved so far, give hints for improvements of the contents and working techniques as well as suggestions for the further procedure.
- Preparation of a concise report of results at a scientific level in English.
- If reasonable and possible, submission of a paper to a professional conference.
- If reasonable and possible, participation in a relevant professional conference.

This module is offered by many chairs in both departments Computer Science and Computer Engineering. Chairs select appropriate topics from their area of expertise and assist students in learning professional and scientific skills. Topics may come from the following areas of informatics, among others: databases, compiler construction, information systems, networks, groupware, graphics, robotics, image processing.- Topic identification and incremental specification of the task in close consultation with the advisor.
- Independent scientific literature research (under guidance of or in consultation with the advisor) in order to develop a comprehensive overview of the current state of research in a delimited topic area.
- Development of an own (narrowly defined) result using scientific methods. Emphasis is placed on intensive study of the literature and the preparation of scientific texts.
- Regular meetings with the advisor provide feedback on the results achieved so far, give hints for improvements of the contents and working techniques as well as suggestions for the further procedure.
- Preparation of a concise report of results at a scientific level in English.
- If reasonable and possible, submission of a paper to a professional conference.
- If reasonable and possible, participation in a relevant professional conference.

This module is offered by many chairs in both departments Computer Science and Computer Engineering. Chairs select appropriate topics from their area of expertise and assist students in learning professional and scientific skills. Topics may come from the following areas of informatics, among others: databases, compiler construction, information systems, networks, groupware, graphics, robotics, image processing.","The module consists of a research project. Knowledge and skills are acquired independently, in project work and via questioning-developing methods. Students are motivated to independently review literature and summarize documents. They develop a solution to a limited research-related problem within a given/limited time frame of 6 months and to the extent of 300 self-study hours.",Will be announced by the advisor before the start of the project.,Will be announced by the advisor before the start of the project.,275,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/458261/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2107,Advanced Seminar Course,5.0,2,from Winter semester 2016/17,"Kemper, Alfons",Academic Programs Informatik,-,Master,-,-,one semester,winter/summer semester,German/English,-,150.0,30.0,120.0,"Type of examination: Scientific paper (consisting of a written part (7-14 pages), as well as a presentation with discussion (30-60 minutes), weighting: 50/50)

Before the start of the seminar (usually at the end of the previous semester), all participants will be given a challenging scientific topic on which they will prepare a written paper using scientific literature they have researched themselves. The results of the individual papers are presented to the other participants of the seminar in a presentation and supported by visual media such as beamers or slides. The presentation also includes the extent to which the students can respond to questions, suggestions and discussion points about their own work and presentation and critically reflect on results. The extent to which they participate in the scientific discussion on the work and presentations of the other participants is also evaluated.",Yes,No,Basic knowledge of the specific subject area may be necessary (elective course).,"After completing the module the participants possess the necessary methodological skills to familiarize themselves with a challenging scientific topic in Informatics, to independently prepare a scientific seminar paper, to present it and to analyze and comparatively evaluate the results. They are proficient in working with scientific literature (researching, evaluating, citing) and can present essential aspects of their topic in an elaboration and in a presentation.","Teaching of the following competencies:
- Independent assessment of a scientifically demanding theme
- Dealing with scientific literature
- Preparation of a seminar paper with an overview of sources
- Presentation and discussion of scientific results

This module is offered by different chairs of informatics. They select suitable topics from their research area and support the students in learning the technical and scientific skills. Topics may come from the following areas of informatics, among others: databases, compiler construction, information systems, networks, groupware, graphics, robotics, image processing.Teaching of the following competencies:
- Independent assessment of a scientifically demanding theme
- Dealing with scientific literature
- Preparation of a seminar paper with an overview of sources
- Presentation and discussion of scientific results

This module is offered by different chairs of informatics. They select suitable topics from their research area and support the students in learning the technical and scientific skills. Topics may come from the following areas of informatics, among others: databases, compiler construction, information systems, networks, groupware, graphics, robotics, image processing.","Participants independently assess a demanding scientific topic, prepare a presentation and discuss their findings.
The accompanying seminar paper summarizes the main concepts of the subject and provides an overview over related work.","Beamer, slides, whiteboard, report, possibly tool presentation and/or animations","The scientific literature and scientific publications in the respective area used in the module vary depending on the area and are announced at the beginning of the module.

TUM guidelines for  good scientific practice:   https://www.gs.tum.de/en/gs/during-the-doctorate/good-scientific-practice/",276,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1248712/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN2348,Lecture Series: What is digitalization?,2.0,-,Always,"Pretschner, Alexander",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,30.0,30.0,"Written exam, 60 minutes

Students have to write an essay about a provided topics that covers one or the connection of various topics from the lecture. Different emphases are possible: analyze, argue, assess, prove or characterize, define, explain and compare. The essay is assessed as ""passed"" or ""failed"".",No,Yes,Basic understanding of the fundamentals of informatics,"After attending this class, students can understand, analyze and contextualize different facets of digitalization at the level of university education. They can identify trade-offs and conflicting goals.","Aspects of digitalization from the perspective of different disciplines: informatics, information systems, law, economics, politics, sociology, philosophy and ethics, security and privacy, and from the perspective of industrial applications.Aspects of digitalization from the perspective of different disciplines: informatics, information systems, law, economics, politics, sociology, philosophy and ethics, security and privacy, and from the perspective of industrial applications.",Presentations with slides due to the nature of this class with speakers from different disciplines as well as from theory and practice.,Slides,Will be announced during the different lectures.,277,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1350593/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0038,"Technology, Economy, Society",3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),-,Master,-,-,one semester,winter semester,German/English,-,90.0,30.0,60.0,"The assessment consists of a written assignment (7800-8200 characters) which is due at the end of the semester. Students interpret research literature with respect to sociotechnical problems to analyze the development of technology in social, economic, and political contexts.",No,Yes,The course does not require any special prior knowledge.,Students will be able to identify examples of the historical dimensions of processes of technifikaction and to understand the emergence and use of technical offerings in their concrete historical context.,"In this course, an approach to the political, economic, social and cultural dimensions of technology development is acquired. Selected historical and current examples will be analyzed to see how technical artifacts, processes and services emerge. Under which social conditions, in which economic situations and political contexts does technology emerge? How is it discussed, implemented, changed or discarded?In this course, an approach to the political, economic, social and cultural dimensions of technology development is acquired. Selected historical and current examples will be analyzed to see how technical artifacts, processes and services emerge. Under which social conditions, in which economic situations and political contexts does technology emerge? How is it discussed, implemented, changed or discarded?","Lecture, self-study, case studies, writing of smaller thematic papers.","electronic lecture notes, presentations","- Nelly Oudshoorn and Trevor Pinch (Eds.), How Users Matter. The Co-Construction of Users and Technology. Cambridge, Mass. 2005.
- Gernot Rieder, Judith Simon and Pak-Hang Wong, Mapping the Stony Road Towards Trustworthy AI, in: Pelillo, Marcello and Scantamburlo, Teresa (Eds.), Machines We Trust: Perspectives on Dependable AI. Cambridge, Mass. 2021, http://dx.doi.org/10.2139/ssrn.3717451 .
- Philip Scranton, Urgency, Uncertainty, and Innovation: Building Jet Engines in Postwar America, in: Management & Organizational History, 2006, 1:2, 127-157, https://doi.org/10.1177/1744935906064096.",290,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/582571/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED00471,History of Technology in Early Modern Age,3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,291,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1010786/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED00472,History of Technology in Modern Times I,3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,292,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1010801/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED00473,History of Technology in Modern Times II,3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,293,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1010878/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0141,Logic,5.0,-,Always,-,Department of Educational Sciences,-,Master,-,-,one semester,winter semester,German,-,150.0,60.0,90.0,-,No,Yes,-,-,--,-,-,-,294,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/658736/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL70036,Master Course Special Sociology (3.So.14),6.0,-,Always,Schr,Chair of Sociology of Science and Technology (Prof. Beck),ehemals ED0163,Master,-,-,one semester,winter/summer semester,German,-,180.0,30.0,150.0,-,Yes,No,-,-,--,-,-,-,295,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/673202/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0179,"Technology, Nature and Society",3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),ehemalige Modul-ID: WI000209,Bachelor,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,296,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/462989/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0218,Science and Technology Communication,5.0,-,Always,-,Department of Educational Sciences,-,Master,-,-,one semester,winter/summer semester,German,-,120.0,37.0,83.0,-,Yes,No,-,-,--,-,-,-,297,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/754181/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL70056,Case Studies on Business Ethics,3.0,-,Always,Christoph,Department of Governance,ehemals ED0286,Bachelor,-,-,one semester,winter/summer semester,German,-,90.0,0.0,90.0,-,Yes,No,-,-,--,-,-,-,298,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1017267/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0312,Science and Technology Communication (for Lectureship),4.0,-,from Winter semester 2014/15,"Heckl, Wolfgang",Department of Educational Sciences,-,Master,-,-,one semester,winter/summer semester,German,-,120.0,37.0,83.0,-,No,No,-,-,--,-,-,-,299,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1146968/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10516,Advanced Techniques in Modelling Complex Systems,1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,300,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/694854/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11216,Agile project management hands-on,1.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,English,-,30.0,15.0,15.0,Students are able to create an offer for a project and subsequently present their ideas (10-15 min). They are able to understand the basics of an offer preparation.,No,No,-,"After successful participation in this module, students are able to understand the basics of technical project sales and are able to work with techniques of professional communication. Furthermore, participants have the knowledge of preparing project plans and quotations and applying basics of practical project management in the context of a proposal preparation.","The workshop teaches all the necessary skills for the early stages of a project. Starting with the basics of B2B sales, you will learn how to communicate the specifics of your company at the best or service the potential customer. Then you will learn how to properly create a functional specification document and convince the potential customer with a good concept and an attractive offer.
How does a company become a potential customer? Which sales skills are to be considered especially in B2B? What is important in professional communication to a company? What is important to consider in the requirements analysis? How do I define the milestones and goals of the project? How do I turn this into a concrete offer?
These and many other questions will be addressed in the two-day workshop by sales and project managers from Motius. Due to the interdisciplinary focus of Motius on projects in the fields of electrical engineering, computer science and mechanical engineering, we are able to react flexibly to unusual situations. This practical knowledge we pass on to you. Being founders as students ourselves, we are sensitive to the subtleties of communication.The workshop teaches all the necessary skills for the early stages of a project. Starting with the basics of B2B sales, you will learn how to communicate the specifics of your company at the best or service the potential customer. Then you will learn how to properly create a functional specification document and convince the potential customer with a good concept and an attractive offer.
How does a company become a potential customer? Which sales skills are to be considered especially in B2B? What is important in professional communication to a company? What is important to consider in the requirements analysis? How do I define the milestones and goals of the project? How do I turn this into a concrete offer?
These and many other questions will be addressed in the two-day workshop by sales and project managers from Motius. Due to the interdisciplinary focus of Motius on projects in the fields of electrical engineering, computer science and mechanical engineering, we are able to react flexibly to unusual situations. This practical knowledge we pass on to you. Being founders as students ourselves, we are sensitive to the subtleties of communication.","(1) First, the theoretical basics are taught. You will learn what is required for an offer and professional acquisition. You will be able to apply the knowledge directly using examples from everyday life at Motius. At the end of the day, you will be given a real-life example to work on. Within one week you will write an offer for the project in small teams.
(2) After the teams have presented their proposal, they will get detailed feedback. Then the basics of the project setup (project plan, distribution of tasks and roles, project management) are taught. The workshop concludes with the evaluation of the results and with the ""assignment"" of one or more teams.",-,-,301,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1142612/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30502,Worlds of Working and Living in Literature,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,302,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675551/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20701,Art in Motion. Training for Excellence,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,English,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,303,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1250255/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10602,Basic Techniques in Modelling Complex Systems,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,English,-,30.0,15.0,15.0,In an essay (500-700 pages) and a mini-simulation project they explain how a modelling process is established and build their own model (Prüfungsleistung).,-,-,-,After attending the workshop the students are skilled in awareness and basic understanding of complexity as one of the biggest challenges in the business context. They have the ability in supporting a decision-making process with comprehensive knowledge of building and applying models in a business context. Students are enabled to build useful models  - regardeless of the specific software applied and make better and more sustainable decisions in real live situations.,"The constant change of the world and the systems we live in demands decisions to be made on a constant basis. Many examples of well-intentioned decisions that at first glance appeared completely plausible – be it in economy, environment or society – lost their effects after a short time, increased problems or unintentionally even created new problems.The constant change of the world and the systems we live in demands decisions to be made on a constant basis. Many examples of well-intentioned decisions that at first glance appeared completely plausible – be it in economy, environment or society – lost their effects after a short time, increased problems or unintentionally even created new problems.",Case study on easy to use software,"Reader, script, excercise sheets","Sterman, Business Dynamics, 2010",304,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/694222/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10800,Economic Thinking: Business Management,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,305,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/821876/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30257,Big Band,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,306,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/855941/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21103,Big Data - Big Impact?,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,307,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981530/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20803,"Cognitive Science: Thinking, Perceiving, and Knowing",2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,22.0,38.0,-,No,No,-,-,--,-,-,-,308,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/828873/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30803,"Cognitive Science: Thinking, Perceiving, and Knowing",3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,90.0,22.0,68.0,-,Yes,No,-,-,--,-,-,-,309,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1230673/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10555,Communication and Facilitation in Project Teams,1.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,winter/summer semester,English,-,30.0,8.0,22.0,Students will write a short exam which proves that they understand various aspects of project management and are able to handle team conflicts successfully. Furthermore they are able to apply communication and facilitation skills (exam achievement).,-,-,Students require adequate English skills to achieve the expected level of participation.,Here you will gain new insights into your own role within your team and gain appreciation of other roles that may appear during conflicts. By learning better ways of looking at team dynamics you will improve your ability to create a good and well-structured work environment and enhance team collaboration. After completing this workshop you will have an expanded set of useful communication and facilitation skills that will enable you to build good work relationships and deal with conflicts in a constructive manner.,"Team roles and team development stages (team development clock, team triangle)
How to create a good and well-structured work environment and enhance collaboration
Motivating a team with constructive feedback
How to handle conflicts successfully
Creative problem solving toolsTeam roles and team development stages (team development clock, team triangle)
How to create a good and well-structured work environment and enhance collaboration
Motivating a team with constructive feedback
How to handle conflicts successfully
Creative problem solving tools","Trainer input, demonstrations, exercises, role-playing games, group discussions, feedback, etc.  
Each participant is encouraged to explore his/her style and thus expand their individual set of communication, dialogue facilitation and project team collaboration skills.",-,"Belbin RM (1993) Team Roles At Work. Butterworth-Heinemann, Oxford  

Hanlan M (2004) High-Performance Teams – How to Make Them Work. Praeger, Westport CT.

Pentland A (2012) The New Science of Building Great Teams. In: Harvard Business Review 04:2012.

Waters K (2012) All About Agile: Agile Management Made Easy! CreateSpace Independent Publishing Platform.

West MA (1990) The Social Psychology of Innovation in Groups. In: MA West, JL Farr (Eds) Innovation and Creativity at Work. Wiley, Chichester.

Yukl GA (2013) Leadership in Organizations. 8th ed. Pearson Eucation, Harlow.
""",310,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679851/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10509,Creative Problem Solving,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German,-,30.0,15.0,15.0,-,No,Yes,-,-,--,-,-,-,311,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675554/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20704,"Thinking, Perceiving, and Knowing",2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,23.0,37.0,-,No,No,-,-,--,-,-,-,312,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675557/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21206,Error,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,313,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057238/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10510,Change in the German System of Science,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German,-,30.0,15.0,15.0,-,Yes,No,-,-,--,-,-,-,314,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675558/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20705,Diversity and Conflict Management,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,315,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729420/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10512,Getting More Effective - on My Own and in a Team,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,7.0,23.0,-,-,-,-,-,--,-,-,-,316,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675565/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10220,Introduction to Selected Methods of Problem Solving,1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,317,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675568/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20707,Introduction to Change Management,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,318,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729423/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21209,Introduction to Scientific Working,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,319,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1052723/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21104,Introduction to the Sociology of Science and Technology,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,320,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1179853/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21005,Introduction to Diversity Management,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,321,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/989062/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21314,Introduction to Philosophical Thinking,2.0,-,from Summer semester 2015,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,No,No,-,-,--,-,-,-,322,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1142954/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31314,Introduction to Philosophical Thinking,3.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,22.0,68.0,-,No,No,-,-,--,-,-,-,323,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1275820/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21106,Emergence and Complex Systems,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,324,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981536/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21023,Passing Exams in Relaxed Mode,2.0,-,Always,"Vierthaler, Barbara",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,24.0,36.0,-,Yes,No,-,-,--,-,-,-,325,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/946906/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT65201,"Developing a Game Prototype. Reflecting Science, Technology and Society through Game Design",5.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,Beinhaltet SOT63201 Game Konzept plus Erstellung eines Prototypen,Bachelor/Master,-,-,one semester,irregularly,English,-,150.0,30.0,120.0,"In a project work students show how to transform socially relevant issues into game situations that encourage reflection about science, technology and society. The students will present the game concept (30 min, with clearly noticeable individual contributions) and create a prototype (paper based or digital) incl. all necessary instructions for use (weighting 1:1). With the implementation, the students show their ability to take the perspective of the recipients in order to motivate them for advanced reflection on the respective topic. Criteria for the evaluation are accessibility, attractiveness, immersion, target group fit, complexity of the issues, diversity of perspectives.To convey project results adequately, additional assignments (e.g. prototype presentation, project report, prototype pitch, grant application, contest submission) will be announced at the beginning of the course.",No,No,"The course offers an interdisciplinary setting in which the participants develop their own game prototype (no programming required) — it is therefore aimed at all students, e.g. from Science, Engineering, Social Sciences and Humanities.","Upon successful completion of this module students are able to identify societal dimensions of science and technology topics as well as to transfer complex relationships in appealing mechanics, narratives and activities to generate productive offers for reflection and discussion.
They have intensive experience with target oriented project work in multidisciplinary teams, facilitating the exchange and communication between a multitude of different tasks, competencies and positions.
Furthermore the participants are able to present their work-in-progress in a concise way as well as to give and receive feedback in a professional manner. 
In addition, they are able to take into account the needs and abilities of users/recipients when communicating challenging topics.","The interactive and narrative character of video games can be turned into a useful tool to present the complexity of ethical and societal aspects of science and technology topics. In the development process of a game concept, the game designer has to decide on game mechanics and storytelling techniques, making her/him reflect on how to present the ethical and societal issues of a topic. This is a productive process, because various aspects of game design correspond to different dimensions of ethical and societal issues, e.g. the integration of different options the player can choose from (decision-making), the constellation of involved people and their interactions (storytelling) as well as the setting of the (societal) context (worldbuilding).The interactive and narrative character of video games can be turned into a useful tool to present the complexity of ethical and societal aspects of science and technology topics. In the development process of a game concept, the game designer has to decide on game mechanics and storytelling techniques, making her/him reflect on how to present the ethical and societal issues of a topic. This is a productive process, because various aspects of game design correspond to different dimensions of ethical and societal issues, e.g. the integration of different options the player can choose from (decision-making), the constellation of involved people and their interactions (storytelling) as well as the setting of the (societal) context (worldbuilding).","The students will be introduced to the social science-perspective on a selection of STEM (Science, Technology, Engineering, Mathematics) topics as well as the creative potential of video games for reflection, e.g. worldbuilding, storytelling and decision-making. Based on readings and inputs of experts and supported by mentors, the students develop a game concept addressing a STEM topic while enabling the creative potential of games to integrate societal and ethical aspects. The final concept, which is presented in the course and discussed by all participants, is implemented in a game prototype to enable a contribution to a competition or an exhibition (with certain specifications).",-,-,326,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3377420/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11210,Writing Successfully in the Internet,1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,327,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057249/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21107,Ethics of Law,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,45.0,15.0,-,Yes,-,-,-,--,-,-,-,328,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1019406/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20230,Ethics and Responsibility,2.0,-,Always,Wernecke,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,329,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675587/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30230,Ethics and Responsibility,3.0,-,Always,Wernecke,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,90.0,30.0,60.0,-,Yes,No,-,-,--,-,-,-,330,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675590/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31601,Ethics and Responsibility II,3.0,-,from Summer semester 2017,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,331,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1495708/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21601,Ethics and Responsibility II,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,332,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1352394/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11108,Leadership,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,333,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/985151/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT63201,"Game Jam. Reflecting Science, Technology and Society through Game Design",3.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,English,-,90.0,30.0,60.0,"In a group presentation (30 min, with clearly noticeable individual contributions) of a game concept students show how to transform socially relevant issues into game situations that encourage reflection about science, technology and society.",-,-,"The course offers an interdisciplinary setting in which the participants develop their own game prototype (no programming required) — it is therefore aimed at all students, e.g. from Science, Engineering, Social Sciences and Humanities.","Upon successful completion of this module students are able to identify societal dimensions of science and technology topics as well as to transfer complex relationships in appealing mechanics, narratives and activities to generate productive offers for reflection and discussion.
They have  intensive experience with target oriented project work in multidisciplinary teams, facilitating the exchange and communication between a multitude of different tasks, competencies and positions.
Furthermore the participants are able  to present their work-in-progress in a concise way as well as to give and receive feedback in a professional manner.","The interactive and narrative character of video games can be turned into a useful tool to present the complexity of ethical and societal aspects of science and technology topics. In the development process of a game concept, the game designer has to decide on game mechanics and storytelling techniques, making her/him reflect on how to present the ethical and societal issues of a topic. This is a productive process, because various aspects of game design correspond to different dimensions of ethical and societal issues, e.g. the integration of different options the player can choose from (decision-making), the constellation of involved people and their interactions (storytelling) as well as the setting of the (societal) context (worldbuilding).The interactive and narrative character of video games can be turned into a useful tool to present the complexity of ethical and societal aspects of science and technology topics. In the development process of a game concept, the game designer has to decide on game mechanics and storytelling techniques, making her/him reflect on how to present the ethical and societal issues of a topic. This is a productive process, because various aspects of game design correspond to different dimensions of ethical and societal issues, e.g. the integration of different options the player can choose from (decision-making), the constellation of involved people and their interactions (storytelling) as well as the setting of the (societal) context (worldbuilding).","The students will be introduced to the social science-perspective on a selection of STEM (Science, Technology, Engineering, Mathematics) topics as well as the creative potential of video games for reflection, e.g. worldbuilding, storytelling and decision-making. Based on readings and inputs of experts and supported by mentors, the students develop a game concept addressing a STEM topic while enabling the creative potential of games to integrate societal and ethical aspects. The final concept is presented in the course and discussed by all participants.",-,-,334,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3374625/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20202,Mind - Brain - Machine,2.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,"Foundational Problems between Neurophilosophy, Informatics, and Robotics",one semester,irregularly,German,-,60.0,20.0,40.0,-,No,No,-,-,--,-,-,-,335,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675718/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30202,Mind - Brain - Machine,3.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German/English,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,336,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675721/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA40202,Mind - Brain - Machine,4.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,337,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1063322/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20910,Gender Competence as Core Qualification,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,338,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/919424/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20710,Global Diversity Training,2.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,winter/summer semester,English,-,60.0,22.0,38.0,Students will deal with their own cultural background in a short group presentation and deeply reflect on the learning outcomes of the workshop in a learning summary (100% of grade).,-,-,-,"After this workshop you will be able to individually deal with our own cultural background and its impact on intercultural collaboration 
- Analyze the role and tasks of team leaders in an intercultural context.
- Develop strategies for case studies in international teams.
- be able to analyze situations of your professional life in an international team.","Collaboration in international teams is becoming a crucial everyday part of working environments. It brings numerous benefits, but can also lead to misunderstandings, confusions and conflicts that can hinder productivity. 

The aim of the training is to prepare participants for teamwork from an intercultural perspective and especially to reflect the influence of diversity on the team process in international teams. To achieve this goal, we will work with science-based models, short lectures and numerous exercises with a strong focus on the relevance for your professional and daily life.Collaboration in international teams is becoming a crucial everyday part of working environments. It brings numerous benefits, but can also lead to misunderstandings, confusions and conflicts that can hinder productivity. 

The aim of the training is to prepare participants for teamwork from an intercultural perspective and especially to reflect the influence of diversity on the team process in international teams. To achieve this goal, we will work with science-based models, short lectures and numerous exercises with a strong focus on the relevance for your professional and daily life.","The workshop will be a mix of input, case studies, discussions and group work.",-,-,339,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729426/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21008,Fundamental Principles of Globalisation,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,340,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/961390/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20207,Introduction to Philosophy of Science,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,341,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675724/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30207,Introduction to Philosophy of Science,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,No,No,-,-,--,-,-,-,342,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/663809/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20221,Acting under Ignorance,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,15.0,45.0,-,No,No,-,-,--,-,-,-,343,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675730/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30221,Acting under Ignorance,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,90.0,15.0,75.0,-,No,No,-,-,--,-,-,-,344,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675733/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10524,The Asian Challenge,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,345,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675736/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21213,Individual Change Management,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,Yes,No,-,-,--,-,-,-,346,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057258/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20420,Integration of Technology into Society,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,English,-,60.0,21.0,39.0,-,No,No,-,-,--,-,-,-,347,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675742/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30420,Integration of Technology into Society,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,90.0,21.0,69.0,,Yes,No,-,-,--,-,-,-,348,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675745/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20612,Inter- and Transdisciplinarity,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,349,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675751/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20424,Intercultural Encounters,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,350,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/989075/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30258,Jazz Project,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,351,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/811995/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21010,Collective Agency in Sociotechnical Systems,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,352,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981571/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31010,Collective Agency in Sociotechnical Systems,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,353,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981671/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10269,Communication and Personality,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,354,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676090/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20267,Communication and Presentation,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,355,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676097/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30267,Communication and Presentation,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,356,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676100/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20201,Complex Systems,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,No,No,-,-,--,-,-,-,357,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676106/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30201,Complex Systems,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,No,No,-,-,--,-,-,-,358,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676109/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11313,Conflict Management and Conducting Discussions,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,22.0,8.0,-,Yes,No,-,-,--,-,-,-,359,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1160685/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WZ0812,Cultural Competence: Choir and Orchestra,3.0,-,Always,"Mayer, Felix",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,60.0,30.0,-,No,No,-,-,--,-,-,-,360,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/463267/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA90211,Art and Politics,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,Yes,No,-,-,--,-,-,-,361,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1352897/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11207,Understanding Art 1: Art Reception infront of Originals in Museums in Munich,1.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,No,No,-,-,--,-,-,-,362,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057244/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WZ3241,Life Sciences and Society: Advanced Topics,2.0,-,Always,-,Associate Professorship of Science and Technology Policy  (Prof. Müller),-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,0.0,60.0,-,Yes,-,-,-,--,-,-,-,363,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1439632/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10121,The Sustainability Approach,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,-,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,364,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676154/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20121,The Sustainability Approach,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,365,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676157/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30204,Logic and its Limits,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,-,-,90.0,60.0,30.0,-,-,-,-,-,--,-,-,-,366,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1131513/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10615,"""Machbarkeit"" and its Consequences",1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,367,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676118/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10226,Meaningful Project Management,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,30.0,15.0,15.0,After completion of the course students are able to come up with strategies for solving an existing problem and convert these strategies into a specific project. Students end the course with the formulation of a project proposal or logical framework. (ECTS:1),-,-,none,"After completing the course, students are able to
- plan projects professionally
- implement the main features of successful project management
- reflect on working in teams
- effectively work on achieving the planned results as well as the desired impact
- use different project management tools
... whilst taking into account relevant global issues.","Project management and social responsibility are key issues in companies today. This course combines both topics.
Strategies for solving an existing problem are developed and converted into a specific project. The methodology of the course is based on the Impact Chain and Logical Framework approaches – tools used for the successful development and realisation of projects. These tools cover many central project management aspects ranging from the goals and individual activities of a project to budget planning and project evaluation. Relevant steps are explained by way of good-practice examples and expanded upon in the students’ own project ideas. The thematic framework of the course revolves around issues of global responsibility: How can project managers in technical fields implement projects without exploiting people at home or abroad?Project management and social responsibility are key issues in companies today. This course combines both topics.
Strategies for solving an existing problem are developed and converted into a specific project. The methodology of the course is based on the Impact Chain and Logical Framework approaches – tools used for the successful development and realisation of projects. These tools cover many central project management aspects ranging from the goals and individual activities of a project to budget planning and project evaluation. Relevant steps are explained by way of good-practice examples and expanded upon in the students’ own project ideas. The thematic framework of the course revolves around issues of global responsibility: How can project managers in technical fields implement projects without exploiting people at home or abroad?","In a two-day block workshop students apply and reflect on the logic of project development. The methods are interactive.
The shorter version of the course (group 1) ends with a two-hour webinar held about one month after the block workshop. In this webinar, the results are evaluated and expanded upon.
In the longer version of the course (group 2), the acquired methods and tools are applied. Webinars help students with the implementation. In a final evaluation workshop, experiences and results are reviewed and discussed.",-,"Initiative Cookbook: http://www.mitost.org/en/about-us/mitost-editions/initiative-cookbook.html
Project Management Methods: http://competendo.net/en/Project_Development
A Guide to the Project Management Body of Knowledge (PMBOK Guide). 2014
Patzak, Rattey, Projektmanagement: Leitfaden zum Management von Projekten, Projektportfolios und projektorientierten Unternehmen. 2014",368,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675861/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20617,Media - Informatics - Internet,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,Yes,No,-,-,--,-,-,-,369,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676133/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30617,Media - Informatics - Internet,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,90.0,22.0,68.0,-,-,-,-,-,--,-,-,-,370,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676138/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21404,"Media, Science, Technology: Digital Transformations",2.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,"The students actively participate in the seminar (course achievement). At the end of the semester an oral examination is taken, in which the students reflect on learned topics and conceptions as well as on the function and structure of digital transformations in modern societies in relation to science, technology and media (examination requirements).",-,-,-,"Participants are able to understand the function and structure of digital transformations in science, technology and media. They are able to disuss and reflect these transformations by relating them to prominent positions in the social sciences and the humanities.","Digital media challenge classical forms of science- and technology communication and transform practices of scientific work and technical development. These digital transformations in science, technology and media are highlighted in the modul and discussed in relation to prominent positions in the social sciences and the humanities.Digital media challenge classical forms of science- and technology communication and transform practices of scientific work and technical development. These digital transformations in science, technology and media are highlighted in the modul and discussed in relation to prominent positions in the social sciences and the humanities.","text reading, discussions, researching materials, discussing reading impressions",-,-,371,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1234148/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31405,"Media, Science, Technology: Controversies",3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,"The students write a scientific essay (examination requirements). With the latter it is tested if the students are able to understand controversies about digitalization proccesses in science, technology and media and capable of relate theoretical approaches to different scientific-technical phenomena.",-,-,-,"Participants understand different positions in the social sciences and the humanities concerning digitalization in science, technology and media and are able to apply these to case studies about actual controversies in science, technology and media.","Digitalization increasingly permeates most aspects of our life. This development is accompanied by controversies concerning its potentials but also its challenges. This module seeks to inquire these controversies, in which the complex relationships between science, technology and media are becoming matter of concerns. With the help of actual theoretical approaches from the social sciences and the humanities different case studies are discussed and different materials are analyzed: e.g. public debates, documentary film, popular culture and science communication.Digitalization increasingly permeates most aspects of our life. This development is accompanied by controversies concerning its potentials but also its challenges. This module seeks to inquire these controversies, in which the complex relationships between science, technology and media are becoming matter of concerns. With the help of actual theoretical approaches from the social sciences and the humanities different case studies are discussed and different materials are analyzed: e.g. public debates, documentary film, popular culture and science communication.","text reading, discussing reading impressions, discussions, reading protocols, researching materials",-,-,372,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1176440/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20542,Media Ethics,2.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German/English,-,60.0,30.0,30.0,"In a (group) presentation (18-22 minutes plus discussion) and responses to other presentations, the students demonstrate their capability to collaborate on complex topics, gain insights from philosophical texts, apply them to case studies, and understand the implied ethical issues and conflicts.",No,No,-,"Upon successful completion of this module, students will be able to: 
• describe the prevalent and often implicitly presupposed conceptions of digital technology 
• explain the ethical issues entailed by the respective conception
• read, analyze, and understand philosophical texts
• apply the conceptions to concrete case studies 
• identify the specific ethical conflicts between these conceptions 
• present and discuss academic papers on this complex interdisciplinary topic","Digital technology is always getting more complex and more interwoven with the human lifeworld. The problems of understanding media – i.e. the nature and implications of digital technology – are expressed in radically different and often contradictory conceptions. The module examines the major conceptions of digital technology/media and the respective ethical consequences they imply. A particular emphasis is on the changes technology brings to the perception, action, and thinking of individuals and their social relations. Using selected examples, not only concepts for understanding (digital) media and models of ethical argumentation are presented, but also options for evaluating and dealing with ethical conflicts are discussed.Digital technology is always getting more complex and more interwoven with the human lifeworld. The problems of understanding media – i.e. the nature and implications of digital technology – are expressed in radically different and often contradictory conceptions. The module examines the major conceptions of digital technology/media and the respective ethical consequences they imply. A particular emphasis is on the changes technology brings to the perception, action, and thinking of individuals and their social relations. Using selected examples, not only concepts for understanding (digital) media and models of ethical argumentation are presented, but also options for evaluating and dealing with ethical conflicts are discussed.","Methods include conceptual analysis, hermeneutic work with texts, class discussions, group work, and presentations.",Online reader,"Coeckelbergh, Mark, and David J. Gunkel. 2023. “ChatGPT: Deconstructing the Debate and Moving It Forward.” AI & SOCIETY, June. https://doi.org/10.1007/s00146-023-01710-4.
Crane, Tim. 2021. “The AI Ethics Hoax.” IAI TV - Changing How the World Thinks. March 3, 2021. https://iai.tv/articles/the-ai-ethics-hoax-auid-1762.
Durt, Christoph. 2023. “The Digital Transformation of Human Orientation: An Inquiry into the Dawn of a New Era (Winner of the $10.000 Essay Prize).”
Esposito, Elena. 2022. Artificial Communication: How Algorithms Produce Social Intelligence. Strong Ideas Series. Cambridge, Massachusetts: The MIT Press.
Verbeek, Peter-Paul, and Robert P. Crease. 2005. What Things Do: Philosophical Reflections on Technology, Agency, and Design. 2. printing. University Park, Pa: Pennsylvania State Univ. Press.",373,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/694860/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30542,Media Ethics,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,374,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/694863/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20231,Concepts of Human Being,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,375,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/828865/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10231,Concepts of Human Being,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,376,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1253060/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20234,Human Rights Today,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,377,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/811971/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10234,Human Rights Today,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,378,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/811968/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30713,Mobility. Technology and movement in cultural space,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,379,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729432/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20713,Mobility. Technology and movement in cultural space,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,380,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729429/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31112,Multi-Inter-Trans: Cooperative Forms of Knowledge Production,3.0,-,Always,"Maasen, Sabine",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,381,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981716/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30333,"New Media - Political, Social, and Cultural Implications",3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German,-,90.0,30.0,60.0,-,Yes,-,-,-,--,-,-,-,382,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1136986/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20333,"New Media - Political, Social, and Cultural Implications",2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,383,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1176444/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30117,Economic Thinking,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,384,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676172/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10714,Human Resources Development,1.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,385,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729442/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21114,Perspectives of Technology Assessment,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,386,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/981547/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21115,Philosophy of Human-Machine Interaction,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,387,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1129399/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21220,Philosophy and History of Probability,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,388,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057334/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30240,Philosophy and Film,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,390,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676175/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20811,Understanding Politics 1: Theories of Power,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,391,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/817924/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30811,Understanding Politics 1: Theories of Power,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,392,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1352835/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21019,Understanding Politics 2,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,22.0,38.0,-,-,-,-,-,--,-,-,-,393,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/992305/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10716,Positions of Modern Design,1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,394,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/729451/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11301,Presentation Training with Video Feedback,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German,-,30.0,23.0,7.0,-,No,No,-,-,--,-,-,-,395,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1183838/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20817,Psychometric Diagnostics: The Human in Numbers,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,60.0,30.0,30.0,-,Yes,No,-,-,--,-,-,-,396,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/802618/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11317,Interdisciplinary Lecture Series Environment: Politics and Society,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,English,-,30.0,15.0,15.0,"A successful accomplishment of 9 academic performances is mandatory for the examination! The examination consists of a short PowerPoint presentation at the end of the semester. The presentation can be created alone or in groups of two. Everyone has to speak one minute. 
The examination is ungraded.",No,No,-,Students are able to follow expert presentations on political and social dimensions of environmental problems and identify core theses and central facts.,"The lecture series Umwelt (environment) is an interdisciplinary, public lecture organised by the Environmental Department of the Studentische Vertretung (Student Representatives) of the Technical University of Munich. Experts speak, e.g., on technical environmental protection, health, consumer and climate protection, including the political and social dimensions of current ecological topics and research results at a scientific level.The lecture series Umwelt (environment) is an interdisciplinary, public lecture organised by the Environmental Department of the Studentische Vertretung (Student Representatives) of the Technical University of Munich. Experts speak, e.g., on technical environmental protection, health, consumer and climate protection, including the political and social dimensions of current ecological topics and research results at a scientific level.","Lectures, presentations, discussions",-,-,397,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1142985/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21117,Risk - A Multidisciplinary Introduction,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,398,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/985145/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21901,Roles. Clichés. Visions. Science and Technology in the View of Literature and Theater,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,Yes,No,-,-,--,-,-,-,399,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1458680/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10348,Become Successful Through Writing,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,22.0,8.0,-,-,-,-,-,--,-,-,-,400,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/676181/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20552,"Self-Written, Newly Read - A Literary Writers' Lab",2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,401,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/714353/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA90142,Self-Competence - Intensive Course,1.0,-,Always,"Vierthaler, Barbara",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,18.0,12.0,-,Yes,Yes,-,-,--,-,-,-,402,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/946830/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30553,Scial Networks - Living on an Graph,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,403,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/692417/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10718,Speech Training for University Life,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,404,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1051756/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10222,Strategies for the Future,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,405,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679824/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20222,Strategies for the Future,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,406,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679848/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21411,Stress Competence,2.0,-,Always,"Vierthaler, Barbara",Academic Programs WTG,-,Bachelor/Master,EDS-M4,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,Yes,No,-,-,--,-,-,-,407,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1176450/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10349,Tech-Histories Alive,1.0,-,Always,-,Academic Programs WTG,formerly: Research Highlights. TUM Emeriti of Excellence,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,7.0,23.0,-,-,-,-,-,--,-,-,-,408,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/802539/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10412,Technical Writing (Engineer Your Text!),1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,English,-,30.0,15.0,15.0,"For their coursework (=immanent examination), students may choose between writing a short persuasive essay or a proposal (max. 1000 words); alternatively, they may compile a scientific abstract for a (hypothetical) paper (max. 250 words) or their thesis (max. 500 words). It is particularly important that students show sensitivity for different audiences and demonstrate their developed knowledge about argumentational structures in the chosen assignment.",-,-,Students require adequate English skills (intermediate to post-intermediate).,"By the end of the course, you are expected to be able to 
- identify the role of psychological factors in writing and reading.
- recognize the needs of different audiences.
- show sensitivity to usability demands.
- analyze technical documents and locate features of best-practice writing.
- organize and manage your own writing.","Fuel your studies by the alternative energy of this workshop. Maximize your skills to write. Increase your writing efficiency. Use sustainable strategies and quality tools. Learn to write TUM (Technical, Understandable, Manageable) documents.

This course will focus on the fundamentals of text manufacturing: materials, processes, designs, assembly methods, quality management, and performance monitoring.Fuel your studies by the alternative energy of this workshop. Maximize your skills to write. Increase your writing efficiency. Use sustainable strategies and quality tools. Learn to write TUM (Technical, Understandable, Manageable) documents.

This course will focus on the fundamentals of text manufacturing: materials, processes, designs, assembly methods, quality management, and performance monitoring.","The workshop uses a constructivist approach to document analysis and text production based on recent academic literacy research. Cooperative learning methods like discussions, small group work, peer review, some direct instruction, and the independent work of the students ensure the diversity of knowledge transfer.","Flipcharts, exercise portfolio, Moodle","Gopen, G. D. and Swan, J. A. (1990). The science of scientific writing. American Scientist, 78:57-63. Please access this article in advance at: http://www.americanscientist.org/issues/feature/the-science-of-scientific-writing",409,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/675571/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20720,Technology in everyday life,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,410,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/730139/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30720,Technology in everyday life,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,411,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/730248/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10233,"Technology, Life Cycle, and Risk Assessment",1.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,412,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679938/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20210,Philosophy of Technology,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,Yes,No,-,-,--,-,-,-,413,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679950/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30210,Philosophy of Technology,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,-,Yes,No,-,-,--,-,-,-,414,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679953/206?$ctx=lang=en&$scrollTo=toc_details,Browser
AR30320,Technoscience and the City: Advances in Urban Theory,3.0,-,from Winter semester 2015/16,Farias,Assistant Professorship of Partizipative Technikgestaltung (N.N.),-,Master,-,-,one semester,winter/summer semester,English,-,90.0,30.0,60.0,"Students will have to submit a final essay or report, which will measure not only the student’s ability to critically understand and evaluate the role of technoscience in contemporary urbanization processes, as well as the material politics, sociotechnical imaginaries, invisible work, and knowledge controversies shaping contemporary urban assemblages, but also the capability of proposing original analyses of historical or contemporary developments.",Yes,No,-,"1.	Understanding the role played by materials and technologies in the history of urbanization and modes of urban coexistence
2.	Analysing, through case studies, the sociotechnical assemblages, knowledge politics and hybrid urbanities emerging in contemporary processes of urban transformation
3.	Critically evaluating and experimentally exploring the more-than-human politics of grassroots and citizen projects.","Think of urban waste management, transport flows, noise abatement or tourist practices. Cities are made of multiple sociotechnical assemblages bringing together humans and non-humans, such as technologies, microbes, fuel or maps, in all sorts of ways for all sorts of purposes. For a long time, however, urban studies have mostly focused on the political economy of cities, on the logics of capital accumulation and class struggles shaping urbanization processes, overlooking the often contested role played by technoscience in shaping sociotechnical assemblages. 

This module introduces students to new theoretical approaches, conceptual repertoires and understandings of the urban, urbanity and urbanization that, inspired in science and technology studies, address the sociotechnical complexity of cities. Key issues addressed in this module include:

1.	Histories of urban materials and technologies
2.	Cities as technological artifacts and sociotechnical assemblages. 
a.	Performative, relational and fluid understandings of space
b.	Buildings as quasi-technologies and the dynamics of sociotechnical systems
c.	Cyborg and hybrid forms of urban life: infrastructural and inter-species assemblages
3.	Urban cosmopolitics and the right to infrastructureThink of urban waste management, transport flows, noise abatement or tourist practices. Cities are made of multiple sociotechnical assemblages bringing together humans and non-humans, such as technologies, microbes, fuel or maps, in all sorts of ways for all sorts of purposes. For a long time, however, urban studies have mostly focused on the political economy of cities, on the logics of capital accumulation and class struggles shaping urbanization processes, overlooking the often contested role played by technoscience in shaping sociotechnical assemblages. 

This module introduces students to new theoretical approaches, conceptual repertoires and understandings of the urban, urbanity and urbanization that, inspired in science and technology studies, address the sociotechnical complexity of cities. Key issues addressed in this module include:

1.	Histories of urban materials and technologies
2.	Cities as technological artifacts and sociotechnical assemblages. 
a.	Performative, relational and fluid understandings of space
b.	Buildings as quasi-technologies and the dynamics of sociotechnical systems
c.	Cyborg and hybrid forms of urban life: infrastructural and inter-species assemblages
3.	Urban cosmopolitics and the right to infrastructure","Teaching methods will include lectures, student presentations, in-class discussion of case studies and key texts, project work in groups, as well as regular discussions with the lecturer.

Lectures have the aim of introducing students into larger historical developments, conceptual genealogies and disciplinary contexts, as well as providing background information about the key authors to be discussed. The student’s oral presentation is a means to foster not only the student’s ability (a) to read analytically and engage critically with the suggested readings, but also (b) to conduct a discussion, through case studies, analysing the strengths, consequences, and problems of the arguments and case studies there present. In-class discussion of texts further fosters student’s capabilities to recognize and react to different readings and interpretations of a text, as well as to dialogically work towards a common understanding of key arguments. Project work in groups aims at fostering the student’s inventive skills to develop a theoretical or practical proposal. Regular discussions with the tutor ensure the student’s ability to develop different insights for the completion of the final essay.",-,"Amin, A. & Thrift, N. (2002) Cities. Reimagining the Urban. Cambridge: Polity Press.
Blok, A. & Farías, I. (Eds.) (2016) Urban Cosmopolitics. Agencements, Assemblies, Atmospheres. London: Routledge
Corsín, A. (2014) The right to infrastructure: a prototype for open source urbanism. Environment and Planning D: Society and Space 32(2): 342-362
Farías, I., & Bender, T. (Eds.). (2009). Urban Assemblages: How Actor-Network Theory Changes Urban Studies. London: Routledge.
Graham, S. & Marvin, S. (2001) Splintering Urbanism: Networked Infrastructures, Technological Mobilities, and the Urban Condition. London: Routledge.
Guggenheim, M. & Söderström, O. (Eds.) (2009) Re-shaping Cities. How Global Mobility Transforms Architecture and Urban Form. London: Routledge 
Heynen, N. Kaika, M. & Swyngedouw, E. (Eds.) (2006) In the nature of cities: urban political ecology and the politics of urban metabolism. London: Routledge
Latour, B. & Hermant, E. (1998) Paris Ville Invisible. Paris: La Decouverte",415,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1161213/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA90334,TheoPrax Project,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,Key Competences for you Study und Profession,one semester,winter/summer semester,German,-,90.0,19.0,71.0,-,Yes,No,-,-,--,-,-,-,416,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/809768/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA90331,TUMInspiration - Student Projects,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German/English,-,90.0,20.0,70.0,-,No,Yes,-,-,--,-,-,-,417,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/708036/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL70044,Business Ethics,3.0,-,Always,Christoph,Department of Governance,ehemals ED0097,Bachelor,-,-,one semester,summer semester,German/English,-,90.0,30.0,60.0,-,Yes,No,-,-,--,-,-,-,418,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/625501/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10445,Approaches to Negotiation,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,419,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/812014/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA11123,How to Produce Your Own Videos,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,420,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1011131/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31212,Visual Design for a Knowledge Society,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,421,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1052720/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21212,Visual Design for a Knowledge Society,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,422,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1051792/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10813,Economic Thinking: Economics,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,"Die berufliche und private Lebenswelt ist zu einem erheblichen Teil durch ökonomische Determinanten und Kalküle bestimmt. Besonders deutlich wird die Wahrnehmung und die Kommunikation ökonomischer Fragen in Krisen. 
Ein Ziel der Veranstaltung ist das Erkennen grundlegender ökonomischer Zusammenhänge.
Ökonomische Begriffe und Zusammenhänge als fachliche Grundlage volkswirtschaftlichen Denkens und Handelns werden im Workshop anhand folgender Themen erworben:

1. Wirtschaftliches Denken und Handeln
2. Marktwirtschaftliche Ordnungen
3. Markt und Preisbildung
4. Wirtschaftssubjekte
5. Übung
6. Wirtschaftskreislauf
7. Konjunktur und Stabilität
8. Finanzsystem
9. FallstudieDie berufliche und private Lebenswelt ist zu einem erheblichen Teil durch ökonomische Determinanten und Kalküle bestimmt. Besonders deutlich wird die Wahrnehmung und die Kommunikation ökonomischer Fragen in Krisen. 
Ein Ziel der Veranstaltung ist das Erkennen grundlegender ökonomischer Zusammenhänge.
Ökonomische Begriffe und Zusammenhänge als fachliche Grundlage volkswirtschaftlichen Denkens und Handelns werden im Workshop anhand folgender Themen erworben:

1. Wirtschaftliches Denken und Handeln
2. Marktwirtschaftliche Ordnungen
3. Markt und Preisbildung
4. Wirtschaftssubjekte
5. Übung
6. Wirtschaftskreislauf
7. Konjunktur und Stabilität
8. Finanzsystem
9. Fallstudie",-,-,-,423,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/821879/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30622,From Invention to Patent,3.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,-,-,-,-,-,--,-,-,-,424,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679956/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10447,From Idea to Product,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,425,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679959/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31900,Lecture Series Environment - TUM,3.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,English,-,90.0,23.0,67.0,"The examination consists of a poster created in a group of 2-3 people connecting topics from at least two lectures. In order to collect material for the poster, participants have to organize themselves in discussion groups with 5-6 people.
Each discussion group will split into two groupes for the poster. At the end of the semester the poster has to be presented. Every member of the poster group has to speak one minute,
The grade will consist of the poster and its presentation.
Mandatory requirements for the examination
For the 3-ECTS course a successful accomplishment of 16 academic performances is mandatory for the examination!",Yes,No,-,"After successful participation in this module, students are able to understand lectures at a high scientific level and reproduce central statements. Students are able to comprehend analyses of sustainable development and are familiar with formulating their own positions and justifying them in discussions. Furthermore, they know where they can explore the topic of sustainability in more detail on campus, whether in the form of course offerings, internships, projects or thesis.","The systematic integration of education for sustainable development at the university is an extremely complex challenge that can only be addressed through a plural and multi-perspective approach. Within the framework of the UNESCO World Programme of Action ""Bildung für Nachhaltige Entwicklung“ (BNE; =Education for Sustainable Development), the interdisciplinary lecture series Umwelt - TUM takes place at the TUM Campus Garching, which deals with changing topics in the field of environmental sustainability.
It is organized by the newly founded branch of the environmental department AStA TUM at the Garching campus to promote sustainability awareness at TUM and to offer interested students the opportunity to deal with the topic in more detail.The systematic integration of education for sustainable development at the university is an extremely complex challenge that can only be addressed through a plural and multi-perspective approach. Within the framework of the UNESCO World Programme of Action ""Bildung für Nachhaltige Entwicklung“ (BNE; =Education for Sustainable Development), the interdisciplinary lecture series Umwelt - TUM takes place at the TUM Campus Garching, which deals with changing topics in the field of environmental sustainability.
It is organized by the newly founded branch of the environmental department AStA TUM at the Garching campus to promote sustainability awareness at TUM and to offer interested students the opportunity to deal with the topic in more detail.","It consists of six lectures and an organizational meeting at the beginning. Each lecture includes two 40-minute presentations, a 15-minute break and a subsequent 45-minute discussion with the speakers, which is realized in cooperation with the Zentrum for Schlüsselkompetenzen (Center for Key Competencies) of the Faculty of Mechanical Engineering.
The lectures and presentation slides will be uploaded to the online learning platform Moodle. As homework, students will prepare a short report of the lectures and the discussion session. In addition, introductory and further literature will be addressed to enhance more detailed discussions of the lectures.",-,-,426,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1447894/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10563,What Holds Society Together?,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,30.0,15.0,15.0,-,-,-,-,-,--,-,-,-,427,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/800872/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20563,What Holds Society Together?,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,15.0,45.0,-,-,-,-,-,--,-,-,-,428,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/800875/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20564,What is Life,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,429,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/693302/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30564,What is Life,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,430,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/693305/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30108,What is Space? What is Time?,3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,431,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/692969/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20102,What is Time?,2.0,-,Always,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,30.0,30.0,-,-,-,-,-,--,-,-,-,432,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679968/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA31109,What Can I Know? - Classics of Epistemology,3.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,-,No,No,-,-,--,-,-,-,433,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1187595/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21109,What Can I Know? - Classics of Epistemology,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German,-,60.0,30.0,30.0,-,No,No,-,-,--,-,-,-,434,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1057421/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10450,When Engineers Become Managers,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,12.0,18.0,-,-,-,-,-,--,-,-,-,435,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679975/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10626,Communicating Science,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,30.0,15.0,15.0,-,No,No,-,-,--,-,-,-,436,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/714392/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21118,How to Manage Science,2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,437,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/985148/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30721,Philosophy of Engineering Sciences,3.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,summer semester,German,-,90.0,30.0,60.0,-,No,No,-,-,--,-,-,-,438,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/730315/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20721,Philosophy of Engineering Sciences,2.0,-,Always,-,Academic Programs WTG,-,Master,-,-,one semester,summer semester,German,-,60.0,30.0,30.0,-,No,No,-,-,--,-,-,-,439,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/730312/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA10029,Writer's Lab,1.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,30.0,8.0,22.0,-,-,-,-,-,--,-,-,-,440,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/679978/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA20322,"Coincidence, Luck, and Catastrophe",2.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,441,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/693315/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA30322,"Coincidence, Luck, and Catastrophe",3.0,-,Always,-,Academic Programs WTG,-,-,-,-,-,-,-,-,,,,-,-,-,-,-,--,-,-,-,442,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/693318/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21102,1914-1918: Science. Technology. War.,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,summer semester,German,-,60.0,30.0,30.0,-,Yes,No,-,-,--,-,-,-,443,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1070377/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10087,Project Weeks: Developing AI-Powered Educational Interventions for an Attention-Aware Video Player,4.0,-,from Winter semester 2024/25,"Kasneci, Enkelejda",Department of Educational Sciences,-,-,-,-,one semester,winter semester,English,-,,,,Project Presentation,No,No,Programming Skills,"After successfully completing the project week, students will have:
- An in-depth understanding of the effects of attention and mind wandering on the learning process and the ability to critically reflect on these phenomena.
- Knowledge of the design and implementation of AI-supported learning interventions to support attention in digital learning environments.
- Experience in the use of AI tools such as ChatGPT to develop personalized, learning-promoting measures.
- The ability to work independently on interdisciplinary projects and to incorporate feedback into iterative development processes in collaboration with other students.
- The ability to conduct small user studies to evaluate learning outcomes and attention and to use the results to further develop their interventions.","Have you ever watched a lecture only to suddenly realize you were planning dinner instead of paying attention to the professor? This phenomenon, called mind wandering, can disrupt learning. But what if we had a video player to detect when our attention drifts and help us refocus? In this project week, students will develop real-time AI-powered educational interventions for an existing attention-aware video player. Students will have the opportunity to design and implement adaptive support, like intermediate comprehension questions, directly into the video player that prompts learners to refocus. After an initial introduction to the topic and the existing video player tool, students will work independently, receiving feedback from instructors at various stages of development. To conclude, participants will conduct a small user study to evaluate the effectiveness of their interventions in improving learner attention and outcomes. This hands-on project offers a unique opportunity to merge education and computer science, allowing students to develop cutting-edge solutions that support attention in educational settings.Have you ever watched a lecture only to suddenly realize you were planning dinner instead of paying attention to the professor? This phenomenon, called mind wandering, can disrupt learning. But what if we had a video player to detect when our attention drifts and help us refocus? In this project week, students will develop real-time AI-powered educational interventions for an existing attention-aware video player. Students will have the opportunity to design and implement adaptive support, like intermediate comprehension questions, directly into the video player that prompts learners to refocus. After an initial introduction to the topic and the existing video player tool, students will work independently, receiving feedback from instructors at various stages of development. To conclude, participants will conduct a small user study to evaluate the effectiveness of their interventions in improving learner attention and outcomes. This hands-on project offers a unique opportunity to merge education and computer science, allowing students to develop cutting-edge solutions that support attention in educational settings.","This project is hands-on and student-centered. After an initial introduction to key concepts, students will work independently in small groups to design and implement AI-powered interventions in an attention-aware video player, gaining practical experience. They will receive periodic feedback to guide their development. Students will conduct a small user study to assess their interventions. At the end of the project, students will submit a short report summarizing their work and findings. This approach emphasizes active learning, practical application, and independent problem-solving.",Presentations,-,445,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4290888/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT53404,Academic Prompt Engineering and Management: a Reflexive Introduction,3.0,-,from Winter semester 2024/25,"Djeffal, Christian","Associate Professorship of Law, Innovation and Legal Design  (Prof. Djeffal)",-,Bachelor/Master,-,"Academic Use of Generative AI: a Lecture on Mastering Techniques, Understanding Background, Embracing Responsibility in Prompt and Bot Engineering and Management",one semester,winter/summer semester,English,-,90.0,15.0,75.0,"The module is completed with a written examination as the module examination. The written exam covers the topics and learning outcomes of the module.
In the written exam, students must demonstrate that they can:
•	Describe and apply techniques for prompt engineering with large language models, including methods for measuring prompt effectiveness and strategies for ensuring accuracy
•	Explain the importance of responsible development and deployment of LLMs
•	Analyze human-computer interaction with LLMs and discuss applications in academic research
•	Evaluate the design and performance of large language models in terms of fairness, transparency and robustness
•	Identify legal and ethical issues related to LLM-generated text
•	Assess the transformative potential and progress of LLMs across various domains
The written examination is in the form of short questions and multiple choice questions. Students must complete the exam individually under supervision within a time limit of 30 minutes. Permitted resources are specified by the examiner and communicated to students in advance. The exam is graded according to the grading scale defined in the examination regulations.",Yes,No,There are no prerequisites.,"Upon successful completion of this module, students will be able to:

•	Describe and apply techniques for prompt engineering in text generation using large language models (LLMs), including methods for measuring prompt effectiveness, advanced techniques, and strategies for addressing issues like hallucinations and ensuring accuracy.
•	Explain the importance of responsible development and deployment of LLMs, and demonstrate the ability to select appropriate models, identify and mitigate biases, ensure transparency, and evaluate the decision-making capacity of LLMs.
•	Analyze human-computer interaction with LLMs, including decision-making processes, and discuss the future of work in the context of LLM-powered text generation and their applications in academic research.
•	Evaluate the design and performance of large language models, focusing on key considerations such as fairness, transparency, and robustness.
•	Identify and discuss intellectual property, copyright, and other legal and ethical issues related to LLM-generated text.
•	Assess the transformative potential and rapid progress of LLMs, and explain their ability to reshape interactions with technology and information across various domains.","This module provides students from all parts of Technical University Munich with a comprehensive introduction to prompt and bot engineering for generating text with large language models (LLMs). The course combines hands-on training in effective prompting techniques with an exploration of the legal, ethical, and societal responsibility issues surrounding the use of LLMs for text generation.
Through a series of 10 lectures, students will gain practical skills in prompt engineering while developing a nuanced understanding of the broader implications of this rapidly evolving technology. Topics covered include:
•	Overview of techniques for prompt engineering in text generation using LLMs, including methods for measuring prompt effectiveness, advanced techniques, and addressing issues like hallucinations and ensuring accuracy.
•	Emphasis on responsible development and deployment of LLMs, focusing on selecting appropriate models, identifying and mitigating biases, ensuring transparency, and evaluating decision-making capacity.
•	Exploration of human-computer interaction with LLMs, including decision-making processes, the future of work in the context of LLM-powered text generation, and their applications in academic research.
•	Considerations for designing and evaluating large language models, focusing on performance, fairness, transparency, and robustness.
•	Discussion on intellectual property, copyright, and other legal and ethical issues related to LLM-generated text.
•	The transformative potential and rapid progress of LLMs, highlighting their ability to reshape interactions with technology and information across various domains.This module provides students from all parts of Technical University Munich with a comprehensive introduction to prompt and bot engineering for generating text with large language models (LLMs). The course combines hands-on training in effective prompting techniques with an exploration of the legal, ethical, and societal responsibility issues surrounding the use of LLMs for text generation.
Through a series of 10 lectures, students will gain practical skills in prompt engineering while developing a nuanced understanding of the broader implications of this rapidly evolving technology. Topics covered include:
•	Overview of techniques for prompt engineering in text generation using LLMs, including methods for measuring prompt effectiveness, advanced techniques, and addressing issues like hallucinations and ensuring accuracy.
•	Emphasis on responsible development and deployment of LLMs, focusing on selecting appropriate models, identifying and mitigating biases, ensuring transparency, and evaluating decision-making capacity.
•	Exploration of human-computer interaction with LLMs, including decision-making processes, the future of work in the context of LLM-powered text generation, and their applications in academic research.
•	Considerations for designing and evaluating large language models, focusing on performance, fairness, transparency, and robustness.
•	Discussion on intellectual property, copyright, and other legal and ethical issues related to LLM-generated text.
•	The transformative potential and rapid progress of LLMs, highlighting their ability to reshape interactions with technology and information across various domains.","Teaching and learning is structured in two dimensions with appropriate methods:
1.	Introductions by Lecturer
•	Traditional lectures delivered by the instructor, providing foundational knowledge and key concepts
•	Guest lectures by leading experts and practitioners in the field of LLMs and prompt engineering, offering diverse perspectives and real-world insights
•	Engaging video lectures for asynchronous learning, allowing students to review complex topics at their own pace
•	Interactive in-class discussions and debates on the ethical, legal, and societal implications of LLMs, encouraging critical thinking and active participation

2.	Exercises
•	Educational games and gamified exercises to reinforce learning and promote engagement with course material
•	Regular quizzes and short tests to assess understanding and provide formative feedback
•	Peer and self-assessment activities, fostering a collaborative learning environment and developing skills in giving and receiving constructive feedback","Online lectures, collaborative databases, whiteboards, student polls, slide presentations, quizzes, educational games","Anthropic. (2023). Prompt engineering. https://docs.anthropic.com/en/docs/prompt-engineering
Duan, S. et al. (2023). Denevil: Towards Deciphering and Navigating the Ethical Values of Large Language Models via Instruction Learning. arXiv. https://arxiv.org/abs/2310.11053
Fabiano, N. (2024). AI Act and Large Language Models (LLMs): When critical issues and privacy impact require human and ethical oversight. arXiv. https://arxiv.org/abs/2404.00600
Fabiano, N. (2024). AI Act and Large Language Models (LLMs): When critical issues and privacy impact require human and ethical oversight. arXiv. https://arxiv.org/abs/2404.00600
Gan, W. et al. (2023). Large Language Models in Law: A Survey. arXiv. https://arxiv.org/abs/2312.03718
Harrer, S. (2023). Attention is not all you need: the complicated case of ethically using large language models in healthcare and medicine. Science Direct. https://www.sciencedirect.com/science/article/pii/S2352396423000774
Mökander, J. et al. (2023). Auditing large language models: a three-layered approach. AI Ethics. https://doi.org/10.1007/s43681-023-00289-2
Prompt Engineering Guide. (2023). Prompting Techniques. https://www.promptingguide.ai/techniques
Quan, X. (2024). Enhancing Ethical Explanations of Large Language Models through Iterative Symbolic Refinement. arXiv. https://arxiv.org/abs/2402.00745
Weidinger, L. et al. (2021). Ethical and social risks of harm from Language Models. arXiv. https://arxiv.org/abs/2112.04359
Yan, L. (2023). Practical and Ethical Challenges of Large Language Models in Education: A Systematic Scoping Review. arXiv. https://arxiv.org/abs/2303.13379
Zhang, J. (2023). Ethical Considerations and Policy Implications for Large Language Models: Guiding Responsible Development and Deployment. arXiv. https://arxiv.org/abs/2308.02678",446,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076016/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT53405,Academic Prompt Engineering and Management: Responsible Use in Action,3.0,-,from Winter semester 2024/25,"Djeffal, Christian","Associate Professorship of Law, Innovation and Legal Design  (Prof. Djeffal)",-,Bachelor/Master,-,"Academic Use of Generative AI: a Seminar on Mastering Techniques, Understanding Background, Embracing Responsibility in Prompt and Bot Engineering and Management",one semester,winter/summer semester,English,-,90.0,15.0,75.0,"The module is completed with a written examination as the module examination. The written exam covers the topics and learning outcomes of the module.
In the written exam, students must demonstrate that they can:
•	Describe and apply techniques for prompt engineering with large language models, including methods for measuring prompt effectiveness and strategies for ensuring accuracy
•	Explain the importance of responsible development and deployment of LLMs
•	Analyze human-computer interaction with LLMs and discuss applications in academic research
•	Evaluate the design and performance of large language models in terms of fairness, transparency and robustness
•	Identify legal and ethical issues related to LLM-generated text
•	Assess the transformative potential and progress of LLMs across various domains
The written examination is in the form of short questions and multiple choice questions. Students must complete the exam individually under supervision within a time limit of 30 minutes. Permitted resources are specified by the examiner and communicated to students in advance. The exam is graded according to the grading scale defined in the examination regulations.",Yes,No,Students should be familiar with the contents of the introductory module SOT53404.,"Upon successful completion of this module, students will be able to:
- Design and implement advanced prompt engineering strategies for complex academic tasks, including systematic approaches to chain-of-thought reasoning, few-shot learning, and context optimization.
- Develop and execute comprehensive prompt testing frameworks to evaluate and improve prompt effectiveness, including quantitative metrics and qualitative assessment methods.
- Create and manage automated workflows for academic research using LLMs, incorporating proper documentation, version control, and quality assurance measures.
- Construct and validate bias detection and mitigation strategies in LLM applications, with particular focus on academic integrity and research validity.
- Synthesize and apply ethical frameworks for responsible AI use in academic settings, including developing guidelines for appropriate LLM integration in research methodologies.
- Lead and coordinate collaborative projects involving LLM integration, demonstrating the ability to manage stakeholder expectations and ensure compliance with academic standards.","This module builds on the lecture and provides students from all parts of Technical University Munich with a solidification of knowledge concerning the use of generative AI. The course combines hands-on training in effective prompting techniques with an exploration of the legal, ethical, and societal responsibility issues surrounding the use of LLMs for text generation.
Through a two-day interactive seminar, students will deepen their knowledge by using practical skills in prompt engineering while developing a nuanced understanding of the broader implications of this rapidly evolving technology. Topics covered include:
•	Application of techniques for prompt engineering in text generation using LLMs, including methods for measuring prompt effectiveness, advanced techniques, and addressing issues like hallucinations and ensuring accuracy.
•	Implementation of responsible development and deployment of LLMs, focusing on selecting appropriate models, identifying and mitigating biases, ensuring transparency, and evaluating decision-making capacity.
•	In-depth exploration of human-computer interaction with LLMs, including decision-making processes, the future of work in the context of LLM-powered text generation, and their applications in academic research.
•	Considerations for designing and evaluating large language models, focusing on performance, fairness, transparency, and robustness.
•	Application of requirements of intellectual property, copyright, fairness, diversity and other legal and ethical issues related to LLM-generated text.
•	The transformative potential and rapid progress of LLMs, highlighting their ability to reshape interactions with technology and information across various domains.This module builds on the lecture and provides students from all parts of Technical University Munich with a solidification of knowledge concerning the use of generative AI. The course combines hands-on training in effective prompting techniques with an exploration of the legal, ethical, and societal responsibility issues surrounding the use of LLMs for text generation.
Through a two-day interactive seminar, students will deepen their knowledge by using practical skills in prompt engineering while developing a nuanced understanding of the broader implications of this rapidly evolving technology. Topics covered include:
•	Application of techniques for prompt engineering in text generation using LLMs, including methods for measuring prompt effectiveness, advanced techniques, and addressing issues like hallucinations and ensuring accuracy.
•	Implementation of responsible development and deployment of LLMs, focusing on selecting appropriate models, identifying and mitigating biases, ensuring transparency, and evaluating decision-making capacity.
•	In-depth exploration of human-computer interaction with LLMs, including decision-making processes, the future of work in the context of LLM-powered text generation, and their applications in academic research.
•	Considerations for designing and evaluating large language models, focusing on performance, fairness, transparency, and robustness.
•	Application of requirements of intellectual property, copyright, fairness, diversity and other legal and ethical issues related to LLM-generated text.
•	The transformative potential and rapid progress of LLMs, highlighting their ability to reshape interactions with technology and information across various domains.","Workshop
•	Based on the learnings of the lecture
•	Hands-on design workshop and maker sessions, allowing students to experiment with prompt engineering techniques and develop practical skills in a supportive environment
•	Open-ended problem-solving exercises, challenging students to apply their knowledge to real-world scenarios and develop creative solutions
•	Pair programming and code review activities, promoting collaboration, knowledge sharing, and the development of best practices in prompt engineering and responsible AI development.
•	Possibility for successful teams to be represented in an online plattform built for that purpose","collaborative databases, whiteboards, student polls, slide presentations, quizzes, educational games","Anthropic. (2023). Prompt engineering. https://docs.anthropic.com/en/docs/prompt-engineering
Duan, S. et al. (2023). Denevil: Towards Deciphering and Navigating the Ethical Values of Large Language Models via Instruction Learning. arXiv. https://arxiv.org/abs/2310.11053
Fabiano, N. (2024). AI Act and Large Language Models (LLMs): When critical issues and privacy impact require human and ethical oversight. arXiv. https://arxiv.org/abs/2404.00600
Fabiano, N. (2024). AI Act and Large Language Models (LLMs): When critical issues and privacy impact require human and ethical oversight. arXiv. https://arxiv.org/abs/2404.00600
Gan, W. et al. (2023). Large Language Models in Law: A Survey. arXiv. https://arxiv.org/abs/2312.03718
Harrer, S. (2023). Attention is not all you need: the complicated case of ethically using large language models in healthcare and medicine. Science Direct. https://www.sciencedirect.com/science/article/pii/S2352396423000774
Mökander, J. et al. (2023). Auditing large language models: a three-layered approach. AI Ethics. https://doi.org/10.1007/s43681-023-00289-2
Prompt Engineering Guide. (2023). Prompting Techniques. https://www.promptingguide.ai/techniques
Quan, X. (2024). Enhancing Ethical Explanations of Large Language Models through Iterative Symbolic Refinement. arXiv. https://arxiv.org/abs/2402.00745
Weidinger, L. et al. (2021). Ethical and social risks of harm from Language Models. arXiv. https://arxiv.org/abs/2112.04359
Yan, L. (2023). Practical and Ethical Challenges of Large Language Models in Education: A Systematic Scoping Review. arXiv. https://arxiv.org/abs/2303.13379
Zhang, J. (2023). Ethical Considerations and Policy Implications for Large Language Models: Guiding Responsible Development and Deployment. arXiv. https://arxiv.org/abs/2308.02678",447,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076029/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED120053,AND Foundation Seminar,3.0,-,from Winter semester 2023/24,-,Assistant Professorship of Architecture and Design (Prof. Fanelsa),-,Master,-,-,one semester,winter semester,German/English,-,90.0,30.0,60.0,-,No,Yes,-,-,--,-,-,-,448,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3668755/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001284,Behavioral Economics meets real world challenges: An interdisciplinary project rally,6.0,-,Always,"Mohnen, Alwine",Chair of Corporate Management (Prof. Mohnen),-,Master,Behavioral Economics_Projectrally,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The examination consists of the presentation (written project report of 10 pages) of the project work comprising a description of the relevant project planning steps required as well as a meaningful use of behaviroal economic instruments to bridge people´s attitude behavior gap. An oral group presentation of the results will also be required. The project work shall validate the student´s ability to transform their ideas into a project proposal including a corresponding work breakdown structure and a communication strategy, while the presentation shall allow to assess the ability to present a project idea to an audience, and to conduct a discussion about the presented issues.",Yes,No,-,"At the end of the module, students are able to develop a detailed project plan and to understand related communication processes as well as apply principles and tools of  behavioral economics. They can present their results to specific target audiences in an organized manner. Additionally, they can organize ideas effectively and communicate them in a well-developed written report. Furthermore, students are able to understand the needs of different stakeholder groups touched by societal or environmental challenges and to apply techniques to avoid miscommunication in project management rooted in misunderstandings between different actors being involved in the project. After attending the module students are also able to analyze and evaluate basic principles of management. They can deduct recommendations and develop company-specific decisions in management. Furthermore students know how to assess pros and cons regarding the applicability and impacts on corporate management.","The module offers participants an overview of current issues in behavioral economics and their application on current societal or environmental challenges and gives them the opportunity to examine one topic in more detail. The module may serve as starting point for further research, but also prepares participants for issues they are likely to face in their professional lives. Emphasis is put on aspects of choice architecture, social preferences, nudging/green nudges, herding, and further phenomena of behavioral economics and their application on a real world case. The topics are typically related to human behavior in an economic context and potential behavioral interventions.The module offers participants an overview of current issues in behavioral economics and their application on current societal or environmental challenges and gives them the opportunity to examine one topic in more detail. The module may serve as starting point for further research, but also prepares participants for issues they are likely to face in their professional lives. Emphasis is put on aspects of choice architecture, social preferences, nudging/green nudges, herding, and further phenomena of behavioral economics and their application on a real world case. The topics are typically related to human behavior in an economic context and potential behavioral interventions.","In an introductory session, the topic of the current project is introduced and elaborated in detail. The introduction will also introduce the relevant behavioral economics and project management knowledge. Knowledge and skills are imparted by lectures, flipped classroom teaching, individual and group project work, peer discussions, and individual coaching sessions; the learning methods are definition and solving of problems, collaborative work, group discussions, prepare and hold presentations, report writing.","Books, case descriptions, academic papers, presentation slides, online resources",tbd,449,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2714841/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001410,ChangeMakers: Entrepreneurial and Design Competencies for Societal Transformation,6.0,-,Always,"Tryba, Anne",Chair of Entrepreneurial Education (Prof. Tryba),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"This module's learning objectives are examined via exercises (“Übungsleistung”) comprising the three elements outlined below. There is no written exam. 
 
(1) Group final presentation (50%): In the final session, you will present your team's approach and solution for a societally relevant challenge identified at the beginning of the course. The presentation format can be chosen by your team and should include the presentation of a design artifact. Design artifacts can include a 3-dimensional object, a visual representation, a video, a storyline, a systems map, and many other forms of storytelling and visualization. Presentations will last approximately 5 minutes, followed by a 5-10 minute Q&A and feedback round. Each team member must actively participate so your individual contribution is identifiable and appraisable. The final group presentation will showcase that you have acquired and can demonstrate essential entrepreneurial and design competencies: focus – you can identify whether a problem is worth solving; courage – you understand your role in creating change; imagination – you are capable of developing and articulating a vision; and action – you know how to take next steps. 

(2) Individually written reflection paper (20%): At the end of the course, you will submit a short paper (2 pages excl. sources) reflecting on
(a) your overall experience with and synthesis of the course's format (considering both the experiential learning immersion and the reading package)
(b) your critical reflection on the design solution you and your team created 
(c) whether and how the course allows and will allow you to generate hope in the face of critical societal challenges

(3) Daily course exercises (30%)
In each session during the project week, you will be asked to submit a small reflection exercise related to the day's content and learning objectives via Moodle. We will dedicate 10-15 minutes of each session to this exercise using a set of questions. You will be guided through the exercise by the course instructors. This will demonstrate that you have engaged with, understood, and critically reflected on the day's topic.",Yes,No,"Fluency in English; interest in entrepreneurship, design, and a sustainable future; willingness to work in a team; 
 
Due to the nature of the assessments and the ongoing team-based work in this course, consistent participation is mandatory. If you need to miss a session for health reasons or other valid circumstances, please inform us in advance via email. We may provide an opportunity to make up the missed material or, in cases of documented illness, assign a ""Q"" grade (indicating a missed exam with an accepted medical certificate).

Please note: Conflicts such as overlapping courses or work commitments are considered planning issues and should be resolved before enrolling in the course.","After successful completion of this module, students will be able to:

● Understand and apply basic entrepreneurial and design competencies, including: Focus for sophisticated problem identification; Courage to take an active role in creating change; Imagination to develop and articulate ideas; Action to take an idea forward towards implementation
● Leverage these competencies to retain hope in the face of critical societal challenges


While developing and articulating solutions in interdisciplinary project teams, students will learn how to plan, manage and conduct a project, mobilize scarce resources, act in the face of uncertainty, collaborate in a team, and present, discuss, and reflect upon their own solutions convincingly. In addition, working with future scenarios will strengthen students' creative confidence and analytical and strategic skills.","In this module, students will acquire entrepreneurial and design competencies through experiential and scenario-based learning: Set in a future scenario, students will be confronted with signals (based on scientific projections) that make clear what circumstances we may live in in the future. The Impulse Symposium ahead of the project week will provide inspiration and insight to stimulate students' imagination of the future we might live in. During the immersive project week, participants will work in small teams to create a real-life practical solution for a larger societal problem: The first day of the project week creates space to explore what challenges students find relevant and care about, and to explore through design and entrepreneurial methods whether these challenges appear to be worth solving. Throughout the week, students will learn and apply creative problem-solving methods, entrepreneurial thinking and decision-making to work through that challenge they chose. Students will be encouraged to leverage Generative AI tools to illustrate the ideas they create. Students will be guided to apply visualization and prototyping methods as well as reflection techniques that will support them in producing a shareable vision of a livable and lovable future and identify why and how they can contribute to realizing it.
The module is intentionally structured to include an impulse before, as well as iteration and reflection after an immersive project week. In addition, students will receive a reading package. Combining these elements will allow students to start well-prepared, reactive their prior knowledge, inform themselves about relevant methods, and process and appraise new information.In this module, students will acquire entrepreneurial and design competencies through experiential and scenario-based learning: Set in a future scenario, students will be confronted with signals (based on scientific projections) that make clear what circumstances we may live in in the future. The Impulse Symposium ahead of the project week will provide inspiration and insight to stimulate students' imagination of the future we might live in. During the immersive project week, participants will work in small teams to create a real-life practical solution for a larger societal problem: The first day of the project week creates space to explore what challenges students find relevant and care about, and to explore through design and entrepreneurial methods whether these challenges appear to be worth solving. Throughout the week, students will learn and apply creative problem-solving methods, entrepreneurial thinking and decision-making to work through that challenge they chose. Students will be encouraged to leverage Generative AI tools to illustrate the ideas they create. Students will be guided to apply visualization and prototyping methods as well as reflection techniques that will support them in producing a shareable vision of a livable and lovable future and identify why and how they can contribute to realizing it.
The module is intentionally structured to include an impulse before, as well as iteration and reflection after an immersive project week. In addition, students will receive a reading package. Combining these elements will allow students to start well-prepared, reactive their prior knowledge, inform themselves about relevant methods, and process and appraise new information.","This module relies on six core elements:

● Impulse – a university-wide public mini-symposium that includes high-quality inspirational speakers who will set the tone and give context. 
● Project Week – an immersive one-week project-based experience including theory-driven and methodological impulses, team activities, interactive discussions, flipped classroom elements, and guided project work inside and outside the classroom.
● Iteration – a review of the work that has been created during the project week in small teams accompanied by feedback and support from peers and subsequent further development.
● Presentation – a celebratory moment where participating teams share their work with each other and discuss their process and results. 
● Reflection – a moment to reflect on the experience and, importantly, plan for possible next steps of integrating the newly acquired skills into one’s work. 
● Reading package - a collection of supporting course material, links, and articles to strengthen the understanding and sensemaking of the applied methods.","Presentations, videos, flipchart, whiteboard, digital tools, Zoom for feedback sessions, prototyping materials","Each semester students will be provided with a reading list relevant to the course. 
Inspirational readings include (students will be asked to engage with a selection of inspirational readings): 
*Arend, R. J. (2020). The roles of thought and affect on entrepreneurship – A new hope. Journal of Business Venturing Insights, 14. DOI: 10.1016/j.jbvi.2020.e00188.
* Brown, T., Carey, S.,& Wyatt, J.(2021). The next chapter in design for social innovation. Stanford Social Innovation Review. 
* Giudice, M., & Ireland, C. (2023). Changemakers: How leaders can design change in an insanely complex world. Two Waves Books.
* Hari, J. (2023). Stolen focus: Why you can't pay attention--and how to think deeply again. Crown. 
* Holiday, R. (2021). Courage is calling: Fortune favors the brave. Penguin.
* Hoppe, M., & Namdar, K. (2023). Towards entrepreneurship for a cause: educating transformative entrepreneurial selves for a better world. Entrepreneurship Education and Pedagogy, 6(4), 590-607.
*. Lans, T., Blok, V., & Wesselink, R. (2014). Learning apart and together: towards an integrated competence framework for sustainable entrepreneurship in higher education. Journal of Cleaner Production, 62, 37-47.
* Markovitz, D. (2020). How to avoid rushing to solutions when problem-solving. Harvard Business Review Digital Articles, 2–6.
* Mauch, C. (2019). Slow hope: Rethinking ecologies of crisis and fear. RCC Perspectives: Transformations in Environment and Society, 1. doi.org/10.5282/rcc/8556.
* Noel, L. A. (2023). Design social change: Take action, work toward equity, and challenge the status quo. Ten Speed Press.
* Thackara, J. (2005): In the Bubble: Designing in a complex world; The MIT Press.
* Wedell-Wedellsborg, T. (2017). Are you solving the right problems? Harvard Business Review, 95(1), 76–83.
* Weiss, L. (2017). Stop mindlessly going through your work day. Harvard Business Review Digital Articles, 2–4.",450,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3639828/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED130100,"Critical Making: Uncovering Biases, Rapid Prototyping, and Designing for Engagement",6.0,-,from Winter semester 2024/25,-,Chair of Design and Transdisciplinarity (Prof. Diefenthaler),-,Master,Critical Making,"Uncovering Biases, Rapid Prototyping, and Designing for Engagement",one semester,winter semester,English,-,180.0,60.0,120.0,"The examination of this module is a presentation consisting of the following 3 components:


(1) Reflexive portfolio (individual work, 20%)
Students are required to read and respond to 6 questions relevant to the literature list with 300-450 word essays each. The portfolio is to be submitted one week before the seminar begins in January.

(2) Final presentation (group work, 20%)
For the Final Presentation, we ask you to do a group presentation, a demo of your artefact, and answering questions. You will also present a compact brochure.

(3) Final report (group work, 60%)
The final report is a comprehensive documentation, structured based on guidelines that will be shared at the beginning of the course. It includes a description of research conducted. The report is created in a visually appealing way, and proofread. The length is a minimum of 1,800 and a maximum of 2,200 words. Formal requirements for formatting and citation style need to be met, but students are free to choose font and font size. The final report is to be uploaded via Moodle up to 2 weeks after the final presentation.",No,Yes,"Fluency in English; interest in moving beyond traditional methods of problem-solving, and instead engaging in opening the problem space and understanding biases deeply; willingness to engage in critical thinking and discussions; interest in engaging with multidisciplinary groups; willingness to work in a team; willingness to produce (simple) prototypes as part of that team and under guidance. There is no need for deep technical knowledge or expertise in social or computer sciences, as these skills will be shared among multidisciplinary team members and supported by the lecturers.","After successful completion of this module, students will have acquired basic skills and understanding to:

● apply critical thinking to open up problem spaces and use analytical thinking to better understand the roots of those problems
● utilize methods of user-oriented innovation processes including iteration based on research and feedback 
● use a number of physical computing and rapid prototyping tools, inlcuding Arduinos and Raspberry Pi microcontrollers, sensors, basic IoT devices, 3D printers, CNC machines, etc. 
● make and communicate informed design decisions about the specific design of the artefacts 
● illustrate and communicate a technological bias effectively and engagingly to a respective audience, including non-academic audiences
● maintain a critical lens on biases in technology R&D processes
● collaborate in multidisciplinary teams with peers and develop basic project management skills","Critical Making is a method that combines critical thinking with making (or rapid prototyping), allowing for people from different disciplines to collaborate. It can be used in any educational or real-world setting. Developed in 2009 by Prof. Ratto, it has been used at renowned universities such as Berkeley, Stanford, New York University, University of Toronto or Emily Carr. Since 2018, this course has also been taught the Technical University of Berlin by the lecturers of this seminar. It combines learning about the theoretical foundations of critical making with the practical application of the method in a project students work on. 

Often, products that are supposedly aimed at women are designed based on stereotypes, such as ""shrink it or pink it"", implying that smaller or pinker products would be more desirable for women. In this course, we explore how such biases, often invisible, are built into innovations and products during the research and development (R&D) process. We uncover far-reaching consequences in mechanical engineering, medicine, urban design and public transport planning, etc. 

The course has two main components:
Theoretical foundations:
First, we will create a shared understanding about critical thinking in R&D processes with an overview of the critical theory of technology (STS, HCI), various academic approaches such as Critical Technical Practice, Critical Engineering, speculative design, and an introduction to the method of critical making. Case studies and examples illustrate this content.

We will also raise awareness of gender bias in R&D processes: students are introduced to basic terms, receive an overview of case studies of gender bias in technologies; are informed about the political relevance of the topic, and thus understand the roots of such biases, including the representation of women in R&D. This is done through case studies and exercises.

Practical application:
Students will be supported to develop the skills for the practical implementation of critical R&D processes in teams: this includes simple coding skills on how to use an Arduino (support by experts and peer support), designing and making a critical artifact in the Makerspace (hands-on prototyping), basic design skills to make decisions about form, materiality and perception,  the creation of a zine (science communication) and writing a final report (scientific skills). To do this, students will work in small groups on a problem they are invested in.

The seminar takes place in hybrid form in cooperation between the Fraunhofer Institut, Berlin University Alliance and the Chair of Design and Transdisciplinarity of TUM. The seminar language is English and work is to be completed in English.Critical Making is a method that combines critical thinking with making (or rapid prototyping), allowing for people from different disciplines to collaborate. It can be used in any educational or real-world setting. Developed in 2009 by Prof. Ratto, it has been used at renowned universities such as Berkeley, Stanford, New York University, University of Toronto or Emily Carr. Since 2018, this course has also been taught the Technical University of Berlin by the lecturers of this seminar. It combines learning about the theoretical foundations of critical making with the practical application of the method in a project students work on. 

Often, products that are supposedly aimed at women are designed based on stereotypes, such as ""shrink it or pink it"", implying that smaller or pinker products would be more desirable for women. In this course, we explore how such biases, often invisible, are built into innovations and products during the research and development (R&D) process. We uncover far-reaching consequences in mechanical engineering, medicine, urban design and public transport planning, etc. 

The course has two main components:
Theoretical foundations:
First, we will create a shared understanding about critical thinking in R&D processes with an overview of the critical theory of technology (STS, HCI), various academic approaches such as Critical Technical Practice, Critical Engineering, speculative design, and an introduction to the method of critical making. Case studies and examples illustrate this content.

We will also raise awareness of gender bias in R&D processes: students are introduced to basic terms, receive an overview of case studies of gender bias in technologies; are informed about the political relevance of the topic, and thus understand the roots of such biases, including the representation of women in R&D. This is done through case studies and exercises.

Practical application:
Students will be supported to develop the skills for the practical implementation of critical R&D processes in teams: this includes simple coding skills on how to use an Arduino (support by experts and peer support), designing and making a critical artifact in the Makerspace (hands-on prototyping), basic design skills to make decisions about form, materiality and perception,  the creation of a zine (science communication) and writing a final report (scientific skills). To do this, students will work in small groups on a problem they are invested in.

The seminar takes place in hybrid form in cooperation between the Fraunhofer Institut, Berlin University Alliance and the Chair of Design and Transdisciplinarity of TUM. The seminar language is English and work is to be completed in English.","This module conveys content by project-based learning: Students acquire foundational knowledge which they then immediately be applied to a real-world problem. 

The class begins in a course setting where through assigned texts, input from lecturers and experts, and active discussion of examples, students develop a basic understanding of biases and criticality in technology development. The course includes hybrid learning moments with experts from the Fraunhofer Institute and a peer class from the TU Berlin. Simultaneously, students identify a topic drawing from their own experiences and form groups in which they will pursue projects related to these topics. Students will have an opportunity to switch teams up until a certain point of the seminar, should their interest change. 

By mid-week, students begin to explore their ideas through paper prototypes. A hands-on introduction to working with Arduinos and other simple micro-controllers equips students to begin to design their critical artefacts. An introduction to basic design skills, taught through short impulse lectures and subsequently applied in practical design exercises supports students to refine the design of their artifacts. In the following mini hackathon, the ideas developed will be physically realized and tested in prototypes with the help of experts from the TUM's Makerspace. Modern rapid prototyping technologies such as 3D printing, CNC milling, microcontrollers, sensors and simple IoT devices will be used for this. 

During the final presentation, students not only share the artefact they created, but actively seek to generate discussions around their work. In addition, experimenting with non-traditional research outputs, such as the ""zine"" format is exercised for science communication. 

Prior to the project week, the course includes an orientation that helps students understand the course journey and expectations and sets the tone for the content.","Presentations, guest lectures, videos, whiteboards, post-its, an Arduino starter kit, paper prototyping materials, and rapid prototyping materials","Course readings and references will include the works of: Phil Agre, Julian Oliver, Anthony Dunne and Fiona Raby, Matt Ratto and Garnet Hertz. 

Students will be provided with a mandatory reading package before the first lecture.",451,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4176654/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT46406,Data Governance in Action,6.0,-,from Winter semester 2024/25,"Djeffal, Christian","Department of Science, Technology and Society",-,Master,-,-,one semester,irregularly,English,-,180.0,60.0,120.0,"Students will be graded based on their performance in both individual and group assessments. Each student will receive a grade for their individual presentation (50%) and the group presentation  prototype (50%). These assessments will evaluate various skills such as research quality, oral presentation abilities, and the quality of the individual performance and group's teamwork. Different groups may use varying methods of communication, such as posters, presentations, or videos, depending on the nature of the project. The evaluation will focus on the quality, clarity, and depth of the presentation and prototyping, as well as the strength of the conclusions and recommendations. Students are expected to demonstrate a range of skills (1 to 9) in both components of the assessment.",No,No,"The course does not have any specific prerequisite modules. However, it would be beneficial for students to have a good understanding of the social, ethical, and legal aspects of Artificial Intelligence and Machine Learning, as well as practical applications of these technologies and other Data Science tools. This course caters to master students who are familiar with data-driven methods, especially those in programs like computer science, data science, mechanical engineering, business informatics, and medical technology.
The student profile is not uniform since the aim of the module is to bring students together with different profiles to stimulate and enforce interdisciplinary work.
There will be an onboarding process in which the students will be checked on their affinity with the topic and the competences that are useful in the interdisciplinary work that will be done.","Upon successful completion of this module, students will be able to:
1.	Articulate the key concepts, principles, and significance of data law and data governance in modern organizations
2.	Analyze and evaluate different data governance models and their applicability to specific organizational contexts
3.	Apply legal reasoning and ethical considerations in designing data governance frameworks
4.	Formulate and implement data governance policies, standards, and procedures
5.	Utilize data governance tools and techniques to manage data quality, metadata, and data lineage
6.	Engage in productive collaborations within interdisciplinary teams to solve complex data governance challenges
7.	Critically assess the impact of emerging technologies and trends on data governance practices
8.	Design and present innovative solutions for real-world data governance problems
9.	Reflect on the interdisciplinary nature of data governance and its implications across various fields of study and practice","The ‘Data Governance in Action’ module focuses on the practical implementation of data governance principles in modern organizations. It encompasses an extensive range of crucial topics vital for comprehending and executing effective data governance strategies. The module commences with an introduction to the data governance concepts and their pivotal significance in the digital economy. Students will delve into the legal and regulatory frameworks for data management, including GDPR, the EU Data Act, and the EU Data Governance Act to ensure adherence to regulations and best practices.
The module explores different data governance models and organizational structures, offering insights into how companies can effectively manage their data assets. Participants will gain an understanding of the roles and responsibilities within data governance, such as data stewards and data owners, to comprehend the human element involved in successful data management.
Data quality management and metadata management are essential components of the module, highlighting the significance of maintaining accurate and reliable data. Additionally, the module addresses data security, privacy, and ethical considerations, acknowledging the mounting concerns regarding data protection and responsible data use.
To ensure that students remain at the forefront of the field, the module also scrutinizes emerging trends in data governance, such as AI governance, data intermediaries, and data portability. These topics reflect the changing landscape of data management and prepare students for future challenges.
Throughout the module, practical challenges and solutions in implementing data governance are discussed, providing students with real-world insights and applicable knowledge. This hands-on approach ensures that participants not only understand theoretical concepts but also gain practical skills to tackle data governance issues in their future careers.The ‘Data Governance in Action’ module focuses on the practical implementation of data governance principles in modern organizations. It encompasses an extensive range of crucial topics vital for comprehending and executing effective data governance strategies. The module commences with an introduction to the data governance concepts and their pivotal significance in the digital economy. Students will delve into the legal and regulatory frameworks for data management, including GDPR, the EU Data Act, and the EU Data Governance Act to ensure adherence to regulations and best practices.
The module explores different data governance models and organizational structures, offering insights into how companies can effectively manage their data assets. Participants will gain an understanding of the roles and responsibilities within data governance, such as data stewards and data owners, to comprehend the human element involved in successful data management.
Data quality management and metadata management are essential components of the module, highlighting the significance of maintaining accurate and reliable data. Additionally, the module addresses data security, privacy, and ethical considerations, acknowledging the mounting concerns regarding data protection and responsible data use.
To ensure that students remain at the forefront of the field, the module also scrutinizes emerging trends in data governance, such as AI governance, data intermediaries, and data portability. These topics reflect the changing landscape of data management and prepare students for future challenges.
Throughout the module, practical challenges and solutions in implementing data governance are discussed, providing students with real-world insights and applicable knowledge. This hands-on approach ensures that participants not only understand theoretical concepts but also gain practical skills to tackle data governance issues in their future careers.","The teaching method integrates instructor-guided sessions with hands-on problem solving and experimentation, encouraging students from diverse academic areas to work together. The heart of this learning model lies in collaborative group work, nurtured by instructors who facilitate the educational experience.

In the intial classes, students are introduced to the basics of data governance and data law through self-directed inquiry and research, laying the groundwork for more detailed exploration. Under the guidance of instructors, learners identify and delve into specific subjects, setting the stage for the week ahead.

Training is enhanced with design thinking workshops, interviews with experts and stakeholders in the field, and discussions that cover the latest opportunities and developments within data law and governance. This multifaceted approach encompasses the legal, technological, and societal dimensions of the field.

As the course progresses, students engage in collaborative group work, employing strategies such as case studies and real-world examples to tackle intricate data management problems. This challenge-based learning methodology encourages students to engage in brainstorming and ideation sessions, leading to the development of innovative solutions through prototyping and iterative design. Employing the design thinking model, students will be equipped to conduct interviews with potential users, generate ideas, and create prototypes. In the final phase of reflection session, students will have the opportunity to present their findings, receive peer feedback, and participate in critique sessions. This will enable them to reflect and create customized solutions that take into account the needs of various stakeholders, promoting the practice of reflective writing and journaling.

Moreover, the module places a strong emphasis on teching teaching legal methods such as interpretation and legal reasoning, to specific scenarios within data law. This practice allows students to sharpen their skills in analyzing and evaluating legal issues accurately, through methods including case studies.","•	Multimedia presentations (PowerPoint, Google Slides, etc.)
•	Video production (documentaries, PSAs, etc.)
•	Websites and blogs
•	Infographics and data visualizations
•	Physical prototypes and models
•	Digital portfolios
•	Posters and visual displays
•	Live demonstrations and exhibitions
•	Oral presentations and pitches
•	Written reports and articles",t.b.a.,452,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076105/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10084,Design Challenge: Addressing the Climate Crisis Through Gaming Simulation,6.0,-,from Summer semester 2024,"Knogler, Maximilian",Department of Educational Sciences,-,Bachelor/Master,-,-,one semester,winter semester,German,-,160.0,70.0,90.0,-,No,No,-,-,--,-,-,-,453,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076908/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86812,Development of Data Analysis Tools and Communication Strategies to Address Harmful Online Content,6.0,-,from Summer semester 2023,"Gasser, Urs",Department of Governance,-,Master,-,TUM Project Week,one semester,one-time,English,-,180.0,60.0,120.0,"This module examination will be a project work. Lecturers will provide students possible project topics based on their scholastic background. In preparation for the TUM Project Week, there will be ""Self-Study Phase"" for students, leading up to the event. After each week in the Self-Study Phase, students will review and learn about specific aspects of hate speech and other harmful online content. There is the possibility to improve the module grade by 0.3 grade points by submitting a short written assignment after each Self-Study Phase week. A deterioration of the module grade is not possible in this way. Also, an improvement is excluded if the module grade is 4.3 or worse. 

This project work will include one group written submission will consist of a group report (15-20 pages) with two associated group presentations: 1 initial presentation (15-20 minutes) and 1 final presentation (20-25 minutes). Each group member will be graded individually. With the written report and presentations, the students will show that they understand the basic concepts and fundamentals of hate speech and harmful online content, communication strategies, and data analysis. In addition, through their paper and presentation, students will show that they have the ability to logically and clearly express and communicate their research and ideas.",No,No,"This module is aimed at students enrolled in a Masters program at TUM and are interested in gaining skills in data analysis and communication strategy. 
As this is an interdisciplinary event with a goal to bring together a variety of different ideas and perspectives, students from all subjects are encouraged to join. A high level of motivation and general willingness to participate in group projects is recommended.","Throughout this module, students are expected to gain a wide variety of new skills, knowledge, and competencies. Some key aspects they will gain will be:
- Increase substantive knowledge: Students will gain in depth knowledge surrounding the questions and problems related to harmful public discourse online. This will require students to familiarize themselves with topics that are complex and often fuzzy, further improving their substantive knowledge: For instance, how is hate speech defined, who is mostly targeted, or how does the process of reporting work?
- Better developed data analysis skills: Students will learn how to distinguish useful information and insights by applying statistical and graphical techniques to data.
- Overcoming their disciplinary boundaries: The project requires that different perspectives are taken into account when addressing the challenge of harmful public discourse. By bringing together students from computational & data science backgrounds with students from social sciences backgrounds, this project will promote creativity through the exchange of ideas across disciplines.
- Transfer of knowledge: Students will gain a new skill set in “storytelling” as they learn how to craft data-based communication strategies for non-expert audiences.
- Social competencies: Course participants will further practice and develop their presentation and collaboration skills.","The content of the module is specific to online hate speech and other harmful online content in conjunction with AI and other forms of social analysis. Additionally, the content includes how society has historically impacted online hate speech.The content of the module is specific to online hate speech and other harmful online content in conjunction with AI and other forms of social analysis. Additionally, the content includes how society has historically impacted online hate speech.","The module consists of a seminar. The main topics of the seminar are covered: through a kick-off event, through course material located on Moodle during the Self-Study Phase, and through a one week block-course (TUM Project Week). The students will use the knowledge they gain from Moodle, from the project week, information from their scholastic background and from their own self-study, within a group to tackle hate speech and other harmful online content. These specific group projects will be given to each group, based on their scholastic background by the lecturers. The topics are in the field of hate speech and other harmful online content. Some examples include: (1) Technical analysis of hate speech using image and text recognition AI and (2) Social analysis of Hate speech between political occurrences and minorities.","PowerPoint, Literature, Moodle, Jupyter Notebook","Alkomah, F., & Ma, X. (2022). A Literature Review of Textual Hate Speech Detection Methods and Datasets. Information, 13(6), 273. https://doi.org/10.3390/info13060273",454,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3591730/206?$ctx=lang=en&$scrollTo=toc_details,Browser
BGU32022,The Finite Element Method for Fluid-Structure Interaction with Open-Source Software,3.0,-,from Summer semester 2014,-,Chair of Structural Analysis and Dynamics (Prof. Wüchner),-,Master,FSI,-,one semester,irregularly,English,-,90.0,70.0,20.0,"The examination consists of a project work (15-20 pages) and an associated final presentation (20 minutes). In the project work, an interdisciplinary task of fluid-structure interaction is carried out by the students using a computer program. With the project work, the students prove that they have understood the theoretical content and can apply it to a practical task in teams with members of different specialist fields. The initiation and problem definition takes place during the first events. The project work will be presented in the final presentation. With the final presentation, the students demonstrate that they are able to present their work to a broad audience, analyze various aspects of it and suggest improvements. The presentation contributes to the grade with 30%. A repetition of the examination is only possible by retaking the course in the following year.",No,No,"Strong background in higher mathematics and numerical methods. Furthermore, a solid background in engineering mechanics, structural analysis and dynamics (BV020002 Structural Dynamics), fluid-mechanics and the finite element method (BV320010 Introduction to Finite Element Methods).","At the end of the module the students have understood the fundamentals and main concepts of dealing with fluid-structure interaction problems using finite element methods. Furthermore, the students are capable of evaluating the different algorithmic and software variants concerning their applicability to specific FSI problems.","- Motivation and presentation of surface coupled problems in nature and technics.
- Basic equations for structures, fluid-flows and their coupling.
- Continuum mechanical basics for analysis on moving meshes (ALE – representation)
- Spatial- and temporal discretization of the basic equations: Basic concepts, problems and basic concepts.
- Numerical solution of the equations for structural mechanics and fluid-flows with finite elements: Element formulations, boundary conditions, implementation and solution aspects.
- Geometric representation of the coupling interface and its identification for complex problems: “embedded” and “body fitted” approaches.
- Formulation of the discrete coupled problem. Derivation and discussion of different solution strategies.
- Selected, advanced topics for FEM-based modelling and simulation of FSI: Chimera technique, flow around rotating components, meshing strategies, free surface flows, particle methods.
- Overview of software aspects and implementation of FEM-based multiphysics simulations.
- Introduction to the simulation of FSI problems with the open-source software Kratos Multiphysics.- Motivation and presentation of surface coupled problems in nature and technics.
- Basic equations for structures, fluid-flows and their coupling.
- Continuum mechanical basics for analysis on moving meshes (ALE – representation)
- Spatial- and temporal discretization of the basic equations: Basic concepts, problems and basic concepts.
- Numerical solution of the equations for structural mechanics and fluid-flows with finite elements: Element formulations, boundary conditions, implementation and solution aspects.
- Geometric representation of the coupling interface and its identification for complex problems: “embedded” and “body fitted” approaches.
- Formulation of the discrete coupled problem. Derivation and discussion of different solution strategies.
- Selected, advanced topics for FEM-based modelling and simulation of FSI: Chimera technique, flow around rotating components, meshing strategies, free surface flows, particle methods.
- Overview of software aspects and implementation of FEM-based multiphysics simulations.
- Introduction to the simulation of FSI problems with the open-source software Kratos Multiphysics.","The module consists of a classical lecture with notes on the black board, slides on the overhead and PowerPoint presentations. Those are supported by a manuscript. Furthermore, exercises in the seminar are used to present, discuss, implement and calculate selected examples with a computer. The project work is performed under supervision during the seminar. Additionally, a voluntary colloquium is offered  for related questions.","Manuscript, slides for overhead and PowerPoint, supporting material for the software, examples with documentation.","- Manuscript
- Selected publications and literature",455,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/996862/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SG860024,Football Analytics Hackathon,5.0,-,from Summer semester 2023,"Link, Daniel",TUM School of Medicine and Health,-,Master,-,-,one semester,winter semester,English,-,150.0,60.0,90.0,Project work (pass/fail): including presentation (30 min) and written report.,No,No,"Technical Analysis, Sports Informatics, Performance Analysis","The general aim of the module is to introduce students to the research field of soccer analytics. After successfully completing the project, students will be able: 
-	to understand typical professional sport competition data (spatiotemporal tracking data, event data) and their characteristic.  
-	to apply methods and paradigms of computer science such as network analysis, machine learning and visual analytics for modelling phenomena in soccer.  
-	to develop sports data products for mass media, competition information provider and  top level sports.","The technological innovations of recent years - in particular, advances in the field of position tracking – lead to enormous amounts of data in soccer. In this module students will have to solve challenges given by an expert group including sport data scientists, professional soccer clubs and sports data companies. Students will be organized interdisciplinary workgroups including students from computer science as well as from sport science. 
Challenges are related to soccer performance. The refer to an technical or tactical concept in soccer such as pressing, passing quality, line break, build up play, circle play, movements to receive, tactical formation, physical effort passing lines and much more. Based on these concepts, the students will have to: 
-	specify the concept from the perspective of sport science (e.g., what is a line and a line break?) 
-	specify the concept from the perspective of computer science (e.g., how can we model line breaks in a mathematical way?) 
-	develop a technical solution for detecting this concept in raw data (e.g., identifying the moment when a line break occurs) 
-	validate the detection quality based on video analysis (e.g., were the right moments founds?) 
-	calculate performance indicators based on these concept (e.g., number of line breaks, broken units, unsuccessful attempts) 
-	use appropriate methods from visual analytics to make the results be interpretable in an easy and intuitive way (e.g., by visualizing indicators in relation to context variables) 
-	interpret the results from the perspective of performance analysis (e.g., how can the results be used by a coach?)The technological innovations of recent years - in particular, advances in the field of position tracking – lead to enormous amounts of data in soccer. In this module students will have to solve challenges given by an expert group including sport data scientists, professional soccer clubs and sports data companies. Students will be organized interdisciplinary workgroups including students from computer science as well as from sport science. 
Challenges are related to soccer performance. The refer to an technical or tactical concept in soccer such as pressing, passing quality, line break, build up play, circle play, movements to receive, tactical formation, physical effort passing lines and much more. Based on these concepts, the students will have to: 
-	specify the concept from the perspective of sport science (e.g., what is a line and a line break?) 
-	specify the concept from the perspective of computer science (e.g., how can we model line breaks in a mathematical way?) 
-	develop a technical solution for detecting this concept in raw data (e.g., identifying the moment when a line break occurs) 
-	validate the detection quality based on video analysis (e.g., were the right moments founds?) 
-	calculate performance indicators based on these concept (e.g., number of line breaks, broken units, unsuccessful attempts) 
-	use appropriate methods from visual analytics to make the results be interpretable in an easy and intuitive way (e.g., by visualizing indicators in relation to context variables) 
-	interpret the results from the perspective of performance analysis (e.g., how can the results be used by a coach?)","In the module, students will have to solve challenges of match analysis in professional soccer. Students will work on spatiotemporal data of players and the ball provided by German professional soccer league (DFL). They will learn how to implement intelligent algorithms for deriving complex performance indicators from raw data, develop meaningful visualizations and and create added value for performance analysis. Challenges include various topics such as rating individual player actions, detection of match phases and playing styles or estimating physical workload of players. Students will be organized interdisciplinary workgroups, working independently on the challenges.  The module will be realized as a block from 08.01.2024 to 13.01.2024. There will be preparation sessions in the first 4 week of the term, in which the students have to solve exercises related to the data used during the hackathon.",-,-,456,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3555038/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001447,Future Making & Creativity,6.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,-,one semester,winter semester,German/English,-,180.0,90.0,90.0,"The course is examined via the solution of exercises (“Übungsleistung”). Specifically, we draw on two types of exercises to assess whether you and your team have reached the “Learning Goals”. These elements correspond to the “Teaching Methods” listed below. There is no written exam in the traditional sense.

Oral, individual – 30%: We will assess the quality of your contributions in class discussions to see whether you can define, explain, and apply in practice key theories of creativity, design, entrepreneurship, impact, and society; describe, compare, and appraise different existing design strategies and solutions for a given impact context; and compose innovative ideas for addressing social and environmental challenges through the application of photographic fieldwork and the curation of visual narratives.

Written, group – 70%: At the end of the course, you will submit a presentation in which you will highlight that you reached the key learning objectives of this course. As a group, you will be challenged to develop a unique creative approach to the case challenge, for which you will need to draw on key concepts learned in class and curate a photographic exhibition. This is used to showcase that you can interpret, classify, and assess the conduct and performance of any bottom-up organized effort to achieve societal change, i.e. to inspire, inform and mobilize entrepreneurial efforts aimed at overcoming social and/or environmental challenges",No,No,"Students of all disciplines are admitted to this course, but a good knowledge of German and English as well as a general interest in practical creative work, and in questions of sustainability and impact are basic prerequisites for participation in the course. The course language is mainly German. Please note that you will work in interdisciplinary groups consisting of both TUM students and students of creative subjects at other leading institutions, such as design students the Munich University of Applied Sciences. 

The willingness to read scientific literature and to learn how to use cameras are important prerequisites, as their knowledge and application will influence the final grade. 

Important: You do NOT have to have previous experience as a photographer or own any camera equipment except for a smartphone camera. General interest in the topic and eagerness to learn will be sufficient. We strongly discourage students to attend this course who are not capable of attending all sessions.","Learning Goals: 

To learn key theoretical foundations for better understanding the role creativity has in innovation processes and entrepreneurship.

To develop an understanding of the role of artistic production, storytelling and narrative in shaping collaborative innovation processes as well as public perception of entrepreneurship and social impact in general.

To critically analyze the influence entrepreneurial action has on societal development, and to identify key themes and messages related to impact-oriented entrepreneurship.

To explore the ways in which artistic production, and visual narratives in particular, can inspire and inform entrepreneurial efforts aimed at addressing social, environmental, and economic challenges.

To encourage creative production and the development of innovative ideas for addressing social and environmental challenges.

To build skills in critical analysis, oral and written communication, and collaborative problem-solving.                          

After the course, students will be able to:

Define, explain, critically discuss and apply selected key theories related to entrepreneurship, strategy, creativity, impact and narratives.

Interpret, classify, and assess the conduct and performance of any organization’s innovation and foresight efforts.

Describe, compare, and appraise entrepreneurial strategies and innovation concepts given their potential societal impact.

Distinguish the newly learned theories from previously learned management perspectives.

Evaluate how artistic work may affect innovation processes.","This course deals with the role of creativity in innovation development processes, and focuses, in particular, on how artistic production can be meaningfully used for this purpose. By linking photography with the Inner Development Goals (IDGs), the course engages both theoretically and practically with contemporary issues of societal progress, and public welfare-oriented, entrepreneurial action. 

The general aim is to enable participants to apply a radically creative approach to entrepreneurial strategy-making, and to use artistic methods as a catalyst for society-oriented innovation development. Given its strong practical orientation, the end result will be a photo exhibition that discusses alternative entrepreneurial strategies in realizing the Inner Development Goals. 

In designing the exhibition, students learn how an artistic method such as photography can be used to discover unconventional paths and recognise what radical new ways exist that could lead to positive social change. By reflecting on individual and cultural aspects of positive social development, the exhibition concludes the course and serves as a discussion forum for alternative realities of life and possible innovative approaches to progress. 

The course will offered in interdisciplinary and cross-university fashion (at both the students and the teaching faculty level) and taught be experts in design, future-making, and entrepreneurship. Collaborations include for example the Munich University of Applied Sciences (Prof. Ralph Buchner, Faculty of Design) and the Technical University of Munich (Julian Krauss, Professorship of Innovation and Organization Design).This course deals with the role of creativity in innovation development processes, and focuses, in particular, on how artistic production can be meaningfully used for this purpose. By linking photography with the Inner Development Goals (IDGs), the course engages both theoretically and practically with contemporary issues of societal progress, and public welfare-oriented, entrepreneurial action. 

The general aim is to enable participants to apply a radically creative approach to entrepreneurial strategy-making, and to use artistic methods as a catalyst for society-oriented innovation development. Given its strong practical orientation, the end result will be a photo exhibition that discusses alternative entrepreneurial strategies in realizing the Inner Development Goals. 

In designing the exhibition, students learn how an artistic method such as photography can be used to discover unconventional paths and recognise what radical new ways exist that could lead to positive social change. By reflecting on individual and cultural aspects of positive social development, the exhibition concludes the course and serves as a discussion forum for alternative realities of life and possible innovative approaches to progress. 

The course will offered in interdisciplinary and cross-university fashion (at both the students and the teaching faculty level) and taught be experts in design, future-making, and entrepreneurship. Collaborations include for example the Munich University of Applied Sciences (Prof. Ralph Buchner, Faculty of Design) and the Technical University of Munich (Julian Krauss, Professorship of Innovation and Organization Design).","Drawing on “Participant-Centred” teaching techniques, the largest share of this course will be co-developed by all of us through discussions of course materials and applying those in practice. The aim is not to learn a specific ""best practice,"" but to explore the potential of photography in discovering unconventional strategic pathways, i.e. by exploring possible alternative realities, respectively to find out what photography can do to realize a preferred way of (entrepreneurial) action. 

The final project at the end of the course is designed to demonstrate students' creativity and ability to apply what they have learned to a real-world problem. 

Teaching methods will be chosen in accordance with the content to be communicated. For example, new material may be introduced in short presentations by subject matter experts or through videos, then discussed in teams or by the entire course, and then applied in the creative project work. The group-level feedback meetings ('coachings') help to ensure that all materials have been understood and applied correctly (including potential adaptations). Accordingly, a large share of learning will occur through you preparing individually and in groups for the workshop days and coaching sessions. Required skills will further be showcased through the final presentation (with feedback) and possibly a report (feedback upon request). We strongly encourage you to take notes yourselves. We may also ask you to conduct exercises as we speak.","The largest share of this course will be developed by each study group through solving the specific case challenge and presenting the results. The hallmark of this course’s study challenges is their visual-photographic format combined with entrepreneurship-related questions and theories. In group discussions, we will then debate the results presented and thus co-create the learning outcome.",An up to date reading list will be distributed around the first session of class each semester.,457,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4078123/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001435,Impact Entrepreneurship for Transformational Change,9.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,-,one semester,winter/summer semester,German/English,-,270.0,80.0,190.0,"The examination consists of three components. In the accompanying online course, the content of the respective units is tested and deepened through reflection tasks and research tasks. This part represents 20% of the grade. Furthermore, the presentation prepared by the students at the end of the semester and its corresponding documentation (pitch deck or similar) is part of the examination (40%). A final report must also be submitted (also 40%).

As part of a final event, the teams present a solution idea for the problem they have chosen and developed in the area of society, ecology or technology. The presentation lasts 5-10 minutes. The students demonstrate that they are able to translate the information they have received into an independently developed impact-orientated business model and present this in an appropriate manner. They are supported in their preparation by regular feedback from lecturers and coaches. 

The third part of the grade results from the final report. It documents in a structured way how the information received and the tools presented for working on an impact-orientated business model were implemented. Furthermore, the feedback received during the final presentation should be taken into account and incorporated. The report ensures that the students go beyond mere documentation of their results to structure and reflect on them. The final report should not exceed 7500 characters and must be submitted up to eight weeks after the end of the semester.",Yes,No,"- Basic understanding of entrepreneurship and its principles, such as from attending an introductory lecture on the topic, founding experience, or closely following the media on the topic
- Basic knowledge in sustainability
 - Interest in developing innovative solutions from a systemic perspective to generate social and environmental impact","The aim of the module is to enable students to develop practice-oriented solutions in the form of impact-oriented business models. The focus is on generating impact in the sense of the United Nations Sustainable Development Goals. Students will be able to

 - explain the concept of impact and its implications and illustrate them using specific case studies.
 - develop entrepreneurial solutions for real challenges in interdisciplinary teams.
- apply tools and methods from the fields of systems thinking, future thinking, human-centred design, impact orientation and business modelling to their challenges.
- present the solutions developed for their challenges using professional presentation techniques appropriate to the target group.
- categorise and discuss alternative economic models such as the Economy for the Common Good, Doughnut Economics and post-growth approaches. 

The module focuses on experience-based and problem-oriented learning and aims to promote the development of social and entrepreneurial innovations as well as the promotion and development of students' skills with regard to responsible entrepreneurship. By developing solutions in interdisciplinary teams, students also improve their soft skills such as creativity, perseverance, communication skills, and interdisciplinary competences.","As part of the course, students from various disciplines spend a semester working intensively on social, ecological or technological challenges and the question of how these can be solved with the help of social and innovative business ideas.  

The programme teaches methods and knowledge on topics such as system innovation, design thinking, future thinking, regenerative and impact-oriented business models, impact management and financing. The systemic perspective is of particular importance in the programme. In particular, the major social and ecological problems of our time cannot be solved in isolation as ""wicked problems"". Solutions are therefore only possible by viewing them as phenomena that are integrated into systems. 

Students work in teams on social, ecological or technological challenges and apply the methodological knowledge they have acquired to develop an entrepreneurial solution for the selected problem. This process is structured and supported by lecturers and external coaches. 

At the end of the semester, the students present the solutions they have developed in the form of impact-orientated business models. In this context, they receive feedback and the opportunity to apply for follow-up coaching for the business ideas they have developed. The final report reflects on the process they have gone through and structures the results.

The course is held in German in the summer semester and in English in the winter semester.As part of the course, students from various disciplines spend a semester working intensively on social, ecological or technological challenges and the question of how these can be solved with the help of social and innovative business ideas.  

The programme teaches methods and knowledge on topics such as system innovation, design thinking, future thinking, regenerative and impact-oriented business models, impact management and financing. The systemic perspective is of particular importance in the programme. In particular, the major social and ecological problems of our time cannot be solved in isolation as ""wicked problems"". Solutions are therefore only possible by viewing them as phenomena that are integrated into systems. 

Students work in teams on social, ecological or technological challenges and apply the methodological knowledge they have acquired to develop an entrepreneurial solution for the selected problem. This process is structured and supported by lecturers and external coaches. 

At the end of the semester, the students present the solutions they have developed in the form of impact-orientated business models. In this context, they receive feedback and the opportunity to apply for follow-up coaching for the business ideas they have developed. The final report reflects on the process they have gone through and structures the results.

The course is held in German in the summer semester and in English in the winter semester.","Lectures and interactive, seminar-style teaching in the form of discussions, group work, development of challenges, team coaching sessions, feedback discussions, presentations, and Q&A sessions. The variety of methods ensures that the right method is chosen for each learning content to be taught. For example, new knowledge and tools are presented by experts in the field in keynote speeches and then discussed in large or small groups before being incorporated into the development of solutions. Feedback discussions and team coaching sessions facilitate the application of the tools and methods presented. The final presentation at the closing event gives participants the opportunity to practise their communication skills and improve them through appreciative, constructive feedback. The synchronous online and face-to-face teaching is supplemented by asynchronous elements of self-learning time via the accompanying online course and associated reflection tasks, as well as by self-organised project group meetings, which are documented in the final report.","Videos, presentations, online materials, quiz, exercise sheets, Power Point, flip charts, mural boards","Meadows, Donella: Thinking in Systems, Earthscan, 2009
Stroh, David Peter: Systems Thinking For Social Change: A Practical Guide to Solving Complex Problems, Chelsea Green Publishing, 2015
Kurz, B./ Kubek, D.: Social Impact Navigator, Phineo, 2017, verfügbar auf https://www.social-impact-navigator.org/",458,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3884771/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001346,Impact School,6.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The final examination of the project consists of two components. The first is the presentation prepared by the students at the end of the intensive phase. The second is a final report that must be submitted at the end of the semester. Both count for 50% of the grade.

At the end of the intensive phase, the teams present the approaches that they developed for solving the challenges set beforehand. This includes the presentation of a simple prototype, for example a mock-up or a document. The presentation is approximately 10 minutes in length. The students thus show that they are able to translate the information they have received into developing independently a solution and to present it in an appropriate manner. During the intensive phase, they are accompanied and supported by their coaches and the accompanying instructors. 

The second part of the grade consists in the report to be submitted at the end of the semester. The report covers the preliminary sessions, the intensive phase as well as the follow-up session. It documents in a structured way how the information received was used to develop the solution. Furthermore, feedback received from the partner who provided the challenge should be considered and incorporated. The report ensures that instead of simply documenting their findings students structure and reflect on them. The final report should not exceed 27,000 characters and must be submitted by the end of the semester.",Yes,No,"- Basic understanding of entrepreneurship and its principles, such as from attending an introductory lecture on the topic, founding experience, or closely following the media on the topic
 - Interest in the creation of societal and ecological impact by developing technology-based solutions","The goal of the impact school is to enable students to develop practice-oriented solutions to reach the UN Sustainable Development Goals by using technologies of the future. The students will gain knowledge regarding these technologies from an interdisciplinary perspective. They will learn:

 - to assess the benefits and risks of technologies with regard to the generation of social and ecological impact
 - to understand and apply the concept of impact and its implications
 - to implement the entrepreneurial innovation process in interdisciplinary teams in order to generate concrete solutions.

By developing solutions in teams, students improve soft skills such as creativity, perseverance and communication skills. In addition, they get to know the Munich ecosystem for impact/social entrepreneurship as well as TUM's resources and opportunities for implementing their own start-up projects.","The seminar is divided into several phases. In the course of two preliminary sessions, the students gain basic knowledge about the focused technology and its opportunities and risks based on existing approaches in the field of climate protection, ecology or society. Ethical implications are also discussed at this point. Furthermore, they get to know the concept of impact as well as the first basics for creating an impact logic. With the help of self-learning materials, they deepen this knowledge until the beginning of the intensive phase. 

The core of the Impact School is the five-day intensive phase, during which students work in teams on challenges that are provided by cooperation partners. The challenges focus on social and/or ecological problems that are to be solved using technology-based approaches. During the week, the participants learn the practical application of innovation methods as well as the basic principles of business modelling and develop a simple prototype of their solution. They also receive input from experts in the field. Companies, public administration, non-governmental organizations, student organizations and other partner universities and organizations can be involved as cooperation partners. They also contribute by offering thematic inputs, excursions or similar. The participants form teams at the beginning of the intensive phase and each team is accompanied by a coach. The coaches support the application of the tools and methods learned and ensure a healthy feedback and discussion culture within the teams. The intensive phase ends with an event in which the teams present the solutions they have developed.

There will be a follow-up session, which will introduce participants to the opportunities and resources for pursuing start-up projects within TUM. The first part is a short presentation followed by a Q&A session with start-up consultants. Furthermore, an exchange with a tech start-up that focuses on solving a social or ecological problem is planned.The seminar is divided into several phases. In the course of two preliminary sessions, the students gain basic knowledge about the focused technology and its opportunities and risks based on existing approaches in the field of climate protection, ecology or society. Ethical implications are also discussed at this point. Furthermore, they get to know the concept of impact as well as the first basics for creating an impact logic. With the help of self-learning materials, they deepen this knowledge until the beginning of the intensive phase. 

The core of the Impact School is the five-day intensive phase, during which students work in teams on challenges that are provided by cooperation partners. The challenges focus on social and/or ecological problems that are to be solved using technology-based approaches. During the week, the participants learn the practical application of innovation methods as well as the basic principles of business modelling and develop a simple prototype of their solution. They also receive input from experts in the field. Companies, public administration, non-governmental organizations, student organizations and other partner universities and organizations can be involved as cooperation partners. They also contribute by offering thematic inputs, excursions or similar. The participants form teams at the beginning of the intensive phase and each team is accompanied by a coach. The coaches support the application of the tools and methods learned and ensure a healthy feedback and discussion culture within the teams. The intensive phase ends with an event in which the teams present the solutions they have developed.

There will be a follow-up session, which will introduce participants to the opportunities and resources for pursuing start-up projects within TUM. The first part is a short presentation followed by a Q&A session with start-up consultants. Furthermore, an exchange with a tech start-up that focuses on solving a social or ecological problem is planned.","Lectures, discussions, development of challenge-based solutions, excursion, team coaching sessions, feedback discussions, presentations, Q&A session. The variety of methods ensures that the right method is chosen for each learning content to be taught. For example, new material is presented by experts in the field in keynote speeches and then discussed in large or small groups before it is incorporated into the development of solutions. Feedback discussions and team coaching sessions ensure that the tools and methods presented are correctly understood and applied. Furthermore, the teams are supported in working together in a respectful and effective manner and to develop an appreciative feedback culture. The final presentation at the closing event gives the participants the opportunity to practice their communication skills. Through the final report students consolidate the knowledge gained during the seminar and reflect on it. The exchange with start-up consultants and start-ups provides the participants with an impression of how social and ecological impact can be generated in practice through the implementation of their own start-up projects.","Videos, presentations, online materials, quiz, exercise sheets, Power Point, flip charts, mural boards","Garette, B./ Phelps, C./ Sibony, O. Cracked it!: How to solve big problems and sell solutions like top strategy consultants. Palgrave MacMillan, 2018
Martin, L. Design of Business: Why Design Thinking is the Next Competitive Advantage. Harvard Business Press, 2009
Kurz, B./ Kubek, D.: Social Impact Navigator, Phineo, 2017, verfügbar auf https://www.social-impact-navigator.org/",459,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3239832/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001348,Innovation Sprint,6.0,UTUM,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Bachelor,-,-,one semester,winter/summer semester,German/English,-,180.0,40.0,140.0,"Combination of group and individual project assignment - final examination consists of two components, each carrying 50% of the final course grade: (1) a 5 minute group presentation plus 10 minutes Q&A and feedback at the end of the course and (2) an individual reflection paper of ca. 2,500 words. 
Students will present to the class, the lecturer and the partner how the team identified an attractive opportunity in a suitable market, understood the customers’ / users’ needs in the process and, as a result, proposed a sustainable business model that balances people, planet and profit.

In a written reflection paper, every student will reflect upon and consolidate their individual learnings from (1) the reading package and (2) their entrepreneurial experience on three different levels - self, team and entrepreneurship.",Yes,No,"Interest in entrepreneurship and sustainability, ability to work in a team","After participating in this module students will be able to understand and apply life-centered design principles in the early stages of an entrepreneurial process: from identifying an entrepreneurial opportunity and understanding its environmental and social impact to validating assumptions by applying qualitative research methods and interpreting data as well as using prototyping as a tool for communication and learning. They will be able to apply creativity methods, take over collective responsibility and know how to effectively communicate their business opportunities.
Taking decisions under uncertainty, ambiguity and risk in newly formed teams will foster their collaboration and communication skills and prepare them for future team work in appreciating and accommodating team members' individual personalities and boundaries.
At the same time the reading package enables students to gain a broader understanding of the methods learned in the course providing them with the ability to apply them beyond the context of innovation.","Supported by the reading package students will work on five intensive days in Campus only in interdisciplinary teams on a challenge from a partner and learn why and how to develop customer and user centric business ideas through applying an entrepreneurial mindset and innovative methods -  always considering the triple bottom line.
Taking on an embedded view on the interrelatedness of economic, social and environmental systems, students will develop an ecosystem map to get an overview of relevant stakeholders and potential customers as well as important relationships and value streams. Input on Empathy Research will prepare them to collect qualitative insights from potential customers and users through interviews, immersion and contextual observations. 
After conducting their Empathy Research they will step by step learn how to synthesize their insights and define opportunities for sustainable innovation. With a concrete how-might-we-question they will start into ideation. Through different creativity methods they will develop and prioritize ideas and build a simple prototype. This prototype is being tested again through qualitative tests with potential customers and users. When they come back after testing they do a first iteration based on the feedback they got and derive assumptions on a potential business model. After input on pitching they will prepare slides or other material and pitch in front of the group, partner and external guests. After the pitch event they will be led through a reflection of the learnings they gained during the week. The reading package will support the transfer of these learnings.Supported by the reading package students will work on five intensive days in Campus only in interdisciplinary teams on a challenge from a partner and learn why and how to develop customer and user centric business ideas through applying an entrepreneurial mindset and innovative methods -  always considering the triple bottom line.
Taking on an embedded view on the interrelatedness of economic, social and environmental systems, students will develop an ecosystem map to get an overview of relevant stakeholders and potential customers as well as important relationships and value streams. Input on Empathy Research will prepare them to collect qualitative insights from potential customers and users through interviews, immersion and contextual observations. 
After conducting their Empathy Research they will step by step learn how to synthesize their insights and define opportunities for sustainable innovation. With a concrete how-might-we-question they will start into ideation. Through different creativity methods they will develop and prioritize ideas and build a simple prototype. This prototype is being tested again through qualitative tests with potential customers and users. When they come back after testing they do a first iteration based on the feedback they got and derive assumptions on a potential business model. After input on pitching they will prepare slides or other material and pitch in front of the group, partner and external guests. After the pitch event they will be led through a reflection of the learnings they gained during the week. The reading package will support the transfer of these learnings.","This module relies on a combination of readings, input sessions, workshops, teamwork and individual feedback and support. While input sessions will stimulate students’ engagement with relevant tools and topics, workshops and team discussions will support the implementation of the knowledge in their projects and facilitate students’ learning of the soft and intricate aspects of adopting an entrepreneurial mindset and skills. Working on a design challenge that a partner (e.g. TUM Venture Labs) provides stimulates peer competition and allows students to directly apply what they learn in a real life setting. The reading package will strengthen students' understanding of the methods and allow them to make sense of their practical experience.","Presentations, canvas, handywork",Each semester students will be provided with a mandatory reading package.,460,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3239842/206?$ctx=lang=en&$scrollTo=toc_details,Browser
AR17093,Hospital Building I,3.0,-,Always,"Dietz, Birgit",Assistant Professorship of Architecture and Design (Prof. Fanelsa),"Schwerpunkt Master AR: ""Architekturtechnologie""",Master,-,-,one semester,winter semester,German,-,90.0,30.0,60.0,"Oral exam at the end of the semester.
Furthermore there will be a small exercise during the field trip to deepn the knowledge, which could also be a topic during the exam.",Yes,No,-,-,"The seminar gives an overview of the four topics in the history of hospital building and also the current situation discussing the ""health care super market"". Furthermore future challenges like the 	demoscopic change, privatization, growing competition and the reduction of costs will be reviewed. By analyzing contemporary case studies different approaches in planning and building of healthcare facilities will be explained.
During the field trip those insights should be deepened.The seminar gives an overview of the four topics in the history of hospital building and also the current situation discussing the ""health care super market"". Furthermore future challenges like the 	demoscopic change, privatization, growing competition and the reduction of costs will be reviewed. By analyzing contemporary case studies different approaches in planning and building of healthcare facilities will be explained.
During the field trip those insights should be deepened.",,-,,461,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/461345/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001396,Narratives for Impact,6.0,-,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"This module is examined via your solution of exercises (“Übungsleistung”). Specifically, we draw on two types of exercises to assess whether students have reached the above learning goals. These elements correspond to the “Teaching Methods” listed in a separate section. There is no written exam.

- Oral, individual – 50%: we will assess the quality of your contributions toward solving pre-assigned question in class discussions (i.e. film screenings, debate workshop) to see whether you can define, explain, and apply in practice key theories of impact, narrative and entrepreneurship (discussion of readings); describe, compare, and appraise different existing narrative solutions for a given organizational context (teaching case study discussions); and compose innovative ideas for addressing social and environmental challenges through narrative storytelling (final presentation).

- Written, group – 50%: at the end of the course, you will submit a group reflection paper in the form of a slide show in which you will highlight your key learning in this course, so as to show that you can distinguish the newly learned theories from previously learned management perspectives. As a group, you will be assigned a future film, which you will analyze by drawing on some of the concepts learned in class. This is used to showcase that you can interpret, classify, and assess the conduct and performance of any organization aiming to inspire, inform and mobilise entrepreneurial efforts aimed at addressing social, environmental, and economic challenges.",Yes,No,"In general, students from all departments are admitted to the seminar, but a good command of English and a general interest in sustainability/impact issues are basic requirements to take the course.
Willingness to read scientific literature is an important prerequisite, as knowledge of it will influence the final grade.
We strongly discourage 1st and 2nd semester students as well as students who have not yet completed 6 ECTS in a research philosophy course.","- To learn key theoretical foundations for better understanding the role impact has in business innovation processes and entrepreneurship.

- To develop an understanding of the role of storytelling and narrative in shaping collaborative innovation processes as well as public perception of entrepreneurship and social impact in general.

- To critically analyze the portrayal of entrepreneurship and innovation in a range of films and media, and to identify key themes and messages related to impact-oriented entrepreneurship.

- To explore the ways in which films can inspire and inform entrepreneurial efforts aimed at addressing social, environmental, and economic challenges.

- To encourage creative thinking and the development of innovative ideas for addressing social and environmental challenges.

- To build skills in critical analysis, oral and written communication, and collaborative problem-solving. 
                          
After the course, students will be able to:

- Define, explain, critically discuss and apply key theories related to both impact and narratives.

- Interpret, classify, and assess the conduct and performance of any organization’s innovation efforts.

- Describe, compare, and appraise entrepreneurial strategies and innovation concepts given their potential societal impact.

- Distinguish the newly learned impact and narrative theories from previously learned management perspectives.

- Evaluate how future films may affect innovation processes.","This course will draw on a series of inductive teaching methods. We will provide various teaching techniques and input sessions to enable students to access independently a large share of the subject matter. For example, students will learn to study, digest, and present academic content and apply it to current real problems - for example, we will not only teach how to read academic articles, but also enable students to present them cohesively in a debate format. In addition, students will get to know methods help them analyze and understand the importance of narratives for innovation processes, again drawing on specific real-life examples such as corporate training and image movies. The diverse set of methods students will get to know will help them explore and understand the various roles narratives may play in different types of innovative and entrepreneurial activities, and see how narratives may help realize a (pre-)intended way of corporate (entrepreneurial) actitivty. The final written report will showcase students' creativity and their ability to transfer what they have learned to another (real-life) setting.This course will draw on a series of inductive teaching methods. We will provide various teaching techniques and input sessions to enable students to access independently a large share of the subject matter. For example, students will learn to study, digest, and present academic content and apply it to current real problems - for example, we will not only teach how to read academic articles, but also enable students to present them cohesively in a debate format. In addition, students will get to know methods help them analyze and understand the importance of narratives for innovation processes, again drawing on specific real-life examples such as corporate training and image movies. The diverse set of methods students will get to know will help them explore and understand the various roles narratives may play in different types of innovative and entrepreneurial activities, and see how narratives may help realize a (pre-)intended way of corporate (entrepreneurial) actitivty. The final written report will showcase students' creativity and their ability to transfer what they have learned to another (real-life) setting.","This course will draw on a series of inductive teaching methods. We will provide various teaching techniques and input sessions to enable students to access independently a large share of the subject matter. For example, students will learn to study, digest, and present academic content and apply it to current real problems - for example, we will not only teach how to read academic articles, but also enable students to present them cohesively in a debate format. In addition, students will get to know methods help them analyze and understand the importance of narratives for innovation processes, again drawing on specific real-life examples such as corporate training and image movies. The diverse set of methods students will get to know will help them explore and understand the various roles narratives may play in different types of innovative and entrepreneurial activities, and see how narratives may help realize a (pre-)intended way of corporate (entrepreneurial) actitivty. The final written report will showcase students' creativity and their ability to transfer what they have learned to another (real-life) setting.","The largest share of this course will be developed by each study group through solving the specific case challenge and presenting the results. The hallmark of this course’s study challenges is their visual-cinematic format combined with entrepreneurship-related questions and theories. In group discussions, we will then debate the results presented and thus co-create the learning outcome.   In each session, we will help facilitate and guide the course discussion by taking notes on whiteboards and moderate the overall learning journey. We strongly encourage you to take notes yourselves and to consider not bringing laptops (they are not as bad as phones [NO PHONES!], but will still inhibit your learning). Specific topics and definitions may be introduced using PowerPoint slides. Finally, note how a large share of learning will occur through you preparing individually and in groups for the in-class session (i.e. readings). Techniques to do so will be introduced in the first session of class.",An up to date reading list will be distributed around the first session of class each semester.,462,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3470523/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001141,Principled Entrepreneurial Decisions,6.0,UTUM,Always,"Patzelt, Holger",Chair of Entrepreneurship (Prof. Patzelt),-,Master,PED,How to make game-changing decisions,one semester,winter/summer semester,English,-,180.0,40.0,140.0,"Mandatory participation on all workshop days
(1) active class participation (25%)
(2) short assignement questions on cases (25%)
(3) presentation of values and principles for their company/project/future startup (25%) 
(4) reflection paper, 2-3 pages, max 1.200 words (25%)
The seminar is on application: 
https://academy.unternehmertum.de/programs/principled-entrepreneurial-decisions",No,Yes,"Application & willingness for active participation
being or becoming part of a Startup or project team
Students who are interested in Venture Capital and decision-making of founders are also welcome","1_students are able to brave difficult situations in the startup context
2_Enable students to begin to craft their own framework – personal and company
3_Discuss case examples (i.e. Flixbus, Konux, ProGlove, Luminovo, fernride, Reactive Robotics, Grupon, buecher.de, SevDesk, inveox, 10X, ...) and conduct exercises to help them on their journey","This course will challenge the next generation of leaders and entrepreneurs to think critically about how their personal values and principles inform the difficult decisions they will have to make as they grow their business. The course will first equip students with frameworks to crystalize their own values and principles. Students will learn to apply their own core values. A selection of readings and case studies will provide students with tangible examples of the challenges other entrepreneurs have faced. Each class will be highly immersive, featuring conversations with entrepreneurial guest speakers and break-out sessions. Through conversations with case protagonists and each other, students will leave the class more prepared to navigate the ethical dilemmas that they may encounter during their professional lives.This course will challenge the next generation of leaders and entrepreneurs to think critically about how their personal values and principles inform the difficult decisions they will have to make as they grow their business. The course will first equip students with frameworks to crystalize their own values and principles. Students will learn to apply their own core values. A selection of readings and case studies will provide students with tangible examples of the challenges other entrepreneurs have faced. Each class will be highly immersive, featuring conversations with entrepreneurial guest speakers and break-out sessions. Through conversations with case protagonists and each other, students will leave the class more prepared to navigate the ethical dilemmas that they may encounter during their professional lives.","lectures
group works
role plays
real Start-up cases with the founders in class
discussions","presentations
founders in class
video","Dalio, R. (2017). Principles: Life and work. New York, NY
Horowitz, B., & Kenerly, K. (2014). The hard thing about hard things: building a business when there are no easy answers. New York, NY: Harper Business.
More literature will be provided in class",463,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1412295/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT87318,Project Week: AI Ethics Research & Creative Science Communication,3.0,-,from Summer semester 2024,-,Department of Governance,-,Bachelor/Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module examination is a presentation (approximately 60 minutes, including discussion). The performance is achieved in the form of a (group) presentation and a submission of the presentation (in digital form and as a handout). At the start of the module, students will receive sample questions related to AI ethics research and creative science communication, from which they can choose for their final (group) presentation. Sample questions are, for example: To what extent do AI systems support or hinder ethical decision-making? What is the role of ChatGPT in providing moral guidance? What system requirements are essential for the responsible development and use of pertinent AI systems? How can research-based theater support such scientific inquiries? What other creative ways of science communication exist? By presenting their results, the students prove that they can deal intensively with the topic of AI systems and their effects to understand the fundamentals of research-based theater and construct the influence of AI on human ethical decision-making. Furthermore, they show their ability to analyze problems comprehensively and develop artistic scientific communication solutions. With the submission of the presentation, the students demonstrated their ability to present the results visually in a structured and understandable way and use them to support their statements.",Yes,No,,"After this module, students will be able to: 
•	Understand the fundamentals of research-based theater
•	Explain basics in moral psychology, ethics and their relation to AI and intelligent decision-support systems
•	Construct the influence of AI on human ethical decision-making
•	Conduct qualitative data collection and analysis
•	Develop artistic solutions of science communication","With the rise and public accessibility of AI-enabled decision-support systems, individuals outsource increasingly more of their decisions, even those that carry ethical dimensions. Whether addressing healthcare distribution challenges or providing moral guidance in personal matters, certain AI systems – intentionally designed for this purpose or not – appear willing to offer their advice. Given this trend and the fundamental role of ethical decision-making in shaping morale, it is important to investigate the impact of pertinent AI systems on human ethical decision-making and subsequent societal outcomes.
To better understand and proactively shape how AI systems affect ethical decision-making, it is crucial to involve affected stakeholders in pertinent scientific inquiry and technological development. Opening up scientific debates beyond academic silos requires innovative methods and creating spaces for collaboration between civil society and scientists. In this endeavor, arts – an important reference for social knowledge and inclusion – can become a key enabler to facilitate human-centric, participatory discussions around AI design. 
Therefore, this module will focus on the following two questions:  
•	How can AI systems impede or support humans’ ethical decision-making? What system requirements are crucial for its responsible development and use?
•	How can research-based theater effectively engage a broader audience in the inquiry of this investigation?
Students will learn about basics in moral psychology, ethics and its relation to AI. The module will also delve into qualitative research methods and innovative science communication techniques, particularly through research-based theater.With the rise and public accessibility of AI-enabled decision-support systems, individuals outsource increasingly more of their decisions, even those that carry ethical dimensions. Whether addressing healthcare distribution challenges or providing moral guidance in personal matters, certain AI systems – intentionally designed for this purpose or not – appear willing to offer their advice. Given this trend and the fundamental role of ethical decision-making in shaping morale, it is important to investigate the impact of pertinent AI systems on human ethical decision-making and subsequent societal outcomes.
To better understand and proactively shape how AI systems affect ethical decision-making, it is crucial to involve affected stakeholders in pertinent scientific inquiry and technological development. Opening up scientific debates beyond academic silos requires innovative methods and creating spaces for collaboration between civil society and scientists. In this endeavor, arts – an important reference for social knowledge and inclusion – can become a key enabler to facilitate human-centric, participatory discussions around AI design. 
Therefore, this module will focus on the following two questions:  
•	How can AI systems impede or support humans’ ethical decision-making? What system requirements are crucial for its responsible development and use?
•	How can research-based theater effectively engage a broader audience in the inquiry of this investigation?
Students will learn about basics in moral psychology, ethics and its relation to AI. The module will also delve into qualitative research methods and innovative science communication techniques, particularly through research-based theater.","The module consists of a seminar. The contents of the seminar are conveyed through lectures and PowerPoint presentations. Students should be encouraged to study the key literature and critically engage with the content of the topics. Students will engage in group tasks (e.g., case studies) and discussions during the seminar sessions.",Power Point,"The following research - amongst others - will be covered in the module: 
•	Belliveau, G., & Nichols, J. (2017). Audience responses to Contact! Unload: A Canadian research-based play about returning military veterans. Cogent Arts & Humanities, 4(1), 1351704.
•	Crabtree, B.F. & W. L. Miller. 1992. A template approach to text analysis: Developing and using codebooks. Doing Qualitative Research. B. F. Crabtree and W. L. Miller. Newbury Park, CA, Sage Publications:93-109.
•	Klincewicz, M. (2016). Artificial intelligence as a means to moral enhancement. Studies in Logic, Grammar and Rhetoric, 48(1 (61)).
•	Krügel, S., Ostermaier, A., & Uhl, M. (2023). ChatGPT’s inconsistent moral advice influences users’ judgment. Scientific Reports, 13(1), 4569.
•	Lea, G. W. (2012). Approaches to developing research-based theatre. Youth Theatre Journal, 26(1), 61-72.
•	Luria, M., Oden Choi, J., Karp, R. G., Zimmerman, J., & Forlizzi, J. (2020, July). Robotic Futures: Learning about Personally-Owned Agents through Performance. In Proceedings of the 2020 ACM Designing Interactive Systems Conference (pp. 165-177).
•	Poszler, F., & Lange, B. (2024). The impact of intelligent decision-support systems on humans' ethical decision-making: A systematic literature review and an integrated framework. Technological Forecasting and Social Change, 204, 123403.
•	Silverman, D. (2015). Interpreting qualitative data. Sage.",464,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064475/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86089,"Project Week: AI, Society, and Governance",3.0,-,from Summer semester 2024,-,Department of Governance,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module examination is a project work with a final presentation (30 minutes). 
Students will work on a research project at the intersection of AI, society, and governance. They can choose from 5 different topics. (1) Bias identification with LLMs, where you'll explore how AI systems can be used to detect biases in various contexts; (2) Toxicity identification with LLMs, focusing on the application of AI in recognizing harmful or offensive content; (3) Identification of biases in LLMs; (4) Advice-giving and persuasion, with sub-options to explore either medical or political applications of AI in influencing decision-making; and (5) An independent topic of your choice, to be discussed and approved by your instructor. The project involves designing an AI tool, which is then presented and evaluated in a final presentation.
With the project work, students demonstrate their ability to analyze the impact of artificial intelligence on society, using a social science framework and they evaluate the ethical implications and methodological challenges of AI-driven research in social sciences. Furthermore, they show they can apply AI tools and solve complex problems.
With their presentation, students demonstrate that they are able to present their results in a technically correct and understandable way and discuss them with an expert audience.
The project work will be presented at the end of the module. It will be evaluated based on the demonstrated competence to design an AI tool (50%), the quality of the delivery (40%), and the quality of the discussion with the audience (10%).",No,No,Familiarity with interacting with APIs (using Python or R). LLM-specific experience is not required.,"Upon successful completion of this module, students are able to: 1) Analyze the impact of artificial intelligence on society, economy, and governance using social science frameworks; 2) Evaluate the ethical implications and methodological challenges of AI-driven research in social sciences; 3) Apply AI tools to conduct social science research and solve complex problems.","The module will cover two main themes: first, it explores how social science disciplines can adopt and benefit from AI tools for research, analysis, and problem-solving; and second, the course explores the impacts of generative AI on society and economy, including methods for measuring and evaluating these impacts.
The primary objective is to introduce students to the intersection of Artificial Intelligence, society, and governance from a social scientific perspective. Students will evaluate how AI is transforming society and the economy and explore how AI tools can be used in social science. Students will conduct critical evaluations of AI companies' principles and learn techniques for auditing Large Language Models through adversarial testing or red teaming exercises. Throughout the module, we will emphasize the development of interdisciplinary understanding and critical thinking skills regarding the complex interplay between AI, society, and politics.The module will cover two main themes: first, it explores how social science disciplines can adopt and benefit from AI tools for research, analysis, and problem-solving; and second, the course explores the impacts of generative AI on society and economy, including methods for measuring and evaluating these impacts.
The primary objective is to introduce students to the intersection of Artificial Intelligence, society, and governance from a social scientific perspective. Students will evaluate how AI is transforming society and the economy and explore how AI tools can be used in social science. Students will conduct critical evaluations of AI companies' principles and learn techniques for auditing Large Language Models through adversarial testing or red teaming exercises. Throughout the module, we will emphasize the development of interdisciplinary understanding and critical thinking skills regarding the complex interplay between AI, society, and politics.","The module consists of a seminar to accompany the project work. Coding tutorials will be provided, and students will work in groups to creatively propose projects where LLMs are applied to address social problems, or to advance a social scientific problem.","PowerPoint, ChatBots","Vykopal, I., Pikuliak, M., Srba, I., Moro, R., Macko, D., & Bielikova, M. (2023). Disinformation capabilities of large language models. *arXiv preprint arXiv:2311.08838*.
Kaddour, J., Harris, J., Mozes, M., Bradley, H., Raileanu, R., & McHardy, R. (2023). Challenges and applications of large language models. *arXiv preprint arXiv:2307.10169*.
Velez, Y. R., & Liu, P. (2024). Confronting Core Issues: A Critical Assessment of Attitude Polarization Using Tailored Experiments. *American Political Science Review*, 1-18.
Costello, T. H., Pennycook, G., & Rand, D. G. (2024). Durably reducing conspiracy beliefs through dialogues with AI. *Science*, *385*(6714), eadq1814.
Augenstein, I., Baldwin, T., Cha, M., Chakraborty, T., Ciampaglia, G. L., Corney, D., ... & Zagni, G. (2024). Factuality challenges in the era of large language models and opportunities for fact-checking. *Nature Machine Intelligence*, 1-12.  
Narayanan, A., & Kapoor, S. Model alignment protects against accidental harms, not intentional ones",465,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064474/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86072,Project Week: Application Project: Public Sector,6.0,-,Always,Pfeffer,Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"Students will be assessed based on their project work, making up 50% of their grade, and an accompanying 30min presentation, making up 50% of their grade. The project work will be assessed with a 10 page report. In the first phase of the project students can demonstrate their ability to research and analyze current public sector projects as well as their skill to evaluate and identify gaps in political engagement. In the second stage of the project students demonstrate their ability to develop and implement novel methods for political engagement incorporating different disciplines. The presentation will examine the students ability to present their work to expert groups.",Yes,No,none,"After successful completion students are able to: research and analyze current public sector projects, evaluate and identify gaps in, and devise novel methods for, political engagement. Additionally they can design and implement projects while incorporating different disciplines.","In this project-oriented module, students will work in interdisciplinary teams alongside staff from public administration and government entities. By researching and analyzing current public sector projects, students will identify gaps and devise novel methods for political engagement. They will present and discuss their ideas with peers, public officials, learning how to successfully realize their proposals and create impactful projects for social purposes in interdisciplinary teams. The primary goal of the module is to actively create new methods to support and enhance public sector innovation for various groups. Students will develop their ideas independently and then discuss their potential projects with representatives of public instiutions. After completion the resulting projects will be ready and fit to be used by the public sector for enhancing digital participation and democratic engagement. 

The module acts as a bridge between public sector entities and TUM, supporting the development of new digital participation opportunities and the interdisciplinary integration of technical implementation, governance perspectives, and societal needs concerning digital participation. The students will be working together on projects through a holistic, interdisciplinary approach to enhance digital participation and democratic engagement, thus strengthening democracy. At the end of the seminar, students will be capable of designing and implementing projects while incorporating different disciplines.In this project-oriented module, students will work in interdisciplinary teams alongside staff from public administration and government entities. By researching and analyzing current public sector projects, students will identify gaps and devise novel methods for political engagement. They will present and discuss their ideas with peers, public officials, learning how to successfully realize their proposals and create impactful projects for social purposes in interdisciplinary teams. The primary goal of the module is to actively create new methods to support and enhance public sector innovation for various groups. Students will develop their ideas independently and then discuss their potential projects with representatives of public instiutions. After completion the resulting projects will be ready and fit to be used by the public sector for enhancing digital participation and democratic engagement. 

The module acts as a bridge between public sector entities and TUM, supporting the development of new digital participation opportunities and the interdisciplinary integration of technical implementation, governance perspectives, and societal needs concerning digital participation. The students will be working together on projects through a holistic, interdisciplinary approach to enhance digital participation and democratic engagement, thus strengthening democracy. At the end of the seminar, students will be capable of designing and implementing projects while incorporating different disciplines.","The module will take place in seminars, in which the stundes will be able to work together in interdiscipinary teams to jointly develop and implement novel projects while receiving feedback and guidance from their peers, lecturers and public sector entities.",PowerPoint,"Noveck, B. S. (2021). Solving public problems: a practical guide to fix our government and change our world. Yale University Press.",466,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025078/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86081,"Project Week: GovTech Design Lab: Harnessing AI, Earth Observation and Data Storytelling to Tackle Climate Security and Conflict",6.0,-,from Summer semester 2024,-,Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,In Progress ...,Yes,No,"As the group project for this module will require a variety of different ideas and perspectives, STUDENTS FROM ALL SUBJECTS ARE STRONGLY ENCOURAGED TO APPLY. We aim to assemble a multidisciplinary group of students from a variety of fields, including policy, computer science, engineering, life sciences, education, design, and more, to collectively tackle this project week module. Cross-learning between these disciplines and the ability to understand diverse scientific perspectives will be integral to the learning objectives of this module.

This module is aimed at students enrolled in a Masters program at TUM and are interested in gaining skills in data analysis, the decision making process, and utilizing storytelling techniques to effectively communicate complex narratives. A high level of motivation and general willingness to participate in group projects is recommended.","In this module, students will discover how to utilize widely accessible tools, such as Google Earth Engine, and engage with publicly available datasets. They will develop insights from geospatial data that serve to inform decision-makers, politicians, and the broader public. This year, the GovTech lab is collaborating with the United Nations Department of Political and Peacebuilding Affairs (UN DPPA) to enhance Geoguard, an innovative environmental dashboard. Geoguard is designed to tackle the intricate challenges of climate security and conflict by providing essential data and insights for informed decision-making. The project engages students who work alongside UN experts, gaining practical experience while contributing to global efforts in addressing environmental issues and promoting peace. 

 Throughout this module, students are expected to gain a wide variety of new skills, knowledge, and competencies. Some key aspects they will gain will be:

- Increase substantive knowledge: Students will gain in-depth knowledge surrounding the questions and problems related to Triangle for Planetary Challenges. This will require students to familiarize themselves with complex topics, further improving their substantive knowledge: For instance, what is Environmental and Climate Security and how can geospatial data be leveraged to monitor situations “on the ground”? Or how can it be used to verify political commitments in regards to armed conflicts, when areas are too difficult or pose too high of a security risk - to be accessed?
- Better developed data analysis skills: Students will learn how to distinguish useful information and insights.
- Overcoming their disciplinary boundaries: The project requires that different perspectives are taken into account when addressing these global challenges. By bringing together students from Earth observation, computational & data science backgrounds with students from social sciences and design backgrounds, this project will cover the entire workflow; from acquiring satellite(-based) Earth observation data, extracting the information, interpreting it, deriving policies and interventions, then communicating these results to the public through an exhibition. It will also promote creativity through the exchange of ideas across disciplines.
- Transfer of knowledge: Students will gain a new skill set in “storytelling” as they learn how to derive insights from geospatial data, then build a narrative that allows them to communicate these insights to the public through different platforms (i.e.: online, an external exhibition, TUM Sustainability Day 2025, COP30, etc.). The project team would also be happy to support students in working to publish their results. 
- Social competencies: Course participants will further practice and develop their presentation and collaboration skills.","In this module, students will discover how to utilize widely accessible tools, such as Google Earth Engine (GEE), and engage with publicly available datasets. They will develop insights from geospatial data that serve to inform decision-makers, politicians, and the broader public. This year, the GovTech lab is collaborating with the United Nations Department of Political and Peacebuilding Affairs (UN DPPA) to enhance Geoguard, an innovative environmental dashboard. Geoguard is designed to tackle the intricate challenges of climate security and conflict by providing essential data and insights for informed decision-making. The project engages students who work alongside UN experts, gaining practical experience while contributing to global efforts in addressing environmental issues and promoting peace. 

By integrating theoretical instruction, practical lab work, and hands-on projects, this module will enable participants to develop crucial skills in two key areas: (1) leveraging geospatial data in decision-making processes, and (2) utilizing storytelling techniques to effectively communicate complex narratives. Through fostering a deep understanding of these intertwined challenges, the module is designed to empower students to initiate meaningful change and contribute to addressing climate-induced conflict on a global scale.

This module is the result of a collaborative partnership involving various professorships from the TUM School of Engineering and Design, TUM School of Life Sciences, and the TUM School of Social Sciences and Technology, alongside the United Nations (UN), and other esteemed partners like the Institute for Interdisciplinary Data Science and AI at the University of Birmingham, the Rhode Island School of Design, the Al Jazeera Data Lab, and DesignIt, Munich. It will meld academic and practitioner perspectives, offering a comprehensive approach to tackling the subject matter. This module is a direct response to the TUM Sustainable Futures Strategy 2030, emphasizing sustainability challenges and the UN’s Sustainable Development Goals (SDGs) as central themes.In this module, students will discover how to utilize widely accessible tools, such as Google Earth Engine (GEE), and engage with publicly available datasets. They will develop insights from geospatial data that serve to inform decision-makers, politicians, and the broader public. This year, the GovTech lab is collaborating with the United Nations Department of Political and Peacebuilding Affairs (UN DPPA) to enhance Geoguard, an innovative environmental dashboard. Geoguard is designed to tackle the intricate challenges of climate security and conflict by providing essential data and insights for informed decision-making. The project engages students who work alongside UN experts, gaining practical experience while contributing to global efforts in addressing environmental issues and promoting peace. 

By integrating theoretical instruction, practical lab work, and hands-on projects, this module will enable participants to develop crucial skills in two key areas: (1) leveraging geospatial data in decision-making processes, and (2) utilizing storytelling techniques to effectively communicate complex narratives. Through fostering a deep understanding of these intertwined challenges, the module is designed to empower students to initiate meaningful change and contribute to addressing climate-induced conflict on a global scale.

This module is the result of a collaborative partnership involving various professorships from the TUM School of Engineering and Design, TUM School of Life Sciences, and the TUM School of Social Sciences and Technology, alongside the United Nations (UN), and other esteemed partners like the Institute for Interdisciplinary Data Science and AI at the University of Birmingham, the Rhode Island School of Design, the Al Jazeera Data Lab, and DesignIt, Munich. It will meld academic and practitioner perspectives, offering a comprehensive approach to tackling the subject matter. This module is a direct response to the TUM Sustainable Futures Strategy 2030, emphasizing sustainability challenges and the UN’s Sustainable Development Goals (SDGs) as central themes.","The module consists of a seminar. The main topics of the seminar are covered: through a kick-off event, multiple classroom events, through course material located on Moodle during the Self-Study Phase, and through a one week block-course (TUM Project Week). The students will use the knowledge they gain from Moodle, from class, from the project week, information from their scholastic background and from their own self-study, within a group to tackle a climate change related event. The overall group project ideas will be given to each group, based on their scholastic background by the lecturers.",-,"Li, XY., Li, X., Fan, Z. et al. Civil war hinders crop production and threatens food security in Syria. Nat Food 3, 38–46 (2022). https://doi.org/10.1038/s43016-021-00432-4",468,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064473/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MHP00003,Project Week: New Technologies in Neurorehabilitation and Motor Learning,5.0,-,from Summer semester 2024,-,TUM School of Medicine and Health,-,Bachelor/Master,-,Project Week,one semester,winter semester,English,-,150.0,60.0,90.0,"Project Work:
Project work incl. written documentation (about 8 pages) and oral result presentation (20 min). The project is performed in an interdisciplinary team. As individual performance, it will be examined, how students are capable to explain scientific problems with respect to the current scientific state of the art, to iteratively proceed in order to find meaningful solutions to these problems in their practical work and to present the outcomes of their practical projects in a way to be understood by different professions. They demonstrate their understanding of the ethical concerns and the potentials and limitations of technology in motor learning and rehabilitation and the challenges faced when designing assistive devices. The ability to work in interdisciplinary teams will be part of the performances.",-,-,"General preconditions are the interest in theoretic and applied questions in motor control and motor learning and in how different disciplines deal with these and can contribute to meaningful solutions. The readiness and motivation to work in a team which is interdisciplinary and divers is a must.
It will be helpful to have insight into general empirical and / or qualitative research methods and into basic concepts and methods of human movement science. Keen interest in robotics in the health sector and / or machine learning is a requirement. Insight into biomechanics and body structures will be of advantage. Content of semesters 1 - 2 of Sport- and Health Sciences’ master programs, biomedical engineering, neuroengineering, electrical engineering and computer science will be useful. 
Only a limited number of participants can be accepted and there will be a selection procedure.","At the end of the module, students are able to identify and develop solutions for interdisciplinary problems. They learn how to identify issues of a beforehand unknown domain by analyzing expert information and selective literature and media research. They present study- or product ideas or a theoretic discourse in a way to be understood by different professions. They consider requirements of different stakeholders as well as societal and ethical concerns. They coordinate their work in project teams.","Digital technologies such as virtual reality, machine learning and robotics are perceived as highly promising tools to facilitate movement training and -therapy. However, in order for these tools to become successful, they must be suited to individual therapy goals and to the requirements of special populations. Thus, health professionals and developers, as well as patients and users need to communicate and to collaborate on further developing these methods.
In this module, students with engineering background can interact with students of the health sector to design and develop a product prototype to assist in neurorehabilitation and motor learning. 
Beforehand, they will meet experts, scientists and professionals from informatics, electronical engineering, movement science and neurorehabilitation. After being introduced to theoretic considerations about functional principles of these technologies and to ethical challenges, the students will have the opportunity to talk to prosthesis users and stroke patients and will learn about best practice examples from industry representants and therapists. Student groups will discuss the outcomes of their projects with experts and users and will present the final results to module participants and supervisors.Digital technologies such as virtual reality, machine learning and robotics are perceived as highly promising tools to facilitate movement training and -therapy. However, in order for these tools to become successful, they must be suited to individual therapy goals and to the requirements of special populations. Thus, health professionals and developers, as well as patients and users need to communicate and to collaborate on further developing these methods.
In this module, students with engineering background can interact with students of the health sector to design and develop a product prototype to assist in neurorehabilitation and motor learning. 
Beforehand, they will meet experts, scientists and professionals from informatics, electronical engineering, movement science and neurorehabilitation. After being introduced to theoretic considerations about functional principles of these technologies and to ethical challenges, the students will have the opportunity to talk to prosthesis users and stroke patients and will learn about best practice examples from industry representants and therapists. Student groups will discuss the outcomes of their projects with experts and users and will present the final results to module participants and supervisors.","The module is organized by different chairs from the departments of Sport- and Health Sciences and Informatics at TUM. 
The envisaged learning outcomes will be achieved through the following learning methods:
-	Introductory lectures by scientists and experts from different fields who provide first-hand information about the current state of the art in their respective area.
-	An excursion to a Bavarian rehabilitation center supports the identification of difficulties and current requirements faced by patients and therapists. 
-	In the practical course, students will work on practical projects in small groups. It will be important that the project groups are interdisciplinary, including one student from each discipline, i.e., one from health sector, one with informatics and one with engineering background.
-	Students have access to research laboratories to use state-of-the art devices such as motion tracking systems, physiological signal measurement (EMG and EEG) and virtual and augmented reality systems for their practical projects.
-	Coaching and transmission of project-specific knowledge to small groups during project work by experts from the participating teams.
-	During the project based working period, small groups will organize individually to advance their project and will be supervised.
-	The students have several opportunities to receive feedback on their projects by experts with scientific background and from industry as well as from potential users, i.e., patients and therapists.","Slides, films, discussions with (guest) teachers, PhD students and fellow students on site or via collaborative online platforms, if matching to the topic theater performances and discussion through collaboration between TUM and Münchner Kammerspiele, specialized study environment of the TUM Motion Lab and TUM Living Lab (MH, Department Health and Sport Sciences) and application examples at excursion.","Rohrbach, Hermsdörfer et al. 2021, Improvement of Apraxia with Augmented Reality: Influencing Pantomime of Tool Use via Holographic Cues. Frontiers in Neurology, 12, Article 711900

Shneiderman, Plaisant: Designing the User Interface: Strategies for Effective Human-Computer Interaction. Addison-Wesley Pearson Education, 2009.

Further literature will be announced.",469,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4061442/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MHP00002,"Project Week: Sensors and Wearables for Automated Detection of Nutrition, Physical Activity, and Sleep",4.0,-,from Summer semester 2024,Christoph,TUM School of Medicine and Health,-,Bachelor/Master,-,-,one semester,winter semester,English,-,120.0,40.0,80.0,"research paper
After completion of the project week, students will submit an extended research abstract (1,500 words excluding references, including one figure or table) summarizing their small-scale pilot study. Consistent with open science principles, students will also make their (anonymized) raw data, statistical analyses, and code available.
The abstract will be graded and counts for 100% of the final grade of this module.",No,No,"Student should have
•	Interest in learning about cutting-edge methods for the assessment of diet, PA, and sleep
•	Basic knowledge of research methods and study design
•	Basic knowledge of data manipulation and statistical analysis using Microsoft Excel, R, Python, and/or MATLAB.","After successfully completing the module, students will be able to
•	Understand the relevance of diet, PA, and sleep for human health and well-being
•	Understand the challenges of traditional assessment methods
•	Provide an overview of different sensors and wearables used to assess the concepts
•	Comprehend the limitations of the different approaches 
•	Use different sensors and wearables to automatically detect EB, PA, and sleep
•	Integrate and analyze data collected with different modalities.","The project week will consist of theoretical and practical parts. Theoretical input will comprise of brief introductions to nutrition, physical activity, and sleep, their role for health and well-being, and an overview of traditional assessment methods and their limitations. Furthermore, an overview of sensors and wearables used for the automatic detection and assessment of these concepts will be provided, followed by a detailed introduction to the modalities available for the project as well as use-cases and future outlooks from a variety of fields, including:
•	Sleep-wake detection using wrist-worn sensors 
•	Principles of sleep scoring using EEG 
•	Holistic health monitoring including physical activity, exercise, stress, sleep and recovery 
•	Export and analysis of raw and aggregated data for remote participant monitoring 
•	From wearable sensors to visual signals - using video data for PA detection 
•	Wearable sensors in telemedicine 
•	Use of sensors in neurodegenerative diseasesThe project week will consist of theoretical and practical parts. Theoretical input will comprise of brief introductions to nutrition, physical activity, and sleep, their role for health and well-being, and an overview of traditional assessment methods and their limitations. Furthermore, an overview of sensors and wearables used for the automatic detection and assessment of these concepts will be provided, followed by a detailed introduction to the modalities available for the project as well as use-cases and future outlooks from a variety of fields, including:
•	Sleep-wake detection using wrist-worn sensors 
•	Principles of sleep scoring using EEG 
•	Holistic health monitoring including physical activity, exercise, stress, sleep and recovery 
•	Export and analysis of raw and aggregated data for remote participant monitoring 
•	From wearable sensors to visual signals - using video data for PA detection 
•	Wearable sensors in telemedicine 
•	Use of sensors in neurodegenerative diseases","The project week will consist of theoretical and practical parts, which will be delivered asynchronously (video lectures, text materials via Moodle) and synchronously (Zoom and in person).
Planning and completion of a group project are the core elements of the project week.","PowerPoint, Zoom, Moodle, video lectures, scientific articles","•	Bell BM, Alam R, Alshurafa N, Thomaz E, Mondol AS, de la Haye K, et al. Automatic, wearable-based, in-field eating detection approaches for public health research: a scoping review. Npj Digit Med. 2020 Dec;3(1):38. 
•	Wang L, Allman-Farinelli M, Yang JA, Taylor JC, Gemming L, Hekler E, et al. Enhancing Nutrition Care Through Real-Time, Sensor-Based Capture of Eating Occasions: A Scoping Review. Front Nutr. 2022 May 2;9:852984. 
•	Hassannejad H, Matrella G, Ciampolini P, De Munari I, Mordonini M, Cagnoni S. Automatic diet monitoring: a review of computer vision and wearable sensor-based methods. Int J Food Sci Nutr. 2017 Aug 18;68(6):656–70.",470,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3901169/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001443,Project Week 2024/25: Conflicts in Mining Critical Materials: Compromising in Sustainability Strategies,4.0,-,Always,"Ikonnikova, Svetlana",Associate Professorship of Resource Economics (Prof. Ikonnikova),-,Master,-,-,one semester,one-time,English,-,120.0,60.0,60.0,"To complete the course, students shall form groups representing different stakeholders and play their roles in the game set up in the class; then, make a presentation (50% of the grade) and write a group report (50% of the grade): 
- showing their understanding of sustainability with respect to mining;
-their learning on costs, benefits, and challanges faced by a given stakeholder groups;
- conflicts and ways to find a compromise when it comes to mining strategies;
-importance of mining and its fair development.",No,No,none,"The module targets students of all backgrounds interested in understanding decision-making processes, challenges associated with choices, and divergence in perspectives on the sustainability goals, in particular, in extraction of critical metals and minerals. The course will explain environmental and societal costs of mining, alongside economic benefits, in the context of the increased demand for metals and materials brought about by decarbonisation goals. Participants will learn about different approaches for addressing the intricate challenges faced by German and global mining industries striving to provide critical resources.","The course will consist of three parts, which allows for a type of experiment in how exposure to mining practices influences decision making. The first set of sessions will serve to introduce the topic and record “unexperience” and “noncollaborative” perspectives and decision choices on the mining problems presented. Next, students will be exposed actual mining practices, examine the conflicts (standing or past) onsite in visits to open-pit mines in Germany or Austria, and shall form their own views and opinions on the real-world challenges associated with sustainability in mining. Finally, the students return to the stakeholder roles to review their sustainability goals and weights assigned to them, negotiation strategies and impact oriented behavior.The course will consist of three parts, which allows for a type of experiment in how exposure to mining practices influences decision making. The first set of sessions will serve to introduce the topic and record “unexperience” and “noncollaborative” perspectives and decision choices on the mining problems presented. Next, students will be exposed actual mining practices, examine the conflicts (standing or past) onsite in visits to open-pit mines in Germany or Austria, and shall form their own views and opinions on the real-world challenges associated with sustainability in mining. Finally, the students return to the stakeholder roles to review their sustainability goals and weights assigned to them, negotiation strategies and impact oriented behavior.","Students will engage in role-playing exercises to learn the perspectives of three major stakeholder groups, (1) affected communities, (2) upstream producers, i.e. mining operators, and (3) downstream industrial consumers, e.g., automotive companies. They will use the interactive multiobjective optimization (iMO) tool, we prototyped, to test their decisions exploring interest alignments and stakeholder conflicts, fostering deeper understanding of the multifaceted issues surrounding the extraction and consumption of critical materials.",-,"1. Yakovleva, N., & Nickless, E. (Eds.). (2022). Routledge Handbook of the Extractive Industries and Sustainable Development. Abingdon, UK: Routledge.
2. Hatcher, P., & Grégoire, E. R. (2022). Governance of extractive industries. In Handbook on Governance and Development (pp. 294-307). Edward Elgar Publishing.
3. Veiga, M. M., & Marshall, B. (2018). The extractive industries and society.
4. Veraart, F., Smits, J. P., & van der Vleuten, E. Extractive Industries and Society.",471,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4059246/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT62403,Project Week: Creative Mind Change. A Creativity Workshop,2.0,-,from Winter semester 2024/25,"Slanitz, Alfred",Academic Programs WTG,-,Bachelor/Master,-,-,one semester,irregularly,German/English,-,60.0,45.0,15.0,-,No,No,-,-,--,-,-,-,472,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076035/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED120117,Project Week: Design Futuring,6.0,-,from Winter semester 2024/25,-,Chair of Integrated Product Design (Prof. Thoring),-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module examination takes the form of a conceptual project. This must be presented in an (approx. 10-minute) final presentation and put up for discussion with an invited specialist audience.

The project work is assessed as a whole. It consists of the following elements:
1.	scientifically sound, speculative future scenario in text form
2.	visual illustration of the scenario
3.	development of a design approach in a medium of the student's choice (sketch, model, rendering, collage, video, etc.)
4.	critical-reflective written discussion of the future scenario and own process (approx. 5-6 pages incl. illustrations)
5.	presentation of the results in discourse with an invited expert audience

All five points account for 20% of the overall assessment. 

The examination performance is used to assess the extent to which students are able to independently develop a future scenario, visualize it and transform it into a draft, as well as to take a critical and reflective stance on possible futures.",No,Yes,n.a.,"After successful participation in the ""Design Futuring"" project week, students will be able to
•	apply methods of futures research
•	visualize visionary future scenarios
•	analyze and evaluate possible futures
•	design new futures or create artifacts for them
•	consider the inextricably linked ecological, economic and social effects of their actions.
•	continuously reflect on the methods and knowledge they have learned with regard to sustainable ecological, social and economic development.","The ""Design Futuring"" project week provides an insight into the methods of futurology, speculative design and design futuring. The aim of the project week is to develop visions for possible futures, to design them in such a way that a discourse about the futures is made possible and, if applicable, to develop concrete solutions in order to actively shape desirable futures or prevent undesirable ones.
In this project week, students learn the basic design methods for these tasks and apply them in an exemplary manner.
Topics change every year and address, for example, ""The Future of Sports"", ""The Future of Education"", ""The Future of Healthcare"" or ""The Future of Food"".The ""Design Futuring"" project week provides an insight into the methods of futurology, speculative design and design futuring. The aim of the project week is to develop visions for possible futures, to design them in such a way that a discourse about the futures is made possible and, if applicable, to develop concrete solutions in order to actively shape desirable futures or prevent undesirable ones.
In this project week, students learn the basic design methods for these tasks and apply them in an exemplary manner.
Topics change every year and address, for example, ""The Future of Sports"", ""The Future of Education"", ""The Future of Healthcare"" or ""The Future of Food"".","Basic knowledge is taught in short lectures beforehand and then applied independently in a practical design exercise during the project week.
The project is organized as teamwork (2-3 people); the teams are put together on an interdisciplinary basis where possible. The subject area and context are explored in accompanying museum visits or excursions. Input from experts, self-study literature research, design discussions and interim presentations promote critical discourse and reflection on the students' own work. In a concluding symposium, the scenarios and designs developed are discussed with an invited specialist audience.","Presentation slides, handouts, worksheets, scientific articles, laboratory equipment (e.g. measuring instruments), Moodle","Dunne, A., 2006. Hertzian Tales: Electronic Products, Aesthetic Experience, and Critical Design. MIT Press, Cambridge, MA, USA.
Dunne, A., Raby, F., 2013. Speculative everything: design, fiction, and social dreaming. MIT press.
Susskind, R.E., Susskind, D., 2022. The future of the professions: How technology will transform the work of human experts, Updated edition. ed. Oxford University Press, Oxford.
Groß, B., 2024. Designing Futures: Speculation, Criticism, Innovation. Laurence King Publishing.
Quinn, B., 2011. Design Futures. Merrell Publishers, London New York.
Yelavich, S., Adams, B. (Eds.), 2014. Design as Future-Making. Bloomsbury Academic.
Wilkie, A., Savransky, M., Rosengarten, M. (Eds.), 2019. Speculative Research: The Lure of Possible Futures. Routledge.
Fry, T., 2018. Design Futuring: Sustainability, Ethics and New Practice. Bloomsbury Visual Arts, London.",473,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4075961/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED120112,Projectweek: Diversity in urban design,3.0,-,until Winter semester 2024/25,"Hartmann, Jana",Associate Professorship of Architecture of Urban Density (Prof. Kaestle),-,Master,-,-,one semester,one-time,German,-,90.0,40.0,50.0,-,No,No,-,-,--,-,-,-,474,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4051599/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED150040,Project week: Future Mobility Camp,3.0,-,from Winter semester 2024/25,-,Assistant Professorship of Autonomous Vehicle Systems (Prof. Betz),-,Master,FMC,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module examination takes place as part of a group project (max. 3 students). As part of this group, students must develop a concept for future mobility. This question is based on the theoretical and empirical content of the lecture. The assessment of the students focuses on their understanding of the problem, the tools used, the solution developed to solve the problem and their ability to explain and justify the decisions made during the project work. The final grade of the module is composed of the following parts.
1. Students must present a concept of a solution for future mobility in a presentation. This presentation is carried out in a 15-minute final presentation by each working group. The presentation is based on the group work and shows how the group has applied the methods and knowledge learned in the module. Recognizable individual contributions are to be made in the final presentation. (30%)

2. students have to give a short, reflective report (approx. 3 pages, 2000-2500 words) on the answer solution concept for future mobility from the group work (70%). 
This format aims to provide students with a platform where they can apply what they have learned in the module in an independent and focused way. The reflective reports allow for individual exploration of the topics, while the group presentations test the ability to work in teams and put knowledge into practice.",No,No,No prerequisites are required.,"After participating in the ""Future Mobility Camp"" project week, students will comprehensively understand future mobility's technological, social, and ecological aspects. They will be able to explain the most important hardware and software components of autonomous and networked vehicles and how they work and use them in practical applications. Students have practical experience in dealing with real autonomous vehicles, which enables them to better understand the technology and its real-life application. Students can develop innovative, sustainable mobility solutions that combine technical feasibility, economic viability and social acceptance. They understand the interdisciplinary challenges and can develop concepts for integrating new mobility technologies into the urban infrastructure. They can also assess autonomous mobility's social and ethical implications and create business cases for new mobility concepts. As the module is open to different disciplines and raises transdisciplinary issues, students are able to understand the language of others, justify their own decisions and convince others with arguments in teams from their own discipline, but also in interdisciplinary teams.","The ""Future Mobility Camp"" as part of the Project Week 2024/2025 is intensively dedicated to advancing the mobility of tomorrow, a central challenge of our century, with a clear focus on the interdisciplinary fusion of different subject areas. By bringing together students from different disciplines (School ED, School CIT, School SOT, School MGT), the ""Future Mobility Camp"" aims to develop new, innovative mobility solutions that are technically feasible, economically viable and socially acceptable. While technologies such as autonomous and networked vehicles form the foundation for the development of advanced mobility concepts, interdisciplinary collaboration will be used to take a holistic view of the aspects of transport infrastructure and social mobility. Furthermore, business cases for new mobility concepts will be developed in order to offer a comprehensive perspective on the mobility of the future.

By using real, 1:10 scale autonomous vehicles in a miniature city, students will be introduced to the technologies of autonomous and connected vehicles. The aim is to recognize the need to view technology not just as a tool, but as a pioneer for sustainable mobility solutions. The project week thus gives students the unique opportunity to develop future-oriented concepts that form the basis for the mobility of the next generation in a holistic way between technology, (transport) infrastructure, users, society and the environment.The ""Future Mobility Camp"" as part of the Project Week 2024/2025 is intensively dedicated to advancing the mobility of tomorrow, a central challenge of our century, with a clear focus on the interdisciplinary fusion of different subject areas. By bringing together students from different disciplines (School ED, School CIT, School SOT, School MGT), the ""Future Mobility Camp"" aims to develop new, innovative mobility solutions that are technically feasible, economically viable and socially acceptable. While technologies such as autonomous and networked vehicles form the foundation for the development of advanced mobility concepts, interdisciplinary collaboration will be used to take a holistic view of the aspects of transport infrastructure and social mobility. Furthermore, business cases for new mobility concepts will be developed in order to offer a comprehensive perspective on the mobility of the future.

By using real, 1:10 scale autonomous vehicles in a miniature city, students will be introduced to the technologies of autonomous and connected vehicles. The aim is to recognize the need to view technology not just as a tool, but as a pioneer for sustainable mobility solutions. The project week thus gives students the unique opportunity to develop future-oriented concepts that form the basis for the mobility of the next generation in a holistic way between technology, (transport) infrastructure, users, society and the environment.","The teaching and learning methods in the ""Future Mobility Camp"" include a variety of interactive and practice-oriented approaches to give students an in-depth understanding of future mobility. The teaching content is conveyed through lectures and presentations (PowerPoint), with complex issues being explained and illustrated using a tablet PC. In the lectures, specific questions are asked that require students to transfer their knowledge and allow them to actively participate in discussions. This deepens their understanding of the challenges and solutions in the field of autonomous mobility.
A central component of the project week is the work in interdisciplinary teams where students develop concepts for innovative mobility solutions. This teamwork promotes applying theoretical knowledge to practical problems and interdisciplinary cooperation and communication.
Practical exercises with autonomous model vehicles in a full-scale miniature city allow students to experience and apply the technology directly. These exercises include programming and testing the vehicles to overcome real-world challenges. Through these hands-on activities, students develop a practical understanding of the technology and its integration into an urban environment.
In addition to the technical exercises, workshops are offered on the social, legal, and ethical aspects of future mobility. In these workshops, students analyze the impact of new mobility concepts on society and discuss sustainable and ethical solutions.","Lecture, presentations, discussion, tablet PC and projector","Pendleton et. al, Perception, Planning, Control, and Coordination for Autonomous Vehicles, Machines 2017, 5(1), 6; https://doi.org/10.3390/machines5010006
 M. Maurer, B. Lenz, H. Winner, and J. C. Gerdes, Autonomous Driving: Technical, Legal and Social Aspects. s.l.: Springer, 2016. 
A. Faisal, T. Yigitcanlar, M. Kamruzzaman, and G. Currie, “Understanding autonomous vehicles: A systematic literature review on capability, impact, planning and policy,” JTLU, vol. 12, no. 1, 2019, doi: 10.5198/jtlu.2019.1405.",475,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064375/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001445,Project Week: AI and Business: Bridging Theory and Practice in Business Applications,12.0,V2024,until Winter semester 2024/25,"Welpe, Isabell",Chair of Strategy and Organization (Prof. Welpe),-,Master,-,-,one semester,winter/summer semester,English,-,360.0,120.0,240.0,"Part 1 (50% of total grade):
1x 15 mins Presentation about a specific AI Application in Industry per Participant (30% of total grade)
Blog entry of 400 – 800 words per Student documenting the open challenges for a specific AI Application. Publication either on TUM CSO website or via internal Notion page, dependent of student privacy preferences. (20% of total grade)
Part 2 (50% of total grade):
1x Project Presentation and Prototype Showcase during Project week in January (max 15 min./per Participant) (50% of total grade)",No,No,Basic knowledge in AI and Business Management; those who have already successfully completed the module MGT001407 cannot take this module again,"The mix of theoretical foundations and practical implementation contexts of “AI and Business” is intended to enhance student’s overall AI literacy, as well as their understanding on the capabilities and limits of AI in real-world scenarios. As a consequence, the course will provide students with the necessary understanding and soft skills needed to successfully implement AI solutions in business. 

Students will learn: 

How to ‘think’ AI for Business in order to come up with practical and effective solutions for AI implementations in solving real-world problem settings. 

How AI is already implemented in business scenarios today 

How to identify pitfalls, problems, as well as cost and sustainability concerns when implementing AI 

How to work effectively and on basis of scientific principles towards solving real-world problems 

Critical thinking, reflection, and application of concepts and scientific findings to concrete challenges. 

Presentation and Public Speaking skills, including how to prepare contents and pitches with excellence","“AI and Business” provides TUM students with the opportunity of gaining essential knowledge on applying AI in business scenarios, while offering students the chance to extend on this knowledge by building hands-on AI solutions for real-world business use-cases. The seminar is structured in two separate blocks. The first one is AI for Business - Essentials, and the second one is  AI for Business - Advanced. AI for Business - Essentials provides students with the essential theoretical knowledge on understanding AI and how it can be enhanced for business purposes. AI for Business – Advanced is designed as hands-on module, throughout which students collaborate in interdisciplinary teams (á 3-4 members) with partnering companies to solve real-world business problems with AI. The Advanced module cumulates in a hackathon-themed afternoon during which teams will present their solutions; with best projects having the chance of being awarded.“AI and Business” provides TUM students with the opportunity of gaining essential knowledge on applying AI in business scenarios, while offering students the chance to extend on this knowledge by building hands-on AI solutions for real-world business use-cases. The seminar is structured in two separate blocks. The first one is AI for Business - Essentials, and the second one is  AI for Business - Advanced. AI for Business - Essentials provides students with the essential theoretical knowledge on understanding AI and how it can be enhanced for business purposes. AI for Business – Advanced is designed as hands-on module, throughout which students collaborate in interdisciplinary teams (á 3-4 members) with partnering companies to solve real-world business problems with AI. The Advanced module cumulates in a hackathon-themed afternoon during which teams will present their solutions; with best projects having the chance of being awarded.","In this course, a combination of lectures, practical exercises, seminars, and project work is employed to achieve the intended learning outcomes. Lectures provide foundational knowledge and advanced concepts in AI and its applications in business, ensuring students have a solid theoretical base. Practical exercises allow students to apply theoretical knowledge in simulated real-world scenarios, enhancing their problem-solving skills and understanding of various perspectives.

Seminars involve in-depth discussions, reflections, and presentations. These methods encourage critical thinking, self-assessment, and peer learning. Students engage in reflective sessions to internalize the material and develop their critical thinking skills, while interactive discussions foster a deeper understanding of complex topics through collaborative learning.

Project work is a crucial component where students conduct independent research on specific topics related to AI in business. This includes preparing educational content, presenting their findings, and receiving feedback. The project work is designed to develop students' research skills, enhance their ability to create didactic materials, and improve their presentation and public speaking abilities. The iterative process of receiving and incorporating feedback ensures continuous improvement and deeper comprehension of the subject matter.","Online resources, slides, academic papers","Iansiti, M. (2020). Competing in the Age of AI: Strategy and Leadership When Algorithms and Networks Run the World
Brynjolfsson, E. & McAfee, A. (2017). The Business of Artificial Intelligence. Harvard Business Review. https://hbr.org/2017/07/the-business-of-artificial-intelligence
Dawes, R. M. (1979). The robust beauty of improper linear models in decision making. American psychologist, 34(7), 571.
Fleck, L., Rounding, N., & Özgül, P. (2022). Artificial Intelligence in Hiring: Friend or Foe?. ROA.
•Goldfarb & Gans (2018). Prediction Machines: The Simple Economics of Artificial Intelligence. Ingram Publisher Services. ISBN 978-1633695672.
Nestor et al. (2023). “The AI Index 2023 Annual Report,” AI Index Steering Committee, Institute for Human-Centered AI, Stanford University, Stanford, CA, April 2023.Chugunova, Marina.
Sele, Daniela (2022). We and It: An Interdisciplinary Review of the Experimental Evidence on How Humans Interact with Machines, Journal of Behavioral and Experimental Economics 99.
Suleyman, Mustafa. 2023. The Coming Wave: Technology, Power, and the Twenty-first Century's Greatest Dilemma. Crown Publishing. New York. ISBN: 978-0593593950.
• Turing, A. M. (1950). Computing Machinery and Intelligence. Mind, 59(236), 433–460. http://www.jstor.org/stable/2251299
Helmus, T. C. (2022). Artificial Intelligence, Deepfakes, and Disinformation: A Primer. RAND Corporation. http://www.jstor.org/stable/resrep42027",476,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064383/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT433019,Project Week Medical Technology Prototype,2.0,-,from Winter semester 2023/24,"Hemmert, Werner",Department of Computer Engineering,-,Master,Medical Measurement Technology Prototype,-,one semester,one-time,German/English,-,60.0,40.0,20.0,-,No,No,-,-,--,-,-,-,477,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3770184/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MHP00008,Project Week: Sustainable Group Travels in Winter for Children and Adolescents,4.0,-,from Summer semester 2024,"Froschmeier, Thomas",TUM School of Medicine and Health,-,Bachelor,-,"Solutions for dealing with snow uncertainty
using multi-stakeholder processes",one semester,winter semester,German,-,120.0,45.0,75.0,"Presentation (20 minutes):
In a poster presentation, students demonstrate that they can plan and organize group trips for children and young people in winter in a sustainable way against the background of multi-stakeholder processes. In addition to problem-solving skills in the direction of sustainable development, students demonstrate that they can present the solution they have developed to an audience convincingly and in a logical sequence. The work is carried out in a group of four people; the design of the poster (30%) and the presentation (70%) are assessed; each student makes individual contributions to the poster and the presentation (5 minutes per person).
In accordance with LPO I §36 and §38, the module corresponds to the admission requirement “Participation in a winter sports week” in the Didactics of Primary School course and the Didactics of Secondary School course. In order to achieve the credit for the state examination, either the module MHP00008 (Project week: Sustainable group trips for children and young people in winter) or the module SG702030 (Onboarding Week) must be completed.",Yes,Yes,"none
To apply for the module, students must send their application (a PDF via e-mail) to studentoffice.lehramt.sto@mh.tum.de (by October 13, 2024).
The application should consist of a CV and a letter of motivation (no more than one page) explaining the reasons for participating in the seminar and the contributions the applicant can make to the project (based on personal background and study program).","After successfully completing the module, students will be able to
-	classify different scenarios such as given snow reliability, partial snow reliability or lack of snow reliability when planning and organizing group trips in winter
-	analyze existing local structures (e.g. infrastructure, tourism concepts)
-	evaluate the prevailing framework conditions as a whole
-	develop group trips in winter in a way that promotes sustainability against the backdrop of the Sustainable Development Goals (SDGs) 
-	create local trips that are just as fulfilling for the participants (here: children and young people) as trips with guaranteed snow
-	to design sport and exercise concepts and experiences that are situational, sustainable and regional/location-specific
-	- communicate with the various stakeholders.","- Presentation of the initial situation and challenges
- Interdisciplinary lectures in the context of eLearning, offers from representatives from several TUM departments and guest speakers
- Formation of teams to solve the Grand Societal Sustainable Development
- Challenges as part of group trips by children and young people in winter
during the project week
- Brainstorming (World Café) and structuring (mind mapping)


- The needs of nature, travelers (here: children and young people) as well as the local community and tourism providers are determined against the background of climate change, the SDGs and the resulting consequences for the mountain world in winter
- Group trips are designed in such a way that local and regional travel ventures are fulfilling, sustainable, exercise- and health-promoting and experience-oriented for participants (here: children and young people)
- Interactions with local stakeholders strengthen the multi-perspective approach: tourism association, lift operators, hunting association, accommodation

In accordance with LPO I §36 and §38, the module corresponds to the admission requirement “Participation in a winter sports week” in the Didactics of Primary School course and the Didactics of Secondary School course. In order to achieve the credit for the state examination, either the module MHP00008 (Project week: Sustainable group trips for children and young people in winter) or the module SG702030 (Onboarding Week) must be completed.- Presentation of the initial situation and challenges
- Interdisciplinary lectures in the context of eLearning, offers from representatives from several TUM departments and guest speakers
- Formation of teams to solve the Grand Societal Sustainable Development
- Challenges as part of group trips by children and young people in winter
during the project week
- Brainstorming (World Café) and structuring (mind mapping)


- The needs of nature, travelers (here: children and young people) as well as the local community and tourism providers are determined against the background of climate change, the SDGs and the resulting consequences for the mountain world in winter
- Group trips are designed in such a way that local and regional travel ventures are fulfilling, sustainable, exercise- and health-promoting and experience-oriented for participants (here: children and young people)
- Interactions with local stakeholders strengthen the multi-perspective approach: tourism association, lift operators, hunting association, accommodation

In accordance with LPO I §36 and §38, the module corresponds to the admission requirement “Participation in a winter sports week” in the Didactics of Primary School course and the Didactics of Secondary School course. In order to achieve the credit for the state examination, either the module MHP00008 (Project week: Sustainable group trips for children and young people in winter) or the module SG702030 (Onboarding Week) must be completed.","The module consists of two seminars, one of which serves as preparation for the block course and the other consists of its implementation. Learning and teaching methods for preparation: studying the literature, summarizing the current state of the literature, presentation of findings and critical reflection (each in partner work). Teaching and learning methods of the block course: Relevant material research, working on problems and finding solutions, cooperation with partners from practice and science, application of World Café and mind mapping, action-oriented testing of selected teaching concepts and their pedagogical-didactic classification.","Presentations, case descriptions and solutions.","Corleis, F. (2000). Die Bedeutung von Naturerlebnissen in der Schule: Naturerlebnispädagogik. Ziel, Lüneburg.
Deutscher Alpenverein (Hsg). (2015). Klimawandel im Alpenraum. Deutscher Alpenverein, München.
Eweje, G., Sajjad, A., Nath, S. D., & Kobayashi, K. (2021). Multi-stakeholder partnerships: A catalyst to achieve sustainable development goals. Marketing Intelligence & Planning, 39, 186-212.
Lorch, J. (1995). Trendsportarten in den Alpen. Konflikte, rechtliche Reglementierungen, Lösungen. Cipra Kleine Schriften, Vaduz.
MacDonald, A., Clarke, A., & Huang, L. (2022). Multi-stakeholder partnerships for sustainability: Designing decision-making processes for partnership capacity. In Business and the ethical implications of technology (pp. 103-120). Cham: Springer Nature.
Müller, H.-H. (2003). Schulsport im Winter. Zur Bedeutung und Gestaltung wintersportlicher Aktivitäten in der Schule. Dissertation, Universität Regensburg, Regensburg.
Rolland, C. G., Zoglowek, H. (2000). Friluftsliv in Norwegen. Sportpädagogik, 4, 22-24.
Steiger R. (2013). Auswirkungen des Klimawandels auf Skigebiete im bayerischen Alpenraum. Salzwasser Verlag, Innsbruck.
Theis R.; Lange A. (Hsg.) (2018). Das große Limpert-Buch des Wintersports, Limpert, Wiebelsheim.
Wahl, W.; Dewald, W., u.a. (2001). Alpine Erlebnispädagogik. Jugend des Deutschen Alpenvereins, München.",478,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4067170/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED120118,Project Week: New Technologies for Design Research,6.0,-,from Winter semester 2024/25,-,Chair of Integrated Product Design (Prof. Thoring),-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"•	The module examination takes the form of a laboratory assignment. It consists of a practical part (research design, implementation of an experiment, data collection, exemplary data analysis), which is prepared and presented in the form of a poster, and a written reflection of approx. 3-4 pages.
•	The laboratory work (including poster) is weighted at 70% and the written reflection at 30% of the overall grade.
•	The examination performance is used to assess the extent to which students can independently transfer methods of technology-supported design research into a research design and to document and reflect on the results in a scientifically adequate form.",No,Yes,Basic knowledge of quantitative research methods and an interest in technology-based measurement tools are recommended,"After successful participation in the project week „New Technologies for Design Research"", students will be able to:
•	Develop a concrete research design using technology-based measurement tools
•	Conduct a study independently using technology-based measurement tools
•	Analyze the data and evaluate the research results
•	Document the research results
•	Critically reflect on the research results and their own process","In this project week “New Technologies for Design Research”, students from all disciplines learn how to leverage technology-supported design research methods for investigating and understanding users’ responses to designed artifacts and environments. Understanding human emotions and physiological reactions in relation to (a) the environment they are in, (b) physical or digital products they interact with, or (c) intangible services they use, is relevant for many disciplines. This interdisciplinary project introduces a variety of technological measurement tools to the participating students, for example, heart rate monitors, EEG headsets, motion tracking devices, facial expression recognition software, skin conductors, and other bodily monitoring tools. Students develop a research design and conduct an exemplary study around one of the provided technologies.In this project week “New Technologies for Design Research”, students from all disciplines learn how to leverage technology-supported design research methods for investigating and understanding users’ responses to designed artifacts and environments. Understanding human emotions and physiological reactions in relation to (a) the environment they are in, (b) physical or digital products they interact with, or (c) intangible services they use, is relevant for many disciplines. This interdisciplinary project introduces a variety of technological measurement tools to the participating students, for example, heart rate monitors, EEG headsets, motion tracking devices, facial expression recognition software, skin conductors, and other bodily monitoring tools. Students develop a research design and conduct an exemplary study around one of the provided technologies.","Basic knowledge is taught in short lectures beforehand and then applied independently in a practical design exercise during the project week.
The project is organized as teamwork (2-3 persons); the teams are interdisciplinary whenever possible. In interdisciplinary teams, students develop relevant and appropriate research questions, experiment with the technological tools provided and collect sample data that provide information on the emotional state, well-being and stress levels of the participants. Expert input, best-practice examples, self-study literature research, discussions and an interim presentation encourage critical discourse and reflection on the students' own work.","Presentation slides, handouts, worksheets, scientific articles, laboratory equipment (e.g. measuring instruments), Moodle","Koskinen, I., Zimmerman, J., Binder, T., Redstrom, J., Wensveen, S., 2011. Design Research Through Practice: From the Lab, Field, and Showroom, 1st ed. Morgan Kaufmann, Waltham, MA.
Creswell, J.W., Creswell, J.D., 2018. Research Design: Qualitative, Quantitative, and Mixed Methods Approaches, 5th ed. SAGE Publications, Inc, Los Angeles.
Booth, W.C., Colomb, G.G., Williams, J.M., 1995. The Craft of Research. University of Chicago Press, Chicago.
Schoor, R. van der, Boeijen, A. van, Daalhuizen, J., Zijlstra, J., 2013. Delft Design Guide: Design strategies and methods: Design Methods - Delft University of Technology – Faculty of Industrial Design Engineering, 4th ed. BIS Publishers, Amsterdam.
Devetak, I., Glažar, S.A., 2022. Applying Bio-Measurements Methodologies in Science Education Research, 1st ed. 2021 Edition. ed. Springer.
Kara, H. (Ed.), 2024. The Bloomsbury Handbook of Creative Research Methods. Bloomsbury Academic.",479,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4075965/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED180030,Project Week: Wind Energy in Bavaria - How to impart Knowledge?,4.0,-,from Winter semester 2024/25,"Spliethoff, Hartmut",Chair of Energy Systems (Prof. Spliethoff),-,Bachelor/Master,-,-,one semester,one-time,German,-,120.0,60.0,60.0,-,Yes,No,-,-,--,-,-,-,480,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4059617/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT6430001,Project Week 1000+,2.0,-,from Winter semester 2023/24,"Hayden, Oliver",Department of Electrical Engineering,-,Master,-,"Team project week 1000+ in small and medium companies
(KMU & TUM project week 1000+)",one semester,winter semester,German/English,-,40.0,30.0,10.0,"In a 30 min poster presentation in the team in front of SME employees and with involvement of the examiner the students demonstrate their understanding and correct analysis of the SME`s operational processes and the given problem. The students show the development of at least one problem solving strategy and demonstrate their capability to argue for this approach in the discussion. In the discussion the students also reflect their own competences in the context of possible problems in a company.  
The final grade is based on the poster presentation.",Yes,No,none,"o	Understanding of processes and corporate culture
o	Developing expertise in internal processes and innovation processes
o	Developing a solution strategy for the operational problem
o	Interdisciplinary cooperation with Master's students from other TUM Schools","TUM students graduating with a Master's degree have an insufficient understanding of operational processes, industrial culture of companies and knowledge of opportunities where they can apply their skills. 1.000+ enables student teams to familiarize themselves with a real business problem and develop solution strategies with their partner by working together with companies, especially small and medium-sized enterprises (SMEs), during a project week. The small student groups learn about operational processes and can develop an understanding of the partner's problems through interviews and role-playing on topics such as resource limitation, communication, product development and decision-making processes. The project week is reported in the form of a poster and a presentation of the results by the team to the partner. At the end of the project week, the partner solves the real-life problem and reflects on what has been learnt. The 1,000+ Project Week is aimed at Master's students from all TUM Schools.TUM students graduating with a Master's degree have an insufficient understanding of operational processes, industrial culture of companies and knowledge of opportunities where they can apply their skills. 1.000+ enables student teams to familiarize themselves with a real business problem and develop solution strategies with their partner by working together with companies, especially small and medium-sized enterprises (SMEs), during a project week. The small student groups learn about operational processes and can develop an understanding of the partner's problems through interviews and role-playing on topics such as resource limitation, communication, product development and decision-making processes. The project week is reported in the form of a poster and a presentation of the results by the team to the partner. At the end of the project week, the partner solves the real-life problem and reflects on what has been learnt. The 1,000+ Project Week is aimed at Master's students from all TUM Schools.","o	Introduction to business management and processes as part of an in-house internship
o	Role play
o	Solution development in an interdisciplinary team through interviews and understanding of internal processes",Whiteboard; Presentation: Poster A0 portrait format (template will be provided),Specified by the company,481,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3640608/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED150038,Project Weeks: Applied Citizen Participation,3.0,-,from Winter semester 2024/25,-,Chair of Urban Structure and Transport Planning (Prof. Wulfhorst),-,Master,AppCP,-,one semester,winter semester,English,-,90.0,45.0,45.0,"The module examination consists of a project work and a presentation. The project work (solving a Mobility Participation Challenge in an interdisciplinary team) is used to assess the extent to which students understand different forms of participation, can analyze different levels of participation, can evaluate participation methods and processes and are able to develop their own participation methods and processes. The project work also assesses whether students can transfer content to an application case, develop solutions for a mobility participation challenge in interdisciplinary teams and at the same time flexibly solve unforeseen problem situations. Subsequently, a presentation is held to demonstrate that students can communicate their results in an understandable, precise and clear manner and at the same time present themselves convincingly and professionally with rhetorical confidence.
The examination is graded.",No,No,Lecture: Transportation Policies and Project Design,"After participating in the module, students will be able to  
- Understand different forms of participation 
- Analyze different levels of participation 
- Evaluate participation methods and processes 
- Give scientific presentations to communicate the results of their research 
- Develop their own participation methods and processes 
- Develop solutions for a Mobility Participation Challenge in interdisciplinary teams 
- Flexibly solve unforeseen problem situations in interdisciplinary teams
- Continuously reflect on the methods they have learned with regard to sustainable development","1. Introduction to Participation and the Seminar Challenges:
The first module serves as an interactive introduction to the topic and is based on the questions: What is public participation? Why is it important in urban and mobility planning? Why is interdisciplinary and cross-stakeholder mobility planning important? Subsequently, real life problems relating to participation and mobility in the Munich metropolitan region will be analyzed. These form the basis for the following seminar components. 

2. Facilitation of Transformative Participation Processes: 
The aim of this module is to provide answers to the question: ""What transformative process design do participation processes need in order to make the mobility transition culturally sustainable?"" and ""What methods and building blocks enable successful participation?"". Here, students acquire knowledge about methods and building blocks for successful participation from participation experts. In addition, answers to the question ""How can the success of participation be made measurable?"" are developed.

3. Taking on the Challenge: Participation Strategy Development
Throughout the week, students work on a participation strategy to tackle their real-life challenge. The expert sessions, mentoring from lecturers (from the Chair of Urban Structure and Transport Planning), and peer learning are key elements of this process.

4. Presentation of the Participation Strategy & Concluding Session
On the last day of the block seminar, the student groups present their solutions to the real-life challenge in front of an expert audience (scientists, participation experts, challenge providers).
Finally, a discussion and lessons learned session will be held to conclude the block seminar.1. Introduction to Participation and the Seminar Challenges:
The first module serves as an interactive introduction to the topic and is based on the questions: What is public participation? Why is it important in urban and mobility planning? Why is interdisciplinary and cross-stakeholder mobility planning important? Subsequently, real life problems relating to participation and mobility in the Munich metropolitan region will be analyzed. These form the basis for the following seminar components. 

2. Facilitation of Transformative Participation Processes: 
The aim of this module is to provide answers to the question: ""What transformative process design do participation processes need in order to make the mobility transition culturally sustainable?"" and ""What methods and building blocks enable successful participation?"". Here, students acquire knowledge about methods and building blocks for successful participation from participation experts. In addition, answers to the question ""How can the success of participation be made measurable?"" are developed.

3. Taking on the Challenge: Participation Strategy Development
Throughout the week, students work on a participation strategy to tackle their real-life challenge. The expert sessions, mentoring from lecturers (from the Chair of Urban Structure and Transport Planning), and peer learning are key elements of this process.

4. Presentation of the Participation Strategy & Concluding Session
On the last day of the block seminar, the student groups present their solutions to the real-life challenge in front of an expert audience (scientists, participation experts, challenge providers).
Finally, a discussion and lessons learned session will be held to conclude the block seminar.","The module consists of a project week. The theoretical basics are taught in short units at the beginning of the week. Students thus understand different forms of participation and can analyze different levels of participation.  

Subsequently, problems relating to participation and mobility planning are analyzed. In this way, students learn to evaluate participation methods and processes. 

In order to develop methodological skills, different participation methods are presented by experts. Students can immerse themselves directly in the method through a ""learning-by-doing"" approach.  

The initially analyzed problems (Mobility Participation Challenges) are solved over the course of the week through project work in interdisciplinary teams and the acquired methodological skills. Students thus develop their own participation methods and processes and solve their Mobility Participation Challenge. They also learn how to solve unforeseen problem situations in their challenges.","Handouts, scientific papers, presentations, guest lectures and participation methods.","Arnstein, S. R. (1969). A Ladder Of Citizen Participation. Journal of the American Institute of Planners, 35(4), 216–224. https://doi.org/10.1080/01944366908977225 

Straßburger, G., & Rieger, J. (Eds.). (2014). Partizipation kompakt. Beltz Juventa.",482,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4044614/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED160044,Project Weeks: Applied Surgineering,4.0,-,from Winter semester 2024/25,"Bengler, Klaus",Chair of Ergonomics (Prof. Bengler),-,Bachelor/Master,-,-,-,-,-,-,96.0,32.0,64.0,-,No,No,-,-,--,-,-,-,483,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4075352/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10082,Project Weeks: Data Design Studio for AI-Powered EdTech,3.0,-,from Winter semester 2024/25,-,Department of Educational Sciences,-,Bachelor/Master,DDS,Data Design Studio for AI-Powered EdTech,one semester,winter semester,English,-,120.0,35.0,85.0,"Work on a project to develop their own tangible educational learning opportunities to support STEM+C outcomes, applying agile development process. They will present their results in the seminar.
Presentation duration: 15-20 min
The examination will open discussions and reflections about learning processes and its possible implementations in real world scenarios.",No,No,Students of all schools and subjects,"By engaging with specific learning cases that describe real-world educational problems, participants in this course will investigate how educational tools align with learning theories that describe the intended effects of technology on learners. By engaging with a selection of data collection tools (e.g., video, sensors, audio), participants will familiarize themselves with primary data sources and their limitations for generating knowledge about teaching and learning. The participants will engage in the process of designing and critiquing data flows for educational technologies through a hands-on experience with data collection tools. Participants will explore how various data types and mixed methods templates can produce insights into the design of a data flow in educational technology.","Would you like to become an educational technology researcher? Are you interested in educational technology design? Are you dreaming of building educational technology? To get started, you will need knowledge about how data flows in and out of educational technology and may influence and capture human behavior and learning. Integrating data-oriented thinking is not trivial. ""Data Design Studio” will provide a dive into the world of data-driven thinking. This Project Weeks course is an intensive, student-centered, and project-oriented learning experience of a scaffolded process for data collection design in the context of AI-powered EdTech. This project-based course targets all TUM students interested in AI-powered EdTech at any level (Bachelor, Master, PhD) and any school. Participating students will have the opportunity to select a real educational problem and to design and implement data flows for AI-powered EdTech that could tackle this problem. Participants will work independently with special instructional materials and instructor feedback to support their learning process at different stages of their projects.Would you like to become an educational technology researcher? Are you interested in educational technology design? Are you dreaming of building educational technology? To get started, you will need knowledge about how data flows in and out of educational technology and may influence and capture human behavior and learning. Integrating data-oriented thinking is not trivial. ""Data Design Studio” will provide a dive into the world of data-driven thinking. This Project Weeks course is an intensive, student-centered, and project-oriented learning experience of a scaffolded process for data collection design in the context of AI-powered EdTech. This project-based course targets all TUM students interested in AI-powered EdTech at any level (Bachelor, Master, PhD) and any school. Participating students will have the opportunity to select a real educational problem and to design and implement data flows for AI-powered EdTech that could tackle this problem. Participants will work independently with special instructional materials and instructor feedback to support their learning process at different stages of their projects.","The approach is participatory, balancing input and instructor support to build conceptual and practical skills required for building or evaluating educational technologies. The students will be required to read 1-2 readings supplementing main objectives of the course.",Presentations,Will be announced in Moodle,484,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4064552/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10083,Project Weeks: Decision Education,5.0,-,from Winter semester 2024/25,"Ruggeri, Azzurra",Department of Educational Sciences,-,Bachelor/Master,Decision Education,How can we improve decision making competence among university students?,one semester,winter semester,English,-,120.0,50.0,70.0,"This course will be graded on a pass/fail basis. The evaluation of this course will be based on the preparation of a portfolio. Part 1 - Sustained and active in-class participation with includes: completing exercises, in-class individual and group activities, and individual presentations. Part 2 - Group Project: in groups of 3/4, students will create and present to the class a curriculum for a program in Decision Education where the target group are students in their expertise domain. Students will then upload their project as well as an individual report reflecting on the activity for evaluation.",No,No,English language fluency,"At the end of the project week, students will be able to:
1. To reflect on the limitations and potential biases of our own decision-making processes and outcomes.
2. To brainstorm about we could overcome these biases and limitations, that is, how can we improve decision-making competence among university students.
3. To discuss how a program for Decision Education could look like, that is able to empower students with the skills and dispositions essential to be able to learn actively, independently, and efficiently, make sound inferences, and take informed decisions.","Each of the five days of the project week will be centered around one theme, which will be first introduced in the morning interactive lecture, followed by activities, group work and presentations. The topics explored will be:
1. Introduction to the biases of decision making and the way in which they are empirically studied - introduction and brief historical overview of the field of decision making as investigated in evolutionary psychology, behavioural economics, social psychology, and computational cognitive science
2. Decision-making as a teachable skill – introduces the program of Decision Education and the toolbox for improving decision making
3. Communicating risk and uncertainty to make better medical and economic decisions - this day will explore how experts should information be presented to others by professionals so that they can make the best possible decisions, focusing on risk communication, which is the domain where most empirical data are available
4. Making decisions in an online world: who can we trust? – this day will explore social decision making biases, and their consequences on partner choice, as well as wider political decision making, with a focus on online environments
5. Decision education in the classroom and in society – this class will focus on decision making in the context of education, but also on how governments are using insights from decision-making for designing policyEach of the five days of the project week will be centered around one theme, which will be first introduced in the morning interactive lecture, followed by activities, group work and presentations. The topics explored will be:
1. Introduction to the biases of decision making and the way in which they are empirically studied - introduction and brief historical overview of the field of decision making as investigated in evolutionary psychology, behavioural economics, social psychology, and computational cognitive science
2. Decision-making as a teachable skill – introduces the program of Decision Education and the toolbox for improving decision making
3. Communicating risk and uncertainty to make better medical and economic decisions - this day will explore how experts should information be presented to others by professionals so that they can make the best possible decisions, focusing on risk communication, which is the domain where most empirical data are available
4. Making decisions in an online world: who can we trust? – this day will explore social decision making biases, and their consequences on partner choice, as well as wider political decision making, with a focus on online environments
5. Decision education in the classroom and in society – this class will focus on decision making in the context of education, but also on how governments are using insights from decision-making for designing policy","The project week will include a combination of:
•	Interactive lectures, aimed to give participants a shared background on the state-of- the-art on the topic of Judgment and Decision Making
•	Hands on questionnaires and games, aimed to offer participants an opportunity to reflect on what their strengths, limitations and biases in decision making may be.
•	These activities will constitute the starting point of a series of group brainstorming sessions, where students will be prompted to share their experience and opinions, and to discuss limitations and biases to improve decision-making competence among university students. They will discuss the topics that such program should cover, its content structure, as well as the alternative delivery methods that could be used (e.g., university course, self-paced app, series of one-day workshops).
•	The results of these brainstorming sessions will be shared with the entire group of participants in the form of short PowerPoint presentations, followed by a plenary discussion.
•	As a final outcome of the project, participants will take part in a small group project (consisting in designing a programme in Decision Education) and present their work in front of the class.",Power Point presentations; video materials; online materials (e.g. https://alliancefordecisioneducation.org/ and https://www.decisioneducation.org/); exercise sheets; custom surveys; interactive visualizations; books,"Mercier, H. (2020). Not born yesterday: The science of who we trust and what we believe. Princeton University Press.
Hertwig, R., Pleskac, T. J., Pachur, T., & Center for Adaptive Rationality. (2019). Taming uncertainty. The MIT Press.
https://doi.org/10.7551/mitpress/11114.001.0001
Thaler, R. H., & Sunstein, C. R. (2008). Nudge: Improving decisions about health, wealth, and happiness. Yale University Press.
Caplan, B. (2007). The myth of the rational voter: Why democracies choose bad policies. Princeton University Press.",485,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4060803/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SZ0361,Projekt Weeks: German as a Foreign Language B2.2 -  Sustainability using the example of a national park,6.0,-,Always,-,TUM Language Center,-,-,-,-,-,-,-,-,,,,"In den Prüfungsleistungen werden die in der Modulbeschreibung angegebenen Lernergebnisse geprüft. Sie werden in Form von kompetenz- und handlungsorientierten (Portfolio-) Prüfungsaufgaben und E-Tests erbracht. Hilfsmittel sind erlaubt. Die Prüfungsleistungen sind in ihrer Gesamtheit so konzipiert, dass die Anwendung von Wortschatz und Grammatik, das Lese- und/oder Hörverstehen sowie die freie schriftliche Textproduktion geprüft werden. Wenn im Rahmen einer (Portfolio)Prüfungsaufgabe eine schriftlich ausgearbeitete Präsentation mit mündlichem Anteil erfolgt, z.B. auch in Form einer Audio- oder Videoaufnahme, werden einzelne Aspekte der Mündlichkeit zur Bewertung mit hinzugezogen. Hierzu beachten wir die Datenschutzgrundverordnung (DSGVO, Art. 12 -21).",No,No,"Dieses Modul richtet sich an alle Bachelor- und Master-Studierende der TUM, vor allem aber an Studierende der naturwissenschaftlichen Fächer sowie an Studierende der Management-Studiengänge. Sie haben Kenntnisse der Stufe B2.1, mindestens aber gesicherte Kenntnisse der Stufe B1.2 und bringen Interesse an projektorientiertem Fremdsprachenunterricht mit. Sie verfügen bereits über Methoden und Strategien des selbstgesteuerten Lernens von Fremdsprachen und möchten an fachorientierten, aktuellen Diskursen mit (natur)wissenschaftlichen Bezügen, die nicht unbedingt mit ihrem Studienfach zu tun haben, teilnehmen können. Sie sind darüber hinaus an das Arbeiten in multinational zusammengesetzten Teams gewöhnt und interessieren sich für interkulturelle Fragestellungen.","Die Studierenden können zu einem selbst gewählten Nachhaltigkeitsthema im Kontext eines Nationalparks selbständig und in Gruppen recherchieren sowie Fragen für ein Interview mit Personen mit entsprechender Expertise - auch unter Nutzung von KI - vorbereiten. Sie können die Interviews eigenverantwortlich durchführen und auswerten und ihre Vorgehensweise reflektieren, wobei ausgewiesener Wortschatz, Redemittel und Strukturen der Niveaustufe B2.2 ebenso zur Anwendung kommen wie eigenständig erarbeiteter Wortschatz und Strukturen mithilfe von KI. Und sie sind in der Lage, ihre Ergebnisse mit einer Lerngruppe aus einem anderen Sprachbereich zu teilen, sie gemeinsam ansprechend aufzubereiten und dann vor einem breiteren Publikum zu präsentieren. Dabei können sie nicht nur Strategien und Methoden der Mehrsprachigkeit anwenden, sondern auch interkulturelle Fragestellungen mit in den Blick nehmen.","In dieser semesterbegleitenden Lehrveranstaltung setzen sich die Studierenden mit dem Thema Nachhaltigkeit am Beispiel eines Nationalparks auseinander. Sie erweitern ihre zielsprachliche Projektkompetenz, indem sie Informationen zu einem selbst gewählten Unter-Thema recherchieren und in Gruppenarbeit und mithilfe von KI weiterführende Fragen für Interviews entwickeln, z.B. mit Personen mit entsprechender Expertise innerhalb und außerhalb der Universität, auf Zoom oder vor Ort im Nationalpark. Dabei trainieren sie wichtige Gesprächstechniken und verbessern ihre mündlichen Fähigkeiten wie auch ihre Mediationskompetenzen, wobei Wortschatz und Redemittel sowie Strukturen der Niveaustufe B2.2 zur Anwendung kommen und gefestigt werden.
Die Inhalte der Recherchen sind interdisziplinär angelegt, so dass die Studierenden über ihr eigenes Studienfach hinaus Einblick in allgemeinsprachliche Diskurse mit (natur)wissenschaftlichen Bezügen bekommen, z.B. der Biologie, der Geographie oder auch des Managements. Als konkrete Unter-Themen bieten sich an: Wasserwirtschaft, Tiermonitoring, Besuchermanagement usw.
Am Ende werten die Studierenden ihre Rechercheergebnisse aus und reflektieren ihre Vorgehensweise und Methoden. Sie vernetzen sich mit einer Arbeitsgruppe aus einem anderen Sprachbereich des TUM Sprachenzentrums, die zu ähnlichen Fragestellungen und zu einem Nationalpark eines anderen Landes recherchiert hat, und erarbeiten gemeinsam eine Präsentation, bei der neben interkulturellen Aspekten auch Mehrsprachigkeit eine Rolle spielt.In dieser semesterbegleitenden Lehrveranstaltung setzen sich die Studierenden mit dem Thema Nachhaltigkeit am Beispiel eines Nationalparks auseinander. Sie erweitern ihre zielsprachliche Projektkompetenz, indem sie Informationen zu einem selbst gewählten Unter-Thema recherchieren und in Gruppenarbeit und mithilfe von KI weiterführende Fragen für Interviews entwickeln, z.B. mit Personen mit entsprechender Expertise innerhalb und außerhalb der Universität, auf Zoom oder vor Ort im Nationalpark. Dabei trainieren sie wichtige Gesprächstechniken und verbessern ihre mündlichen Fähigkeiten wie auch ihre Mediationskompetenzen, wobei Wortschatz und Redemittel sowie Strukturen der Niveaustufe B2.2 zur Anwendung kommen und gefestigt werden.
Die Inhalte der Recherchen sind interdisziplinär angelegt, so dass die Studierenden über ihr eigenes Studienfach hinaus Einblick in allgemeinsprachliche Diskurse mit (natur)wissenschaftlichen Bezügen bekommen, z.B. der Biologie, der Geographie oder auch des Managements. Als konkrete Unter-Themen bieten sich an: Wasserwirtschaft, Tiermonitoring, Besuchermanagement usw.
Am Ende werten die Studierenden ihre Rechercheergebnisse aus und reflektieren ihre Vorgehensweise und Methoden. Sie vernetzen sich mit einer Arbeitsgruppe aus einem anderen Sprachbereich des TUM Sprachenzentrums, die zu ähnlichen Fragestellungen und zu einem Nationalpark eines anderen Landes recherchiert hat, und erarbeiten gemeinsam eine Präsentation, bei der neben interkulturellen Aspekten auch Mehrsprachigkeit eine Rolle spielt.","Die angestrebten Lernergebnisse sollen anhand von gezielten Inputs sowie von Partner- und Gruppenarbeitsphasen, in denen kooperative Lernformen überwiegen, erreicht werden. Dabei werden die Studierenden ermutigt, ihren eigenen Themenwünschen nachzugehen und eigenverantwortlich zu arbeiten. Ein Schwerpunkt des Moduls liegt auf der Vermittlung von kommunikativen Kompetenzen mithilfe von handlungsorientierten Aufgaben, die auch außerhalb des Kursraums zu bewältigen sind. Im Kursraum selbst dienen Simulationen und Rollenspiele dazu, Neu-Erarbeitetes und Gelerntes zu erproben und/ oder weiter zu festigen. Die regelmäßige Reflexion von Lernwegen und Methoden soll schließlich dazu führen, dass die Studierenden im Kontext von Fremdsprachenlernen selbständiger und souverän agieren können.","Für die Stufe B2.2 entwickeltes Lehr- und Lernmaterial sowie weiteres, multimedial gestütztes Lernmaterial mit Informationstexten, Audios und Videos, z.B. von den Webseiten eines Nationalparks oder von anderen ausgewählten Internetseiten.",-,486,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4057381/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10081,Project Weeks: Communicating Curiosity - A Science Outreach Pop-Up Exhibition,5.0,-,from Winter semester 2024/25,Schlingloff,Department of Educational Sciences,-,Bachelor/Master,SOPE,-,one semester,winter semester,English,-,150.0,75.0,75.0,"Students will be assessed based on a written assignment to be handed in after the end of the project (min 1000 words). This assignment should summarize the class discussions, group work, challenges and progress for each day of the course, and contain a section at the end where students reflect on the project after its conclusion and develop ideas for related future projects. With the assignment, students demonstrate their ability to engage critically and creatively with the research encountered during the class, chronicle their experience with the project and discuss its aims, development and outcome, and assess their own role and contributions to the exhibition.",No,No,English language fluency,"At the end of the module, students will have designed and implemented a mobile exhibition on the topic of curiosity. They will have gained practical experience in project management and teamwork, honed their skills in planning and executing an event, and applied their creativity, leadership and problem-solving abilities. As the aim of the module is to put together a science outreach event, students will have learned how to engage and connect with the local community and communicate research findings in an accessible way, by which they will also have gained experience in public speaking and presentation.","""Communicating Curiosity - A Science Outreach Pop-Up Exhibition"" is a project week aimed at fostering scientific curiosity within the community, Students will collaborate to design, plan and execute an engaging pop-up exhibition centered around the theme of curiosity in science. The exhibition will feature interactive displays, hands-on activities, and informative presentations. As part of the course, students will (1) decide on the contents of the exhibition and the formats for presenting them in an accessible and engaging way, (2) actually implement the components of the exhibit, (3) plan the event logistics, (4) present the exhibition in public spaces in Munich and present to and interact with visitors, and (5) reflect their role in the project as well as potential future projects. The project week consists of 8 days of preparation across the span of 4 weeks in February and March 2025, 1 day of putting on the pop-up exhibition, and 1 day of summarizing and reflecting on the experience. Students are expected to be present for the full day (9.30-17.30) on the following dates: 27.2., 28.2., 6.3., 7.3., 13.3., 14.3., 20.3., 21.3., 22.3., 27.3.""Communicating Curiosity - A Science Outreach Pop-Up Exhibition"" is a project week aimed at fostering scientific curiosity within the community, Students will collaborate to design, plan and execute an engaging pop-up exhibition centered around the theme of curiosity in science. The exhibition will feature interactive displays, hands-on activities, and informative presentations. As part of the course, students will (1) decide on the contents of the exhibition and the formats for presenting them in an accessible and engaging way, (2) actually implement the components of the exhibit, (3) plan the event logistics, (4) present the exhibition in public spaces in Munich and present to and interact with visitors, and (5) reflect their role in the project as well as potential future projects. The project week consists of 8 days of preparation across the span of 4 weeks in February and March 2025, 1 day of putting on the pop-up exhibition, and 1 day of summarizing and reflecting on the experience. Students are expected to be present for the full day (9.30-17.30) on the following dates: 27.2., 28.2., 6.3., 7.3., 13.3., 14.3., 20.3., 21.3., 22.3., 27.3.","Powerpoint lecture presentations, educational videos, student presentations, group work","Powerpoint lecture presentations, Moodle for interaction with the group and sharing materials, interactive demonstrations (computer & tablet), various media for the exhibition (to be decided by the students)",-,487,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4059254/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CLA21901,Roles. Clichés. Visions. Science and Technology in the View of Literature and Theater,2.0,-,Always,-,Academic Programs WTG,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,60.0,22.0,38.0,-,Yes,No,-,-,--,-,-,-,488,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1458680/206?$ctx=lang=en&$scrollTo=toc_details,Browser
BGU51011,Special Topics in timber engineering and building construction,3.0,-,from Winter semester 2013/14,-,Chair of Timber Engineering and Building Construction (Prof. Fink),-,Master,-,-,one semester,winter/summer semester,German,-,90.0,15.0,75.0,"The module’s achievement will be a written project work with an oral presentation.
The project work shows the ability of the students to understand functional coherences and to apply important aspects of structural design and building construction. The students will be able to analyze their results and to judge
own conceptual patterns and developments. The evaluation of the written thesis takes into account the way the research was conducted and degree the goals are reached, considering the type of the work and complexity of the task definition (own contribution, self-reliance, time management, innovation of work), the content of the work (correctness of content, appropriateness of selected methodology, comprehensibility of conclusions, critical assessment of results, reflection of open questions), and formal aspects (structuring of work, orthography, quality of layout and figures, distinction of own and other work, correct citations, up-to-dateness of references).  In the concluding presentation rhetorical and presentational skills, appearance and time management will be tested.",Yes,No,Basic lectures of the chair of timber structures and building construction,"In this module students learn how to summarize interdisciplinary knowledge with a specific task and to apply their accumulated knowledge. After passing this module students will be able to analyze questions in the field of building construction and timber structures independently as well as to use a scientific approach. They will be able to evaluate the results and to develop an own presentation. Furthermore they will learn important aspects of rhetoric, appearance, presentation style and time management.","There will always emerge specific questions in the field of praxis and research, considering the field of applied studies of building construction and timber structures. These specific topics will be developed and worked on independently or in small groups. The main tasks lies in the development of implementation, solution and further development of these questions regarding the field of building construction and timber structures.There will always emerge specific questions in the field of praxis and research, considering the field of applied studies of building construction and timber structures. These specific topics will be developed and worked on independently or in small groups. The main tasks lies in the development of implementation, solution and further development of these questions regarding the field of building construction and timber structures.","The project work will be accompanied by regular consultation hours with the advisor and elaborated personally at home. It includes literature research, employment of appropriate methods to perform the scientific work, and the written documentation and discussion of the results.","Presentations, poster, literature",Independent literature research,489,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/814573/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED120119,Urban Transitions Lab. Co-Designing Sustainable Change,3.0,-,from Summer semester 2024until Summer semester 2025,-,Chair of Sustainable Urbanism (Prof. Michaeli),-,Bachelor/Master,-,-,one semester,one-time,German/English,-,90.0,30.0,60.0,"The module examination takes the form of a project work.

1. project work (depending on the project: compendium of site information and useful data, analytical sketches, concept sketches, graphical representations of scenarios, strong visualisations of strategies that speak to an audience, explanatory text and diagrams, used references)
2. oral presentation
3. written component 

Point 1 accounts for 70%, points 2 and 3 for 15% of the overall assessment.

The examination performance is used to assess the extent to which students are e.g. able to
-	develop a deeper understanding of urban problems and their interdependencies
-	develop strategies and plan transitions to create more sustainable urban environments
-	engage in inter- and transdisciplinary project-collaboration and learn to develop strong and effective ideas and actions together with others",Yes,No,"Prospective students should possess experience in project work within their respective fields, demonstrate an interest in urban transformation, and be motivated to apply their knowledge to real-world problems while collaborating within interdisciplinary groups. Additionally, students should have the ability to effectively present complex content.","After successful participation in the ""Design Futuring"" project week, students will be able to
- develop a deeper understanding of urban problems and their interdependencies
- apply their respective specialist knowledge to real-world urban situations
- develop strategies and plan transitions to create more sustainable urban environments
- engage in inter- and transdisciplinary project-collaboration and learn to develop strong and effective ideas and actions together with others 
- reflect on the position of their expertise within the ecological and urban transformation discourse","1. Current and future urban challenges 
2. Multi-dimensional urban analysis, including stakeholder constellations and conflicting interests
3. Development of context-sensitive transformation strategies
4. Sustainability in the context of Urban Design and Development1. Current and future urban challenges 
2. Multi-dimensional urban analysis, including stakeholder constellations and conflicting interests
3. Development of context-sensitive transformation strategies
4. Sustainability in the context of Urban Design and Development","The teaching will comprise a mix of different formats and evolve in a step-by-step process along four phases:  
•	Phase 1 Introductory session (half day: introduction lecture, short inputs by invited experts about the topic and methods, discussion and development of specific questions for the site visit) + self-studies
•	Phase 2 Site visit (1 day), collection of material and information.
•	Phase 3 Collaborative urban strategy workshop (5 days: Development of transformation strategies, urban design concepts and sets of recommendations by interdisciplinary groups. The project week is supported by additional teaching staff.) 
Phase 4 Preparation, presentation and discussion (self-studies+half day: The groups complete their presentations individually. The project will conclude with the presentation of transformation strategies, urban design concepts, and recommendations. Experts and representatives from academia and urban practice are invited to discuss the projects with the student groups.)

Learning method: As part of the project week, participants will analyse complex stakeholder set-ups and develop context-sensitive transformation strategies and sets of recommendations for a specific case. During the project week, they will explore and apply data-driven methods of urban analysis, speculative thinking, critical reflection and co-design to address the multiple dimensions of urban change. In response to the tendency of sectoral thinking in urban practice and the general lack of opportunities for interdisciplinarity in the regular curriculum of many courses, we want to use the format of the project week designed as an exploratory design sprint to allow students to work in multidisciplinary teams, to pursue their interests as individuals and groups, to position themselves in the discourse of transformation, and to bring their expertise into the context of a real case. 
The project will conclude with a presentation to representatives from academia and urban practice, who will discuss the projects with the student groups.",Mixed Media and formats,"Giseke, Undine. Löw, Martina. Million, Angela. Misselwitz, Phillipp and Stollmann, Jörg (2021) Urban Design Methods. Berlin.

Kling, Norbert (2020) The Redundant City. A Multi-site Enquiry into Urban Narratives of Conflict and Change. Bielefeld.

Umweltbundesamt (German Environment Agency) (2023) Triple Inner Urban Development. Definition, Tasks and Opportunities for an Environmentally Oriented Urban Development. Dessau. https://www.umweltbundesamt.de/sites/default/files/medien/1410/publikationen/uba_hg_dreifacheinnenentwicklung_engl_bf.pdf",490,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4076289/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0038,"Technology, Economy, Society",3.0,-,Always,"Zetti, Daniela",Associate Professorship of History of Technology (Prof. Novick),-,Master,-,-,one semester,winter semester,German/English,-,90.0,30.0,60.0,"The assessment consists of a written assignment (7800-8200 characters) which is due at the end of the semester. Students interpret research literature with respect to sociotechnical problems to analyze the development of technology in social, economic, and political contexts.",No,Yes,The course does not require any special prior knowledge.,Students will be able to identify examples of the historical dimensions of processes of technifikaction and to understand the emergence and use of technical offerings in their concrete historical context.,"In this course, an approach to the political, economic, social and cultural dimensions of technology development is acquired. Selected historical and current examples will be analyzed to see how technical artifacts, processes and services emerge. Under which social conditions, in which economic situations and political contexts does technology emerge? How is it discussed, implemented, changed or discarded?In this course, an approach to the political, economic, social and cultural dimensions of technology development is acquired. Selected historical and current examples will be analyzed to see how technical artifacts, processes and services emerge. Under which social conditions, in which economic situations and political contexts does technology emerge? How is it discussed, implemented, changed or discarded?","Lecture, self-study, case studies, writing of smaller thematic papers.","electronic lecture notes, presentations","- Nelly Oudshoorn and Trevor Pinch (Eds.), How Users Matter. The Co-Construction of Users and Technology. Cambridge, Mass. 2005.
- Gernot Rieder, Judith Simon and Pak-Hang Wong, Mapping the Stony Road Towards Trustworthy AI, in: Pelillo, Marcello and Scantamburlo, Teresa (Eds.), Machines We Trust: Perspectives on Dependable AI. Cambridge, Mass. 2021, http://dx.doi.org/10.2139/ssrn.3717451 .
- Philip Scranton, Urgency, Uncertainty, and Innovation: Building Jet Engines in Postwar America, in: Management & Organizational History, 2006, 1:2, 127-157, https://doi.org/10.1177/1744935906064096.",495,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/582571/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0217,Advanced didactical topics for tutors,4.0,-,Always,-,Department of Educational Sciences,Exportmodul für die Informatik,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,120.0,30.0,90.0,-,Yes,No,-,-,--,-,-,-,496,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/735585/206?$ctx=lang=en&$scrollTo=toc_details,Browser
ED0341,STS 2: Philosophy of Science and Technology,5.0,v1,from Summer semester 2016,Wernecke,Associate Professorship of Philosophy and Philosophy of Science (Prof. Centrone),-,Master,STS 2,-,one semester,winter semester,English,-,150.0,45.0,105.0,"The examination consists of a research paper (1500 to 2000 words) and an in-class presentation (15 to 20 minutes). In the research paper, students demonstrate their ability to portray and discuss contemporary philosophical debates on key ideas in the philosophy of science and technology, and to identify, defend and criticize philosophical points of view. In the presentation, students demonstrate that they are able to communicate their analysis of the chosen topic clearly and concisely.
Grading: the research paper counts for 70%, the presentation for 30% of the final grade.",Yes,No,,"Upon completion of this module the students 
- understand a wide range of philosophical issues concerning science and technology
- are able to portray contemporary philosophical debates, for example on the nature of science and technology, on the relationship between science and technology, or on scientific methods and rationality
- have conceptual and analytical skills to identify, defend and criticize philosophical points of view
- are able to engage in philosophical argumentation on science and technology in a clear and structured manner","The module provides an introduction to central topics in the philosophy of science and technology. With a focus on the 20th century and contemporary approaches, it identifies major philosophical strands and schools, such as logical positivism, hypothetico-deductivism, social constructivism, the practice turn, and technoscience. Each session is dedicated to one of these specific topics. For each topic, the major positions are outlined, and the respective pros and cons are discussed. By the same token, some of the most influential authors in the field are introduced. Issues addressed are: 
- paradigms of scientific method - induction versus deduction
- structure of scientific theories - semantic versus syntactic views
- the relevance of scientific practice - the role of models and experiments
- theory change and scientific revolutions - rationalism versus relativism
- the science-technology relationship - autonomy of technology versus applied science
- the nature of technical artefacts 
- critical theories of technologyThe module provides an introduction to central topics in the philosophy of science and technology. With a focus on the 20th century and contemporary approaches, it identifies major philosophical strands and schools, such as logical positivism, hypothetico-deductivism, social constructivism, the practice turn, and technoscience. Each session is dedicated to one of these specific topics. For each topic, the major positions are outlined, and the respective pros and cons are discussed. By the same token, some of the most influential authors in the field are introduced. Issues addressed are: 
- paradigms of scientific method - induction versus deduction
- structure of scientific theories - semantic versus syntactic views
- the relevance of scientific practice - the role of models and experiments
- theory change and scientific revolutions - rationalism versus relativism
- the science-technology relationship - autonomy of technology versus applied science
- the nature of technical artefacts 
- critical theories of technology","A variety of methods are used to convey different perspectives on the content of the module. Lecture elements provide essential background information that enables the students to understand the relevant literature and engage in discussions. In preparation for each session, the students are given a reading assignment with questions they need to work on. The reading assignments comprise classical texts from the philosophy of science and technology, selected with the aim of familiarising students with influential authors and their styles of philosophical argumentation and writing. In-class presentations ensure that the students are able to summarize and adequately structure the contents of these readings. Of particular importance are in-class discussions that allow students to propose hypotheses, exchange arguments, and develop well-founded positions on exemplary questions from the philosophy of science and technology.","Texts, slide presentations, flipchart/whiteboard, worksheets, Moodle","Carnap, R. An Introduction to the Philosophy of Science. Dover, New York, 1995
Chalmers, A. F. What's this thing called science?, 3rd ed. Hackett, Indianapolis/Cambridge, 1999.
Dusek, V. Philosophy of Technology: An Introduction. Blackwell, Malden, 2006.
Ihde, D. The historical-ontological priority of technology over science. In Philosophy and Technology, P. T. Durbin and F. Rapp, Eds. Reidel, Dordrecht, 1983, pp. 235-252.
Kuhn, T. S. The Essential Tension. University of Chicago Press, Chicago, 1977, Ch. 9.",497,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1281035/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT000159,Business Plan - Basic Course (Business Idea and Market),6.0,UTUM_6ECTS,Always,Oliver,Chair of Entrepreneurship (Prof. Patzelt),-,Bachelor/Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The examination consists of the preparation of a semester-long project work (business idea) as a team. It consists of the written preparation of a business plan (7-10 pages in length, with specified topic contributions per team member, accounting for 30% of the assessment) and a final presentation (duration: 8 minutes pitch and 8 minutes Q&A, with equaly distributed presentation parts per team member, accounting for 70% of the assessment). The presentation contains, among other things, the most important learnings from the customer interviews and the demonstration of an interactive prototype of the developed product or service. 

The project work assesses the extent to which students can identify and implement business opportunities. The business plan presents in a precise and structured way how well the participants have analyzed and understood the needs of their customer. The business plan also examines whether students are able to identify markets for their business idea and analyze market entry opportunities and market positioning. The preparation of initial sales and cost estimates shows whether the students are able to develop a viable business model. In the final presentation, each participant must explain their understanding of this content and defend it in front of the expert jury.",Yes,No,"- Knowledge: No special requirements, willingness to participate
- Abilities: Identifying opportunities; team work; communication; commitment; reliability - Skills: openness; analytical thinking; visual thinking; self-motivation","After participating in the module, students are able to
- Identify a real customer problem through feedback, field studies and contextual observations and create a customer benefit with the proposed solution idea
- Recognize opportunities and present prototypical business concepts, e.g. with the help of a business plan
- Evaluate ideas and recognize business opportunities
- Segment markets and identify and characterize potential niche markets
- Develop a business model that includes a clear positioning in the market and a clear differentiation from competitors
- Present their business idea convincingly and based on market data
- Demonstrate the product or service using an interactive prototype","In iterative, feedback-driven steps, participants learn to think through and present a business idea for solving a customer problem in a structured manner in the form of a business plan. The basic chapters of a business plan listed below are developed for this purpose. The participants network with people from the start-up environment at TUM.

- Brief description of the business idea in the executive summary
- Detailed description of the understanding of the problem, including insights gained from interviews into the needs structure of paying customers and non-paying users
- Detailed description of the developed solution, including documentation of the prototype implementation and substantiation with feedback gained from customers and users
- Comprehensive analysis of the respective market, entry opportunities, competitive analysis and positioning in the market
- Development of a business model suitable for the business idea, including initial sales and cost estimates as well as approaches for successful legal protectionIn iterative, feedback-driven steps, participants learn to think through and present a business idea for solving a customer problem in a structured manner in the form of a business plan. The basic chapters of a business plan listed below are developed for this purpose. The participants network with people from the start-up environment at TUM.

- Brief description of the business idea in the executive summary
- Detailed description of the understanding of the problem, including insights gained from interviews into the needs structure of paying customers and non-paying users
- Detailed description of the developed solution, including documentation of the prototype implementation and substantiation with feedback gained from customers and users
- Comprehensive analysis of the respective market, entry opportunities, competitive analysis and positioning in the market
- Development of a business model suitable for the business idea, including initial sales and cost estimates as well as approaches for successful legal protection","Seminar style: The lecturers are entrepreneurs, serial founders, coaches and former managing directors.
- Interdisciplinarity: Participants form cross-study teams to ensure a target-oriented mix of expertise and skills in the team.
- Action Based Learning: All participants are encouraged to take action and learn through experience and an iterative approach.
- Learning-by-doing: Each team pursues a real business idea or a business idea chosen for the seminar (no case study). Particular attention is paid to really understanding the customer, for example through interviews, observation or expert discussions.
- Prototyping: The teams use interactive prototypes to develop their business idea and make it tangible.
- Online networking: The work in the seminar is accompanied by online tools such as Google Classroom, Slack and Zoom to support the work in the team.
- Peer-to-peer pitching: Each team pitches its idea briefly and succinctly to other teams on the course and receives feedback from them. In this way, the teams get to know different business models and business design approaches.
- Presentation training: Each team presents its business idea several times and receives verbal feedback on presentation style and content.","- Videos
- Slides
- Handouts via the Learning Management System
- Slack as a communication solution for efficient teamwork","- Horowitz, Ben (2014): The Hard thing About Hard Things, HarperBusiness
- Kawasaki, Guy (2004): The Art of the Start, Penguin Publishing Group
- Moore, Geoffrey A. (2002).: Crossing the Chasm, HarperCollins
- Osterwalder, Alexander / Pigneur, Yves (2010): Business Model Generation: A Handbook for Visionaries, Game Changers, and Challengers, John Wiley & Sons
- Ries, Eric (2011): The Lean Startup, Penguin Books Limited
- Thiel, Peter (2014): Zero to One: Notes on Startups, or How to Build the Future, Crown Business
- Timmons, Jeffry A. / Spinelli, Stephen (2009): New Venture Creation,7thedition, McGraw Hill Professional",498,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4079368/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10057,Psychology of Learning and Instructional Design of AI-based Systems,6.0,-,from Winter semester 2023/24,"Seidel, Christina",Department of Educational Sciences,-,-,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module examination takes place on the basis of a written exam lasting 60 minutes. The exam consists of a test consisting of single  choice items as well as open tasks. The tasks require the correct reproduction of definitions, concepts and psychological models, the application of psychological concepts to solve problems and to provide examples, knowledge of important research studies and research results in relevant content areas, as well as the transfer to new application contexts. The tasks in the test vary these requirements. They ensure that the content conveyed is not only reproduced, but that there is a deeper understanding based on a elaborated and organized knowledge structure that can be used for further applications. Aids are not permitted.",No,Yes,-,"After completing the module, students will be able to understand important psychological foundations of learning and effective instructional design for AI-based systems. In particular, they will be able to after completing the module
(1) to know about important cognitive learning theories in psychology and to apply them to AI-based systems to explain learning phenomena.
(2) to differentiate between relevant psychological learning prerequisites of people and to develop an understanding of the interaction between humans and AI-based systems.
(3) To acquire a structured overview of psychological instructional design principles and to apply these principles to practical exercises.
(4) Acquire basic knowledge in the area of constructing questionnaires and tests for user evaluations and research projects, as well as the ability to apply this knowledge to practice examples.
(5) Through social exchange in the exercises, students acquire communication and argumentation skills. They can practice critical thinking by dealing with solutions from different teams.","In this module, students learn fundamental concepts from psychology and instructional design. The subject-specific content includes the basics of human learning and cognitive psychology, central models for effective instructional design, as well as relevant requirements for interactions with AI-based (learning) environments. Students also learn the basics of evaluation and empirical educational research to measure the effectiveness of AI-based systems. To do this, they learn the basics of questionnaire and test construction and apply these to specific measuring instruments.
From a methodological point of view, students sharpen their self-regulation skills and learn about various learning strategies as important learning prerequisites for successful learning, which they can also use for their further studies. By developing solutions in groups in the tutorial and by presenting the results they have developed, they develop their interdisciplinary skills in critical-reflective thinking, cooperative work and social learning.In this module, students learn fundamental concepts from psychology and instructional design. The subject-specific content includes the basics of human learning and cognitive psychology, central models for effective instructional design, as well as relevant requirements for interactions with AI-based (learning) environments. Students also learn the basics of evaluation and empirical educational research to measure the effectiveness of AI-based systems. To do this, they learn the basics of questionnaire and test construction and apply these to specific measuring instruments.
From a methodological point of view, students sharpen their self-regulation skills and learn about various learning strategies as important learning prerequisites for successful learning, which they can also use for their further studies. By developing solutions in groups in the tutorial and by presenting the results they have developed, they develop their interdisciplinary skills in critical-reflective thinking, cooperative work and social learning.","The module consists of a lecture and an associated exercise. The topics of the lecture are presented through slides and presentations in the lecture hall or in a hybrid format. In addition, all content is provided in a Moodle course. In an associated exercise, the contents of the lecture are discussed and applied to practical examples. Learning activities on the part of the students consist of connecting the content of the lecture with their previous knowledge and elaborating and structuring the acquired knowledge using examples and applications. Students will acquire the content of the module by taking part in the lecture and working through the accompanying materials on Moodle. In the associated exercise, they discuss content in social groups, apply this to exercise examples, present their results and critically discuss the results achieved.","The content is conveyed using presentation slides, digital tools, exercises, books and scientific articles.","Du Boulay, B., Mitrovic, A. & Yacef, K. (2023). Handbook of Artificial Intelligence in Education. Edward Elgar Publishing.

Chen, C., Hung, P., Eğrioğlu, E. & Hsiao, K. (2022). Deep learning in Adaptive Learning: Educational Behavior and Strategy. Frontiers Media SA.

Seidel, T. & Krapp, A. (2014). Pädagogische Psychologie.",499,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3771355/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT10069,Introduction to Psychology and Human Behavior,3.0,-,from Winter semester 2023/24,"Holzberger, Doris",Department of Educational Sciences,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,-,Yes,No,-,-,--,-,-,-,500,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3846769/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT6320000,Advisor Advanced Training,6.0,-,from Winter semester 2023/24,"Wollherr, Dirk",Department of Computer Engineering,-,Master,-,-,two semesters,winter/summer semester,German,-,180.0,120.0,60.0,"The grade is determined from several examinations, which are held in the form of presentations (approx. 15 minutes) followed by a discussion (approx. 15 minutes). The examinations are held in the following areas:

- Group leadership: Analysis and evaluation of the group dynamic development over the entire project period and scientific classification. [Weighting: 25% share of the module grade]

- Project planning competence: target agreement and target completion presentation for detailed analysis of the planning and assessment of success [weighting: 25% share of the module grade]

- Process reflection: final presentation on the final day with analysis of group dynamic processes based on the previously implemented and learned soft skills. [weighting: 50% of the module grade]",No,No,"• Advisor in project or group management in the CIT's advisor program
• Students at the CIT, at least 5th semester Bachelor's or Master's degree
• Interest and aptitude for managerial and team leadership tasks","After successful completion of the module the students have acquired the following competences:
• Differentiated understanding of leadership
• Clear communication as
• Team leadership skills
• Self-direction and self-reflection
• Development as a person and personality
•	Responsibility
• Extensive pool of methods for group management and crisis management
• Support for motivation through target agreements and creation of meaning
• Acceptable, clear delegation of tasks and responsibility for processes and results
• Targeted project control
• Assuming technical responsibility in complex projects
• Moderation of demanding processes
• Design meeting culture effectively and efficiently","The module consists of professional seminars lasting several days (mostly weekend block seminars), in which the participants are taught the following content on a theoretical basis:
• Guidance and support in the planning, design and management of workshops
• Meaningful assignment of tasks and areas of responsibility
• Moderation techniques, roles in moderation
• Supervision understanding and S. techniques
• Make interface management effective
• Individual support when creating tasks and assuming responsibility
• Individual, personal coaching with target and solution developmentThe module consists of professional seminars lasting several days (mostly weekend block seminars), in which the participants are taught the following content on a theoretical basis:
• Guidance and support in the planning, design and management of workshops
• Meaningful assignment of tasks and areas of responsibility
• Moderation techniques, roles in moderation
• Supervision understanding and S. techniques
• Make interface management effective
• Individual support when creating tasks and assuming responsibility
• Individual, personal coaching with target and solution development","• Interactive transfer of knowledge and skills
• Theoretical inputs
• Personal teaching discussions
• Directions
• Development of content in workshops
• Reflection and feedback
• Experience and action-oriented methodology
• Coaching - Supervision","The following types of media are used:
• Presentations
• Moderation methods (FC, MP, cards...)
• Workshop and similar formats
• Power points
• Team tasks and team exercises
• Online communication","The following literature is recommended for the seminar:
• Hartmann, Funk, Nietmann: Präsentieren, Präsentationen, Beltz
• Gebert / von Rosenstiel: Organisationspsychologie
• Rosenberg, M.: Gewaltfreie Kommunikation
• Rubner & Rubner: Unterwegs zur funktionierenden Gruppe
• Schulz v. Thun: Miteinander reden, Band 1-3, Rowohlt
• Schulz von Thun: Kommunikationspsychologie für Führungskräfte
• Stahl, Eberhard: Dynamik in Gruppen
• Watzlawik: Wie wirklich ist die Wirklichkeit
• Weidenmann: 100 Tipps und Tricks für Pinnwand und Flipchart",501,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3567443/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86062,AI Regulation & Law (3 ECTS),3.0,-,from Winter semester 2024/25,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"The module exam is a written examination.
The written examination will cover topics from the field of AI regulation (especially AI legal regimes in and outside Europe). The examination will last 60 minutes and will consist of various questions (essay and/or multiple choice).
The aim of the written examination is to demonstrate knowledge about the impact of AI on different areas. With the processing of the examination students demonstrate that they are able to remember and name the risks and benefits of using AI. Furthermore, they will show that they are able to identify and explain important questions and current challenges in the field of AI law and regulation on a basic level.",Yes,No,none,"After the completition of the modules the students will be able to remember the foundations and concepts of the regulation of AI in general. Furthermore, they will be able to recognize possible applications and risks of using AI technologies.","The module covers the following topics.
Introduction to European AI Law; Overview of AI legal developments in the US, UK and other countries; Legal review of General Purpose AI Technology; AI in different sectors (e.g. contracts, healthcare and medicine, HR, traffic/automotives; discrimination, equality, fairness; transparency and explainabilty of algorithms.The module covers the following topics.
Introduction to European AI Law; Overview of AI legal developments in the US, UK and other countries; Legal review of General Purpose AI Technology; AI in different sectors (e.g. contracts, healthcare and medicine, HR, traffic/automotives; discrimination, equality, fairness; transparency and explainabilty of algorithms.","The module consists of a master´s lecture. The topics of the module are presented via slides and presentations in the lecture hall or a hybrid format. The teaching format aim to stimulate discussions based on presentations and questions. In addition the module will equip students with the necessary skills to remember and discuss current research on AI law and regulation on a basic level, as well as to communicate their effectiveness and implications, and shed light on their impact on society. During the lecture parts, new topics will be presented and explained.",PowerPoint presentations,"Artificial intelligence act (of the EU),
Link: https://www.europarl.europa.eu/RegData/etudes/BRIE/2021/698792/EPRS_BRI(2021)698792_EN.pdf",502,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4106581/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86063,AI Regulation & Law (6 ECTS),6.0,-,from Winter semester 2024/25,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The module exam is a written examination.
The written examination will cover topics from the field of AI regulation (especially AI legal regimes in and outside Europe). The examination will last 120 minutes and will consist of various questions (essay and/or multiple choice).
The aim of the written examination is to demonstrate knowledge about the impact of AI on different areas. With the processing of the examination students demonstrate that they are able to remember and name the risks and benefits of using AI. Furthermore, they will show that they are able to compare, use and explain important questions and current challenges in the field of AI law and regulation on a intermediate level.",Yes,No,none,"After the completition of the module the students will be able to understand the foundations and concepts of the regulation of AI in general. Furthermore, they will be able to illustrate possible applications and risks of using AI technologies.","The module covers the following topics.
Introduction to European AI Law; Overview of AI legal developments in the US, UK and other countries; Legal review of General Purpose AI Technology; AI in different sectors (e.g. contracts, healthcare and medicine, HR, traffic/automotives; discrimination, equality, fairness; transparency and explainabilty of algorithms.The module covers the following topics.
Introduction to European AI Law; Overview of AI legal developments in the US, UK and other countries; Legal review of General Purpose AI Technology; AI in different sectors (e.g. contracts, healthcare and medicine, HR, traffic/automotives; discrimination, equality, fairness; transparency and explainabilty of algorithms.","The module consists of a master´s lecture and associated case studies. The topics of the module are presented via slides and presentations in the lecture hall or a hybrid format. Both the teaching format and the associated in-class exercises aim to stimulate discussions based on presentations and questions. In addition the module will equip students with the necessary skills to understand and critically discuss current research on AI law and regulation, as well as to communicate their effectiveness and implications, and shed light on their impact on society. During the lecture parts, new topics will be presented and explained. In the in-class exercises, these concepts will be implemented and applied in case studies.",PowerPoint presentations,"Artificial intelligence act (of the EU),
Link: https://www.europarl.europa.eu/RegData/etudes/BRIE/2021/698792/EPRS_BRI(2021)698792_EN.pdf",503,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4106608/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86075,Algorithms & Fundamental Rights,6.0,-,Always,Pfeffer,Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The examination method for the module will consist of a 90-minute final exam. 
Final Exam: The exam will assess the students’ understanding of the impact of algorithms on fundamental rights within the European context and beyond. Additionally, it will evaluate their knowledge of the philosophical foundations and ethical frameworks governing algorithms.",Yes,No,"An interest in the intersection of technology, law, and human rights, as well as a willingness to engage with interdisciplinary content are assumed. No prior knowledge of legal or philosophical concepts is required, as these will be covered during the course.","At the end of this module, students will have acquired a foundational understanding of the impact of algorithms on fundamental rights. They will gain insights into the philosophical foundations that govern the use of algorithms, focusing on principles such as autonomy and the rule of law. The module is designed to enable students to critically analyze the interaction between algorithmic systems and fundamental rights. To do so, students will be taught the underlying motivations for core algorithmic concepts, such as fairness, bias, transparency, and privacy. Students will develop the ability to formulate their own hypotheses about the implications of algorithmic decisions on privacy, equality, and justice, and to reflect on the broader societal impacts of their work in technology.","The module will cover the following contents:

Introduction to Algorithms and Fundamental Rights: 
This section introduces the basic concepts of algorithms and fundamental rights, focusing on how algorithmic decisions can impact societal norms.
Algorithmic Decision-Making: 
An exploration of how algorithms are used in decision-making processes, including examples from various sectors such as criminal justice, employment, and social services.
Philosophical Foundations of Fundamental Rights I - Autonomy and Algorithms: 
This session delves into the concept of autonomy and its relationship with algorithms. It explores how algorithmic systems can support or undermine individual autonomy, highlighting ethical considerations and philosophical debates.
Philosophical Foundations of Fundamental Rights II - Rule of Law: 
This session emphasizes the principle of the rule of law in the context of algorithmic systems. It examines how algorithms can be aligned with or deviate from the rule of law, discussing the implications for justice and governance.
Accountability: 
This section deals with the principles of transparency and accountability in algorithmic systems. It explores methods for ensuring transparency and accountability in practice.
Case Studies in Algorithmic Impact: 
Detailed case studies illustrating the real-world impact of algorithms on fundamental rights, fostering critical analysis and discussion among students.
Future Directions and Solutions: 
The module concludes with a discussion of emerging trends and potential solutions to address the challenges posed by algorithmic systems to fundamental rights, with an emphasis on strategies to uphold standards and societal values.The module will cover the following contents:

Introduction to Algorithms and Fundamental Rights: 
This section introduces the basic concepts of algorithms and fundamental rights, focusing on how algorithmic decisions can impact societal norms.
Algorithmic Decision-Making: 
An exploration of how algorithms are used in decision-making processes, including examples from various sectors such as criminal justice, employment, and social services.
Philosophical Foundations of Fundamental Rights I - Autonomy and Algorithms: 
This session delves into the concept of autonomy and its relationship with algorithms. It explores how algorithmic systems can support or undermine individual autonomy, highlighting ethical considerations and philosophical debates.
Philosophical Foundations of Fundamental Rights II - Rule of Law: 
This session emphasizes the principle of the rule of law in the context of algorithmic systems. It examines how algorithms can be aligned with or deviate from the rule of law, discussing the implications for justice and governance.
Accountability: 
This section deals with the principles of transparency and accountability in algorithmic systems. It explores methods for ensuring transparency and accountability in practice.
Case Studies in Algorithmic Impact: 
Detailed case studies illustrating the real-world impact of algorithms on fundamental rights, fostering critical analysis and discussion among students.
Future Directions and Solutions: 
The module concludes with a discussion of emerging trends and potential solutions to address the challenges posed by algorithmic systems to fundamental rights, with an emphasis on strategies to uphold standards and societal values.","This module is structured to provide a comprehensive understanding through a blend of theoretical instruction and practical application. Each week, the course will consist of two types of sessions:
Lectures: 
During the lectures, the focus will be on abstract and theoretical aspects of the topics. Students will receive in-depth instruction on the philosophical foundations of fundamental rights, including principles such as self-determination and the rule of law. These sessions will cover ethical considerations and the societal impacts of algorithms, using a variety of case studies and hypothetical scenarios to illustrate key points.
Exercises: 
The exercise sessions will reinforce the material covered in lectures. Students will engage in hands-on activities, including algorithm analysis, data handling challenges, and exploring technical solutions to the issues discussed in the lectures. These sessions will provide practical experience in applying fundamental principles to real-world algorithmic systems, enhancing students’ ability to critically assess and address the challenges of algorithmic decision-making.",PowerPoint,"""Human Rights in the Age of Platforms"" by Rikke Frank Jørgensen
""The People Vs Tech: How the Internet Is Killing Democracy (and How We Save It)"" by Jamie Bartlett
""The Human Imperative"" by Paul Nemitz and Matthias Pfeffer",504,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025090/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86097,Aligning Generative AI to Social Values (3 ECTS),3.0,-,from Summer semester 2024,"Papakyriakopoulos, Orestis",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module examination consists of a written exam (Multiple Choice Test) (60 minutes). With the Multiple Choice Test, the students show their understanding of the principles and frameworks for aligning generative AI systems with societal values and ethical considerations. They further demonstrate their ability to critically evaluate the impact of generative AI technologies on different social dimensions and to understand the challenges and complexities of balancing innovation with ethical responsibility in deploying of generative AI.",Yes,No,"Basic knowledge of machine learning concepts and algorithms is recommended, though not strictly required. The same applies for coding skills. An interest in ethics, social science, and policy aspects related to technology would be advantageous for engaging with the course content.","Upon successful completion of this module, students will:
Develop a thorough understanding of the principles and frameworks for aligning generative AI systems with societal values and ethical considerations.
Be able to critically evaluate the impact of generative AI technologies on various social dimensions, including fairness, accountability, transparency, and inclusivity.
Acquire skills to identify and mitigate biases in generative AI models, ensuring more equitable and just outcomes.
Understand the challenges and complexities of balancing innovation with ethical responsibility in the deployment of generative AI.","This module explores the intersection of generative AI and social values, focusing on ethical considerations, bias mitigation, and the development of AI systems that reflect diverse societal values. Students will engage with theoretical frameworks, practical tools, and case studies to understand and address the ethical challenges in generative AI.
Course Content:
1. Introduction to Generative AI and Social Values
Overview of generative AI technologies
Importance of aligning AI with societal values
Ethical principles in AI (fairness, accountability, transparency, inclusivity)
2. Ethical Frameworks and Principles
Key ethical theories and their application to AI
Existing frameworks for ethical AI
Case studies on ethical AI failures and successes
3. Understanding and Mitigating Bias in Generative AI
Types and sources of bias in AI models
Methods for detecting and mitigating bias
Practical exercises in bias identification and mitigation
4. Transparency and Accountability in AI
Importance of transparency in AI systems
Techniques for improving transparency
Ensuring accountability in AI deployment
5. Auditing and Red Teaming Approaches
Introduction to auditing AI systems
Red teaming methodologies for stress-testing AI models
Hands-on projects in auditing and red teaming generative AI
6. Aligning Large Language Models with Societal Values
Challenges specific to large language models (e.g., GPT, BERT)
Techniques for aligning language models with ethical standards
Practical projects in fine-tuning and aligning language models
7. Balancing Innovation and Ethical Responsibility
Case studies on innovation vs. ethical dilemmas in AI
Strategies for responsible AI development
Policy implications and regulatory considerationsThis module explores the intersection of generative AI and social values, focusing on ethical considerations, bias mitigation, and the development of AI systems that reflect diverse societal values. Students will engage with theoretical frameworks, practical tools, and case studies to understand and address the ethical challenges in generative AI.
Course Content:
1. Introduction to Generative AI and Social Values
Overview of generative AI technologies
Importance of aligning AI with societal values
Ethical principles in AI (fairness, accountability, transparency, inclusivity)
2. Ethical Frameworks and Principles
Key ethical theories and their application to AI
Existing frameworks for ethical AI
Case studies on ethical AI failures and successes
3. Understanding and Mitigating Bias in Generative AI
Types and sources of bias in AI models
Methods for detecting and mitigating bias
Practical exercises in bias identification and mitigation
4. Transparency and Accountability in AI
Importance of transparency in AI systems
Techniques for improving transparency
Ensuring accountability in AI deployment
5. Auditing and Red Teaming Approaches
Introduction to auditing AI systems
Red teaming methodologies for stress-testing AI models
Hands-on projects in auditing and red teaming generative AI
6. Aligning Large Language Models with Societal Values
Challenges specific to large language models (e.g., GPT, BERT)
Techniques for aligning language models with ethical standards
Practical projects in fine-tuning and aligning language models
7. Balancing Innovation and Ethical Responsibility
Case studies on innovation vs. ethical dilemmas in AI
Strategies for responsible AI development
Policy implications and regulatory considerations","The module consists of a lecture. 
In the lecture students will be introduced to key concepts in Generative AI & Social Values. During the lecture, there will be slides and presentations, which will describe different parts key concepts. Students will  answer questions and perform short excercises, through which they can prove their understanding of the course content.","computer, presentations, videos","Gabriel, Iason. ""Artificial intelligence, values, and alignment."" Minds and machines 30, no. 3 (2020): 411-437.

Ryan, Michael J., William Held, and Diyi Yang. ""Unintended Impacts of LLM Alignment on Global Representation."" arXiv preprint arXiv:2402.15018 (2024).

Casper, Stephen, Xander Davies, Claudia Shi, Thomas Krendl Gilbert, Jérémy Scheurer, Javier Rando, Rachel Freedman et al. ""Open problems and fundamental limitations of reinforcement learning from human feedback."" arXiv preprint arXiv:2307.15217 (2023).

Shi, Weiyan, Ryan Li, Yutong Zhang, Caleb Ziems, Raya Horesh, Rogério Abreu de Paula, and Diyi Yang. ""CultureBank: An Online Community-Driven Knowledge Base Towards Culturally Aware Language Technologies."" arXiv preprint arXiv:2404.15238 (2024).",505,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4096730/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86074,Aligning Generative AI to Social Values (6 ECTS),6.0,-,from Summer semester 2024,"Papakyriakopoulos, Orestis",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module examination consists of a project work. The project involves group work, a written report (10-15 pages), and a final presentation (5 minutes). The written report counts for 90 % of the module grade, and the presentation for 10 %. The project will be worked on in teams, and a responsible machine learning project will be pursued in a key area of their interest. Through the project, students will demonstrate their ability to identify and mitigate biases in generative AI models and showcase their skill in designing and implementing AI models, prioritizing ethical standards, and reflecting diverse social values. With the written report, the students show their understanding of the principles and frameworks for aligning generative AI systems with societal values and ethical considerations. They further demonstrate their ability to critically evaluate the impact of generative AI technologies on different social dimensions. Through the presentation, students prove that they are able to present and discuss their results to a specialist audience understandably and appropriately.",Yes,No,"Basic knowledge of machine learning concepts and algorithms is recommended, though not strictly required. The same applies for coding skills. An interest in ethics, social science, and policy aspects related to technology would be advantageous for engaging with the course content.","Upon successful completion of this module, students will: Develop a thorough understanding of the principles and frameworks for aligning generative AI systems with societal values and ethical considerations. Be able to critically evaluate the impact of generative AI technologies on various social dimensions, including fairness, accountability, transparency, and inclusivity. Acquire skills to identify and mitigate biases in generative AI models, ensuring more equitable and just outcomes.Gain practical experience in designing and implementing AI models that prioritize ethical standards and reflect diverse social values.Understand the challenges and complexities of balancing innovation with ethical responsibility in the deployment of generative AI. Learn to collaborate effectively in interdisciplinary teams to conceptualize, design, and execute projects focused on aligning AI with societal needs.","This module explores the intersection of generative AI and social values, focusing on ethical considerations, bias mitigation, and the development of AI systems that reflect diverse societal values. Students will engage with theoretical frameworks, practical tools, and case studies to understand and address the ethical challenges in generative AI.
Course Content:
1. Introduction to Generative AI and Social Values
Overview of generative AI technologies
Importance of aligning AI with societal values
Ethical principles in AI (fairness, accountability, transparency, inclusivity)
2. Ethical Frameworks and Principles
Key ethical theories and their application to AI
Existing frameworks for ethical AI 
Case studies on ethical AI failures and successes
3. Understanding and Mitigating Bias in Generative AI
Types and sources of bias in AI models
Methods for detecting and mitigating bias
Practical exercises in bias identification and mitigation
4. Transparency and Accountability in AI
Importance of transparency in AI systems
Techniques for improving transparency
Ensuring accountability in AI deployment
5. Auditing and Red Teaming Approaches
Introduction to auditing AI systems
Red teaming methodologies for stress-testing AI models
Hands-on projects in auditing and red teaming generative AI
6. Aligning Large Language Models with Societal Values
Challenges specific to large language models (e.g., GPT, BERT)
Techniques for aligning language models with ethical standards
Practical projects in fine-tuning and aligning language models
7. Balancing Innovation and Ethical Responsibility
Case studies on innovation vs. ethical dilemmas in AI
Strategies for responsible AI development
Policy implications and regulatory considerationsThis module explores the intersection of generative AI and social values, focusing on ethical considerations, bias mitigation, and the development of AI systems that reflect diverse societal values. Students will engage with theoretical frameworks, practical tools, and case studies to understand and address the ethical challenges in generative AI.
Course Content:
1. Introduction to Generative AI and Social Values
Overview of generative AI technologies
Importance of aligning AI with societal values
Ethical principles in AI (fairness, accountability, transparency, inclusivity)
2. Ethical Frameworks and Principles
Key ethical theories and their application to AI
Existing frameworks for ethical AI 
Case studies on ethical AI failures and successes
3. Understanding and Mitigating Bias in Generative AI
Types and sources of bias in AI models
Methods for detecting and mitigating bias
Practical exercises in bias identification and mitigation
4. Transparency and Accountability in AI
Importance of transparency in AI systems
Techniques for improving transparency
Ensuring accountability in AI deployment
5. Auditing and Red Teaming Approaches
Introduction to auditing AI systems
Red teaming methodologies for stress-testing AI models
Hands-on projects in auditing and red teaming generative AI
6. Aligning Large Language Models with Societal Values
Challenges specific to large language models (e.g., GPT, BERT)
Techniques for aligning language models with ethical standards
Practical projects in fine-tuning and aligning language models
7. Balancing Innovation and Ethical Responsibility
Case studies on innovation vs. ethical dilemmas in AI
Strategies for responsible AI development
Policy implications and regulatory considerations","The module consists of a lecture and a seminar.
In the lecture students will be introduced to key concepts in Generative AI & Social Values. During the lecture, there will be slides and presentations, which will describe different parts key concepts. Students will be answer questions and perform short excercises, through which they can prove their understanding of the course content. In the seminar, students will have to apply the learned concepts in practice. They will form groups, learn how to work as teams, and answer a specific research question on aligning Generative AI models to social values. Through the final presentation and the delivery of the project they will prove their expertise in AI Alignment.","computer, presentations, videos","Gabriel, Iason. ""Artificial intelligence, values, and alignment."" Minds and machines 30, no. 3 (2020): 411-437.

Ryan, Michael J., William Held, and Diyi Yang. ""Unintended Impacts of LLM Alignment on Global Representation."" arXiv preprint arXiv:2402.15018 (2024).

Casper, Stephen, Xander Davies, Claudia Shi, Thomas Krendl Gilbert, Jérémy Scheurer, Javier Rando, Rachel Freedman et al. ""Open problems and fundamental limitations of reinforcement learning from human feedback."" arXiv preprint arXiv:2307.15217 (2023).

Shi, Weiyan, Ryan Li, Yutong Zhang, Caleb Ziems, Raya Horesh, Rogério Abreu de Paula, and Diyi Yang. ""CultureBank: An Online Community-Driven Knowledge Base Towards Culturally Aware Language Technologies."" arXiv preprint arXiv:2404.15238 (2024).",506,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025086/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL10500,Comparative Politics - Fundamentals,6.0,bis SoSe2025,from Winter semester 2016/17until Summer semester 2025,"Wurster, Stefan",Department of Governance,-,Bachelor,-,Basic modul,one semester,winter semester,English,-,180.0,60.0,120.0,"The module exam consists of a 120-minute written exam in which students are expected to recall and remember basic theories, methods and empirical findings of Comparative Analysis of Political Systems without any aids (international students are allowed to use a German dictionary). Both knowledge and transfer questions will be asked, which must be answered with the help of independent formulations. Half of the exam content consists of questions related to the content of the lecture and half of questions related to the content of the exercise.",Yes,No,-,"After participating in the module’s courses, students will be able to: define basic terms, concepts, theories and questions found in comparative political system analysis; to use basic scientific methods of comparative analysis; to identify structural elements of political systems; to understand fundamental operating logics of political systems; and to be able to identify the general conditions and factors determining system dynamics of political communities; and to reconsider criteria to the evaluation of political processes in different contexts.","The module introduces the fundamentals of comparative analysis  of political systems. It focuses on the main concepts, theories and methods of comparative analysis of political systems. Different political system types, and particularly democracies, will be systematically presented and analyzed comparatively in terms of their structures and institutions (polity), actors and processes (politics) and policies and policy content (policies). The content emphasized is thus: the methods of comparison, system theory, comparative political regimes, majority and consensual democracies, parliamentary and presidential democracies, veto players theory, electoral and party systems, political values and attitudes, interest group and social movement influence, and policy analysis in selected policy areas.The module introduces the fundamentals of comparative analysis  of political systems. It focuses on the main concepts, theories and methods of comparative analysis of political systems. Different political system types, and particularly democracies, will be systematically presented and analyzed comparatively in terms of their structures and institutions (polity), actors and processes (politics) and policies and policy content (policies). The content emphasized is thus: the methods of comparison, system theory, comparative political regimes, majority and consensual democracies, parliamentary and presidential democracies, veto players theory, electoral and party systems, political values and attitudes, interest group and social movement influence, and policy analysis in selected policy areas.","In a lecture format, basic concepts, theories and methods of comparative analysis  of political systems will be presented using general examples. In accompanying exercises, these contents will be deepened and extended with the help of specific examples. As part of the course, students have the opportunity  to consolidate the material learned with in-depth discussions and comments and to put it into practice themselves with concrete examples.","Course reserve readings, Online-Reader, PowerPoint, Exercises","Detlef Jahn: Einführung in die vergleichende Politikwissenschaft. 2. Auflage. VS Verlag, Wiesbaden 2013. Hans-Joachim Lauth, Gert Pickel, Susanne Pickel, Vergleich politischer Systeme. Schönigh, Paderborn 2014. Kenneth Newton, Jan van Deth, Foundations of Comparative Politics. Cambridge: Cambridge University Press 2009.",507,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1252027/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT56401,Applied Philosophy of Quantum Theory,6.0,-,Always,"Centrone, Stefania",Associate Professorship of Philosophy and Philosophy of Science (Prof. Centrone),geplant ab SoSe 2024,Bachelor/Master,-,-,one semester,irregularly,English,-,180.0,30.0,150.0,The module exam consists of a written test (90 minutes) in which the students show their ability to outline certain key aspects of quantum physics and to explain how quantum computability can overcome certain challenges of classical computability in certain applications.,No,Yes,-,"This module is organized around a set of conceptual questions presented by quantum physics and AI. By the end of the course, students will be able to explain certain key aspects of quantum physics, such as wave-particle duality, measurement, and entanglement, as well as the relation between quantic and classical computability and some application of quantum formalism to machine learning. They will be aware of the deep relationship between quantum physics and philosophical analysis and will have developed core philosophical skills.","Quantum Theory is an essential part of our modern life and future. Since the growing amount of data poses difficulties for classical computability, questions arise about the possibility for quantum computability to overcome these challenges. 
In this course, we will not only learn about quantum theory and its prospects but also solve concrete tasks with both classical and quantum computability methods.Quantum Theory is an essential part of our modern life and future. Since the growing amount of data poses difficulties for classical computability, questions arise about the possibility for quantum computability to overcome these challenges. 
In this course, we will not only learn about quantum theory and its prospects but also solve concrete tasks with both classical and quantum computability methods.","Lecture with integrated exercises. The course will be interactive: during the lectures, short assignments will be given that students can complete from their own computers. Weekly readings will be made available online.","Online lectures, Readings on Moodle","1) M.A. Nielsen, I.L. Chuang, Quantum Computation and Quantum Information. Cambridge University Press (9th Edition, 2010).
2) R. Giuntini, A.C. Granda Arango, H. Freytes, F.H. Holik, G. Sergioli (2023). Multi-class classification based on quantum state discrimination. FUZZY SETS AND SYSTEMS, 467-108509. ISSN: 1872-6801, Elsevier. 
3) G. Sergioli, C. Militello, L. Rundo, L. Minafra, F. Torrisi, G. Russo, K.L. Chow, R. Giuntini (2021). A quantum-inspired classifier for clonogenic assay evaluations. SCIENTIFIC REPORTS 11-2830, ISSN 2405-2322, Nature.",508,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3842656/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI100180,"Business Plan - Advanced Course (Business Models, Sales and Finance)",6.0,UTUM_S_v2014,Always,Dominik,Chair of Entrepreneurship (Prof. Patzelt),-,Master,-,"Business model, sales and finance",one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The examination consists of the elaboration of a business plan and a presentation of it. Based on the business plan, the following requirements are checked: if students can design, test and implement a business idea based on criteria like access to the market, customer desirability, prototyping, distribution, calculation and financing. In the business plan, all aspects of a new business model are partially described. Students particularly show what value proposition they can offer to defined customer groups. They estimate the market potential and analyze the competition. They study feasible marketing strategies, test them on the market and present the results. Based on those they develop distribution strategies to reach relevant target groups. Additionally considering the results of their field tests, interviews and prototypes, the students create scenarios for business models. They identify and evaluate estimations for the financial planning based on tested and validated business hypotheses (customer, market, costs, returns …). Finally the results are delivered by the team in a business idea presentation. During the presentation students are asked critical questions by the examiners. Thereby it can be checked, if students are able to distribute tasks in a team according to competences and experiences, and therefore to test and validate dozens of hypotheses and to create a business plan in a structured way.",Yes,No,Business Plan Basic Course or a similar format,"At the end of the seminar, the participants will be able to:
- apply the benefits of an iterative approach to the development of business opportunities,
- test hypotheses by means of interviews with experts,
- develop a suitable business model and a financial plan
- develop a marketing and sales concept, 
- evaluate own business idea with the use of customer feedback, observations of stakeholders and interviews,
- plan a business concept in order to apply for the, e.g. EXIST-funding or to participate in business plan competitions, 
- assess whether certain business idea represents a real business opportunity.","- Full-day ""Gründer-Workshop"", topics: Team, Vision, Project Plan 
- Overview of the Seminar, pitch of the business ideas, hypothesis tests
- Business Plan, Business Design, Positioning Statement 
- Start-up formalities, legal issues
- Presenting results of the hypothesis tests (4x)
- Marketing
- Strategy, Business model, metrics, financial estimations
- Distribution
- Sales competence
- Financing, Venture Capital, Bootstrapping- Full-day ""Gründer-Workshop"", topics: Team, Vision, Project Plan 
- Overview of the Seminar, pitch of the business ideas, hypothesis tests
- Business Plan, Business Design, Positioning Statement 
- Start-up formalities, legal issues
- Presenting results of the hypothesis tests (4x)
- Marketing
- Strategy, Business model, metrics, financial estimations
- Distribution
- Sales competence
- Financing, Venture Capital, Bootstrapping","Seminar-style: The lecturers are experienced entrepreneurs, founders and managing directors, who have extensive experience in writing and reviewing business plans.
- Using a shared space to work together
- Intensive work on business ideas
- Feedback from lecturers and invited experts 
- Action based-learning: refreshing observations, interviews and surveys made in the Business Plan Basic Course 
- Teamwork: Teams develop their business ideas by prototyping
- Invitation of experts on the subjects: marketing, sales, financing
- Excursion to a Munich-based startup","- Videos
- Slides
- PowerPoint","Comprehensive list of books, blogs etc. will be announced at the start of the seminar
-	Münchener Business Plan Wettbewerb: Handbuch Businessplan-Erstellung, München https://www.baystartup.de/bayerische-businessplan-wettbewerbe/handbuchbusinessplan/
-	Osterwalder, Alexander / Pigneur, Yves (2010): Business Model Generation. A Handbook for Visionaries, Game Changers, and Challengers, John Wiley & Sons
http://www.businessmodelgeneration.com/downloads/businessmodelgeneration_preview.pdf
-	Blank, Steve / Dorf, Bob (2012): Startup Owner Manual, O`Reilly",509,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/969686/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI001291,Competition Law and Entrepreneurial Strategies,6.0,S,Always,"Mackenrodt, Mark","Associate Professorship of Law of Digital Goods, Commerce and Competition (Prof. Mackenrodt)",-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"In the final assessment students will need to demonstrate to what extent they have met the Learning Objectives. This assessment will be held as a written exam of 120 minutes. Students will be asked case related and/or theoretical questions. This will demonstrate to what extent they have understood and can explain the legal framework of competition law, the economic effects of entrepreneurial strategies on a market, their legal assessment and the legal consequences of an infringement of competition law. This demonstrates if students have developed the required legal and economic analytical skills. Students also need to demonstrate their ability to apply their knowledge to fact patterns not discussed in the lecture, and to evaluate the legal consequences.",Yes,No,basic knowledge in civil law (Wirtschaftsprivatrecht 1 or similar lecture),"Upon completion of the module, students are able to,
(1.) understand the basic principles of European and German antitrust law, 
(2.) grasp the economic effects of entrepreneurial competition and innovation strategies on markets and on economic actors and possible efficiencies, 
(3.) comprehend the legal framework for the evaluation of entrepreneurial competition and innovation strategies,
(4.) apprehend the interplay of the economic and legal evaluation of entrepreneurial strategies and innovation activities,
(5.) To distinguish business strategies based on superior business acumen or technological capabilities from those strategies that constitute an abuse of market power or impair freedom of competition, and to use this to devise effective entrepreneurial strategies.
(6.) identify situations and legal remedies when a company or a start-up is harmed by cartel agreements or abuses of market power, is impeded from competing or participating in a market, or is restricted in its economic freedom.  
(7.) assess concrete competitive situations and real life scenarios legally and economically.","Competition law is concerned with the legal and economic assessment of entrepreneurial strategies on markets. Competition law intends to prohibit behavior that is not an expression of superior business acumen or superior technological capabilities, but represents a restriction of freedom of competition or an abuse of market power. The legal assessment of a corporate strategies essentially depends on an analysis of its positive and negative economic effects on the market. Thus, competition law represents one of the areas of law most permeated by economic thinking. At the same time, competition law and its enforcement by national and European authorities and courts exhibits a strong international and European dimension. 
The course will first introduce into the objectives of antitrust law, the basics of competition economics, the legal rules and their enforcement. The concept of undertakings and the delineation of markets will be discussed. Further, the prohibition of cartel agreements and of coordinations between enterprises is dealt with, as well as possible justifications, in particular through the European block exemption regulations.  In particular, vertical distribution agreements are also addressed. Then, market power and the prohibition of abuses of market power are discussed.Competition law is concerned with the legal and economic assessment of entrepreneurial strategies on markets. Competition law intends to prohibit behavior that is not an expression of superior business acumen or superior technological capabilities, but represents a restriction of freedom of competition or an abuse of market power. The legal assessment of a corporate strategies essentially depends on an analysis of its positive and negative economic effects on the market. Thus, competition law represents one of the areas of law most permeated by economic thinking. At the same time, competition law and its enforcement by national and European authorities and courts exhibits a strong international and European dimension. 
The course will first introduce into the objectives of antitrust law, the basics of competition economics, the legal rules and their enforcement. The concept of undertakings and the delineation of markets will be discussed. Further, the prohibition of cartel agreements and of coordinations between enterprises is dealt with, as well as possible justifications, in particular through the European block exemption regulations.  In particular, vertical distribution agreements are also addressed. Then, market power and the prohibition of abuses of market power are discussed.","The class will cover the theoretical aspects of the module in a discussion with the lecturer and the fellow students. It will also provide the opportunity to work individually or in groups on case scenarios (known and unknown), covering issues of competition law. The purpose is to repeat and to deepen the content discussed in the lecture and to review and evaluate legal issues from different areas of law. Students will develop the ability to present these findings in a concise and well-structured analysis","Presenations, cases studies, model answers","Bellamy/Child, European Union Law of Competition
Faull/Nikpay, The EU Law of Competition
Jones/Sufrin, EU Competition Law
Lianos/Korah/Siciliani, Competition Law 
Motta, Competition Law and Practice 
Whish/Bailey, Competition Law",510,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2796194/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT46401,Data Ethics and Governance,6.0,-,Always,"Leonelli, Sabina",Chair of Philosophy and History of Science (Prof. Leonelli),-,Master,DLR,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Students will be assessed based on their project work, making up 50% of their grade, and an accompanying 30min presentation, making up 50% of their grade. The project work will be assessed with a 10-page-long report (approximately 6000 words). In the first phase of the project students can demonstrate their ability to research and analyze challenges in data ethics and governance that emerge from real-world situations as encountered in the clinic and existing literature. In the second stage of the project students demonstrate their ability to develop and implement methods for fostering responsible and reliable data practices incorporating insights from critical data studies and related policies/tools. The presentation will examine the students ability to present their work to their collaborators and peers, and more generally to a transdisciplinary audience.",No,Yes,-,"After the completition of the module the students will be able to understand and apply the core concepts and implications of data ethics, responsible data practices, and socially accountable data governance. This includes the key ethical questions around the use of big data and associated technologies such as machine learning and artificial intelligence, and the broader framework of contemporary digital society, including its reliance on automation, generative AI, social media and related platforms for communication and service provision. Students will review concerns around data protection, surveillance, open data, citizen science and use (and misuse) of social data; and explore the social contexts for ethical decision-making through relevant scholarship and a number of real-world case studies, which students will be invited to engage in and attempt to tackle under the guidance of the module leader. This will be done in the form of data ethics clinics where students will have the opportunity to examine case studies from end to end, in collaboration with data users who are experiences challenges in data collection, storage and analysis. Students will then follow the possible (intended and unintended) ways in data may be used to support decision-making, and consider the ethical and social issues that arise at each stage; finally, students will put together recommendations for ways forward for the specific case(s) at hand. After completion students will be able to identify and tackle ethical and social challenges and opportunities emerging from data-intensive methods, tools and practices across a variety of sectors, with a particular emphasis on the use of data for research.","In this module students will: (1) identify some of the main risks and ethical/legal challenges involved in the widespread automation and digitalisation of services characterising 21st century life (for example, the clash between individual desire for privacy, frameworks for data ownership and the institutional commodification of personal data); (2) examine whether and how such concerns can be handled; and (3) discuss the responsibilities of data scientists and other producers of technologies for data analysis towards their responsible use.In this module students will: (1) identify some of the main risks and ethical/legal challenges involved in the widespread automation and digitalisation of services characterising 21st century life (for example, the clash between individual desire for privacy, frameworks for data ownership and the institutional commodification of personal data); (2) examine whether and how such concerns can be handled; and (3) discuss the responsibilities of data scientists and other producers of technologies for data analysis towards their responsible use.","The module consists of a master´s lecture and associated case studies in the form of a clinic where students work collaboratively with data practitioners from a variety of backgrounds, under the close supervision of the module leader. The topics of the module are presented via slides and presentations in the lecture hall or a hybrid format. Both the teaching format and the associated in-class exercises aim to stimulate discussions based on presentations and questions. In addition the module will equip students with the necessary skills to understand and critically discuss current research on data ethics and governance, ways in which related challenges can be identified and tackled, and the wider impact of such challenges on society. During the lecture parts, new topics will be presented and discussed. In the in-class exercises, these concepts will be implemented and applied in real-life case studies.",PowerPoint presentations,"Beaulieu, A. and Leonelli, S. (2021) Data and Society: A Critical Introduction. London, UK: SAGE. https://uk.sagepub.com/en-gb/eur/data-and-society/book269709
D’Ignazio and Klein (2019) Data Feminism. 
Floridi L. 2014 The fourth revolution: how the infosphere is reshaping human reality. Oxford, UK. Introduction. 
Eubanks, Virginia. 2018. Automating Inequality: How High-Tech Tools Profile, Police and Punish the Poor.
Rob Kitchin, The data revolution: Big data, open data, data infrastructures and their consequences. Thousand Oaks: Sage, 2022 (second, revised edition). 978-1446287484  
Leonelli, S. (2020) Big Data and Scientific Research. Stanford Encyclopaedia for Philosophy.  https://plato.stanford.edu/entries/science-big-data/",511,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025776/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86060,Data Regulation & Law (3 ECTS),3.0,-,from Winter semester 2024/25,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module exam is a written examination.
The written examination will cover topics from the field of privacy regulation (especially GDPR). The examination will last 60 minutes and will consist of various questions (essay and/or multiple choice).
The aim of the written examination is to demonstrate knowledge in privacy and data protection law. With the processing of the examination students demonstrate that they are able to remember and name the fundamental principles of privacy and data protection law. Furthermore, they will show that they are able to identify and explain important questions and current challenges in the field of privacy and data protection law and regulation with an international perspective.",Yes,No,none,"After the completition of the module the students will be able to remember the basics concepts and implicatons of privacy and data protection law. This includes the policy, fundamental rights, history and relevance of GDPR, as well as the material und territorial scope. Furthermore the students will be able to repeat basic principals of data subjects rights, in particular with respect to access, erasure, object as well as in obligations of data controllers and processors.","The module covers the following topics.
GDPR & Foundations: policy, fundamental rights, history and relevance; Scope; Data subjects, controller, Joint controller, processors, third parties; Principles; Principle of Lawfulness; Data subject rights; Obligations of controllers und processors; Third country transfers; Enforcement, remedies, liability athorities, damages. Data protection legislation for specific sectors and conflicts.The module covers the following topics.
GDPR & Foundations: policy, fundamental rights, history and relevance; Scope; Data subjects, controller, Joint controller, processors, third parties; Principles; Principle of Lawfulness; Data subject rights; Obligations of controllers und processors; Third country transfers; Enforcement, remedies, liability athorities, damages. Data protection legislation for specific sectors and conflicts.","The module consists of a master´s lecture. The topics of the module are presented via slides and presentations in the lecture hall or a hybrid format. The teaching aim to stimulate discussions based on presentations and questions. In addition the module will equip students with the necessary skills to identify and discuss current research on privacy and data protection law and regulation, as well as to communicate their effectiveness and implications, and shed light on their impact on society. During the lecture parts, new topics will be presented and explained.",PowerPoint presentations,"Handbook on European data protection law, author(s): Council of Europe , European Court of Human Rights , European Data Protection Supervisor , European Union Agency for Fundamental Rights (EU body or agency), Link: https://op.europa.eu/en/publication-detail/-/publication/5b0cfa83-63f3-11e8-ab9c-01aa75ed71a1",512,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4108928/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86061,Data Regulation & Law (6 ECTS),6.0,-,from Winter semester 2024/25,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module examination consists of an exercise. The exercise consisting of two graded exercise sheets (Homework) and a written test.
The two equally weighted exercise sheets (Homework) account for 40% of the final grade; the written test at the end of the semester for another 60%. 
Both, the written test as well as the two written homework exercises will cover topics from the field of privacy and data economy regulation. 
The written test will last 60 minutes and will consist of various questions (essay and/or multiple choice). The aim of the written test is to demonstrate knowledge in privacy and data protection law and data economy regulation. The two written homework exercises will be discussed and presented in class.
The module examination demonstrates that they are able to remember and name the fundamental principles of privacy and data protection law and data economy regulation. Furthermore, they will show that they are able to compare, use and explain legal principles with respect to current challenges in the field of privacy and data protection law and regulation.",Yes,No,,"After the completition of the module the students will be able to understand the core concepts and implicatons of data, privacy and data protection law. This includes the policy, fundamental rights, history and relevance of GDPR, as well as the material und territorial scope. Additionally the students will be able to understand the core principles of the European Data Act. Furthermore the students will be able to discuss basic principles of data subjects rights, in particular with respect to access, erasure, object as well as in obligations of data controllers and processors. Additionally students will be able to understand, analyze and discuss current research on data, privacy and data protection law and regulation. After completion students will also be able to assess the impact data protection law and regulation have on society.","The module covers the following topics.
Data Governance Act: Data sharing; Data altruism; Data intermediaries
Data Act: Access to data; cloud switching; interoperability
GDPR & Foundations: policy, fundamental rights, history and relevance; Scope; Data subjects, controller, Joint controller, processors, third parties; Principles; Principle of Lawfulness; Data subject rights; Obligations of controllers und processors; Third country transfers; Enforcement, remedies, liability athorities, damages. Data protection legislation for specific sectors and conflictsThe module covers the following topics.
Data Governance Act: Data sharing; Data altruism; Data intermediaries
Data Act: Access to data; cloud switching; interoperability
GDPR & Foundations: policy, fundamental rights, history and relevance; Scope; Data subjects, controller, Joint controller, processors, third parties; Principles; Principle of Lawfulness; Data subject rights; Obligations of controllers und processors; Third country transfers; Enforcement, remedies, liability athorities, damages. Data protection legislation for specific sectors and conflicts","The module consists of a master´s lecture and associated case studies. The topics of the module are presented via slides and presentations in the lecture hall or a hybrid format. Both the teaching format and the associated in-class exercises aim to stimulate discussions based on presentations and questions. In addition the module will equip students with the necessary skills to understand and critically discuss current research on data, privacy and data protection law and regulation, as well as to communicate their effectiveness and implications, and shed light on the respective impact on society. During the lecture parts, new topics will be presented and explained. In the in-class exercises, these concepts will be implemented and applied in case studies.",PowerPoint presentations,"Handbook on European data protection law, author(s): Council of Europe , European Court of Human Rights , European Data Protection Supervisor , European Union Agency for Fundamental Rights (EU body or agency), Link: https://op.europa.eu/en/publication-detail/-/publication/5b0cfa83-63f3-11e8-ab9c-01aa75ed71a1",513,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4106880/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9044,Data Privacy,4.0,-,Always,"Baumgarten, Uwe",Department of Computer Engineering,-,Bachelor/Master,-,-,one semester,winter semester,German,-,120.0,30.0,90.0,"Type of Assessment: Research Paper

Before the start of the seminar (usually at the end of the previous semester) each participant receives an advanced topic on which he or she prepares a scientific essay by using scientific literature which has possibly been found on his or her own. The results of the work will be presented to the other participants of the seminar in oral form, supported by visual media such as projector or slides. Evaluated is also how the student responds to questions, suggestions and discussion points to him or her work and presentation, and how he or she takes part in the discussion on the work and presentations of other participants. By that students demonstrate their expertise for critical analyzis of presented scientific contents. Before the start of the seminar the respective lecturer will announce, how the various ingredients are weighted for the calculation of the module grade. Written elaboration and oral presentation are taken in equal parts into account. The range orientates itself to appropriate scientific papers (approx. 5 to 10 pages).",Yes,No,none,"Participants possess the necessary methodological and interdisciplinary skills to independently prepare, present and discuss scientific seminar papers on more challenging topics in the field of data protection. They can work with scientific literature (research, categorize, prioritize, cite). They will master the required presentation and discussion techniques.
After successfully completing the module, students are thus able to integrate the relevant data protection aspects into their future professional practice. They are thus in a position to protect the rights of data subjects in accordance with the law. In addition to protecting the data of others, they are also able to deal with their own data in a conscious and self-determined manner. They are able to critically question new trends in IT with regard to data protection and, as future trendsetters in IT, to achieve competitive advantages by taking data protection aspects into account.","- History of data protection
- Principles and foundation of data protection
- The data proctection official in companies and public autorities
- Data protection within the EU
- Checking data protection
- Data protection by individuals
- Data protection and security: commonalities and conflicts
- Data protection within the job-related practice in IT environments
- Data protection aspects in Cloud Computing
- Data protection in scoring agencies
- Data protection in public health
- Data protection in research
- Current scandales in data protection- History of data protection
- Principles and foundation of data protection
- The data proctection official in companies and public autorities
- Data protection within the EU
- Checking data protection
- Data protection by individuals
- Data protection and security: commonalities and conflicts
- Data protection within the job-related practice in IT environments
- Data protection aspects in Cloud Computing
- Data protection in scoring agencies
- Data protection in public health
- Data protection in research
- Current scandales in data protection","Participants independently assess an advanced scientific topic. The accompanying elaboration summarizes the essential concepts of the topic and provides an overview of the sources.
In addition, they present and discuss their results with the other participants.
Accompanying support provides assistance in the scientific development and feedback on the design of the elaboration as well as the presentation.","Projector, slides, white board, elaboration, possibly tool presentation and/or animations","- General Data Protection Regulation
- Bundesdatenschutzgesetz
- Bayerisches Datenschutzgesetz
- Bernhard C. Witt, Datenschutz kompakt und verständlich
- Verschiedene Hefte der ""DuD-Datenschutz und Datensicherheit""
- Hans-Peter Fröschle, IT-Sicherheit & Datenschutz

Further reading lists will be provided at the beginning of the seminar.",514,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1095636/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82521,Debate Course with Media Law Content,6.0,-,from Winter semester 2022/23,-,Department of Governance,-,Bachelor/Master,-,-,one semester,summer semester,German,-,180.0,30.0,150.0,"The examination will be an oral examination (approx. 20 min). For this purpose, the students will research a legal question or thesis in a group after the last teaching unit and represent either the pro or the con side (group work part). The joint research results will then be utilized in the speeches given by the students in the last unit, meaning these results will be referred to in the speeches. In the speeches, the students demonstrate that they can explain complex (legal) issues and problems by calling on their basic knowledge of media law and showing that they can classify them in terms of constitutional law. The respective speeches are to be prepared independently by each student after the group work (= consultation with the other group members, so that there are no speeches with similar content). The examination performance from each student must be individually assignable. The speeches must be approx. 5-10 min long and must be given in free speech (the use of index cards/note sheets is permitted to a limited extent) in front of the other participants and examiners. This is followed by a short review or discussion (approx. 10 min). To prove the content of the speech, each student must also hand in one sheet (maximum two pages) on the day of the oral examination, which summarizes the most important points and arguments of his/her speech.",Yes,No,Seminar participants should have an interest in legal topics.,"At the end of the module, participants will have a basic knowledge of media law and its constitutional classification and will thus be able to interpret media science phenomena in legal terms. In addition, their argumentative skills will be improved and they are able to identify argumentation patterns in other speeches and use them sensibly themselves. In the context of their speech, the participants show that they can explain complex (legal) facts and problems, present an (assigned) position convincingly and summarize the core statements on one sheet of paper.","Teaching debating skills through lectures and exercises.
Content: Basic knowledge of media law:
- Players in the media sector and their legal responsibilities
- Relevant laws as well as relevant court decisions
- Legal assessment of media phenomena in the field of social mediaTeaching debating skills through lectures and exercises.
Content: Basic knowledge of media law:
- Players in the media sector and their legal responsibilities
- Relevant laws as well as relevant court decisions
- Legal assessment of media phenomena in the field of social media","The module consists of a seminar. In preparation for their own speech in the last unit, participants receive a brief and rough introduction to media law as well as rhetoric coaching in the first three units. The students apply the acquired knowledge practically right away by debating specific theses already in these units. The last teaching unit is followed by research work, which takes the form of group work. Subsequently, the participants prepare a 5-10 min speech on a position assigned to them in their own study (at first within a group and them on their own) and prepare a sheet with the most important key statements and arguments from their speech. The module requires a comparatively higher proportion of self-study because students have to learn legal methodology and develop content that is foreign to them.",PowerPoint; exercise sheets,"""Rhetorik ist keine Kunst, sondern kein Problem"" v. Michael Rossié (2021);
""Medienrecht"" v. Frank Fechner (2021)",515,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3440835/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82506,The Judge and his Hacker,3.0,-,from Summer semester 2022,-,Department of Governance,-,Bachelor/Master,-,-,one semester,irregularly,German,-,90.0,30.0,60.0,"The examination performance consists of different smaller performance records, which are put together to a learning portfolio. The participants write a seminar paper of 8 to 10 word pages on a topic between technology, law and society. This work is to be done with the help of AI tools like ChatGPT and other Large language models (LLM). This text accounts for 50% of the final grade. In addition, written documentation is to be provided on how the LLM was used, what questions were asked to arrive at the desired result, and where participants had to formulate themselves to arrive at an appealing and correct solution. The documentation accounts for 30% of the overall grade, its oral presentation and participation in a subsequent discussion on it another 20%.",Yes,No,none,"By participating in the module, students systematically learn the legal and technical background and implications of Large Language Models (LLMs) in introductory seminar sessions. Students gain a basic understanding of artificial intelligence and machine learning and understand how LLMs such as ChatGPT work and how it generates texts. In addition, students acquire the ability to critique and evaluate AI-generated texts. Students learn how to assess the strengths and weaknesses of such texts and how generative AI tools can be used profitably in the future.","In November 2022, the company OpenAI published the prototype of an AI-based chatbot called “ChatGPT”. Since then, numerous other large language models (LLMs) have been developed by many (big tech) companies. Their capabilities and the impact on various areas of social life have since been the subject of virulent debate, especially their use in (university) examinations. The aim of the seminar “The Judge and his Hacker” is to provide students with an understanding of the use of AI-generated texts and to teach them how to critically evaluate and analyze these texts. External speakers (“AI experts”) will also be invited for this purpose. As part of the seminar, students will use LLM tools to create texts on digital law topics. They will learn how to interpret and evaluate the AI-generated texts in order to recognize whether they are suitable for a particular application or not. The topics for the seminar papers are assigned in a kick-off event. The technical and legal foundations for the use of LLM tools are laid in a few seminar sessions. In a block event at the end of the semester, experiences with the use of the tools are presented and discussed.In November 2022, the company OpenAI published the prototype of an AI-based chatbot called “ChatGPT”. Since then, numerous other large language models (LLMs) have been developed by many (big tech) companies. Their capabilities and the impact on various areas of social life have since been the subject of virulent debate, especially their use in (university) examinations. The aim of the seminar “The Judge and his Hacker” is to provide students with an understanding of the use of AI-generated texts and to teach them how to critically evaluate and analyze these texts. External speakers (“AI experts”) will also be invited for this purpose. As part of the seminar, students will use LLM tools to create texts on digital law topics. They will learn how to interpret and evaluate the AI-generated texts in order to recognize whether they are suitable for a particular application or not. The topics for the seminar papers are assigned in a kick-off event. The technical and legal foundations for the use of LLM tools are laid in a few seminar sessions. In a block event at the end of the semester, experiences with the use of the tools are presented and discussed.","weekly seminar sessions and final block seminar, presentations, reading, discussions, active participation and attendance. The module requires a comparatively high proportion of self-study because students have to learn legal methods that are unfamiliar to them and develop content.","Texts, media-based presentations, discussions, guest lectures",Punktuelle Anpassung der bisherigen Modulbeschreibung: https://campus.tum.de/tumonline/WBMODHB.wbShowMHBReadOnly?pKnotenNr=3177853&pOrgNr=52498,516,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3177853/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82533,Lawful Hacking,6.0,-,from Summer semester 2023,-,Department of Governance,-,Bachelor/Master,-,-,one semester,winter semester,German,-,180.0,30.0,150.0,"The module examination consists of a scientific paper and a presentation. The module examination consists of a scientific paper and a presentation (about 20 min). The seminar paper should have the length of approx. 15,000 characters with spaces, without bibliography. The topics, from the environment of lawful hacking, in particular to technical procedures of modern government information extraction, are distributed at the beginning of the seminar, which worked on and prepared by the students independently. With the written elaboration the students prove that they are able to research scientifically well-founded and to reproduce their results in a suitable form in writing. In addition, they show that they have understood the technical background of IT-based government measures and can evaluate them legally. At the end, the results are presented to the participants of the seminar and discussed with them. With the final presentation of the seminar paper, the students demonstrate that they are able to present their results in front of an expert audience in a suitable form, orally and visually, explain them in a comprehensible way and respond to questions, suggestions and discussion points regarding the paper and presentation. Students also form the professional audience and demonstrate their competence in critical analysis of scientific content with their active participation in the discussions of the other presentations. The written seminar paper will count for 60 % of the module grade and the presentation for 40 %.",No,Yes,not neccessary,"After successful participation in the module, students will have a sound knowledge of the legal and technical background of remote forensic software (""state Trojans"") and similar state measures that infiltrate IT systems or can be considered on the verge of infiltration. Furthermore, they are able to classify these measures between (legitimate) government interests, the fundamental rights of those affected and the interests of third parties. In addition, students are able to move adeptly in increasingly technical security policy debates and to enrich these debates scientifically through methodological and interdisciplinary skills. They are able to work independently on scientific topics, to reproduce these in writing in a suitable form, to present them and to engage in scientific discussion.","Ever since modern encryption technology has existed, intelligence agencies like the NSA have been trying to find ways to break it. Due to the end-to-end encryption of many communication services today, the security authorities fear that their information channels will dry up. The security authorities try to counteract this by hacking into the smartphones and PCs of their citizens using the same methods as criminals. The module aims to comprehensively examine the phenomenon of ""lawful hacking"", and to answer the following key questions: Why and how does the state hack? What limits does the Basic Law set? Which authorities are allowed to access citizens' devices and when, and what happens to this data afterwards? To this end, the legal foundations of Germany's (cyber) security architecture will be presented before the students work on concrete state measures, their technical functioning and legal permissibility. Guest lectures from civil society as well as from representatives of the security authorities are planned as part of the module.Ever since modern encryption technology has existed, intelligence agencies like the NSA have been trying to find ways to break it. Due to the end-to-end encryption of many communication services today, the security authorities fear that their information channels will dry up. The security authorities try to counteract this by hacking into the smartphones and PCs of their citizens using the same methods as criminals. The module aims to comprehensively examine the phenomenon of ""lawful hacking"", and to answer the following key questions: Why and how does the state hack? What limits does the Basic Law set? Which authorities are allowed to access citizens' devices and when, and what happens to this data afterwards? To this end, the legal foundations of Germany's (cyber) security architecture will be presented before the students work on concrete state measures, their technical functioning and legal permissibility. Guest lectures from civil society as well as from representatives of the security authorities are planned as part of the module.","The module consists of a seminar. In introductory seminar sessions, the legal and technical background of remote forensic software and similar governmental measures that infiltrate IT systems or are to be considered on the verge of infiltration are taught. Within the scope of the seminar, a guest lecture or an excursion by or to representatives of a security authority is planned. A lecture by a representative of a civil society organization in this thematic environment is also planned. The participants work independently on a seminar paper on a challenging scientific topic related to state hacking. The accompanying paper summarizes the main concepts of the topic and provides an overview of sources. An accompanying supervisor provides assistance in the scientific development and feedback on the design of the paper, such as the presentation. The results of the work are presented to the other participants of the seminar in oral form, supported by visual media such as beamers and slides. It is also evaluated how the participants respond to questions, suggestions, discussion points about their work and presentation, as well as the way in which they participate in the discussion about the work and presentations of the other participants. This demonstrates competence in critically analyzing presented scientific content.","Projector, slides, blackboard, elaboration, possibly tool presentation and/or animations.","Schallbruch, Martin: Der Staat als Hacker, in: Klenk/Nullmeier/Wewer (Hrsg.), Handbuch Digitalisierung in Staat und Verwaltung, 2020, https://link.springer.com/content/pdf/10.1007/978-3-658-23669-4_49-1.pdf",517,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3668600/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9028,Pedagogical Training in Didactics for Tutors,4.0,-,Always,Harald,Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,120.0,30.0,90.0,"Type of Assessment: exercise work, comprising two parts: (1) practical training, (2) written exercise. 
For the first part, the practical training, the instructor ensures the carrying out of tutorials of at least 15 teaching units of 45 minutes. It is guaranteed that the students have sufficient time to put into practice the theory learned.
The tutors visit one another in at least one session. This gives them the opportunity to experience exercises from another perspective.
The second part of the course work is the documenting in writing how the concepts and methods learned have been implemented. The students describe in about 3-6 pages:
1. how they put into practice the didactical-pedagogical contents learned in the seminar
2. which suggestions they obtained from the reciprocal visits.",Yes,No,-,"The students are understand and are able to apply basic methods and results of educational research and learning psychology. In addition, they are able to apply appopriate methods of planning, organization and execution of tutorials. They choose, assess, and execute teaching methods and media to support the individual learning progress.","1. Basic methods and results of educational research on teaching and learning, in particular of learning psychology. Basic concepts of constructivism.
2. Techniques and tools for teaching Informatics 
3. Performance assessment, gender aspects and effects
4. Conception, presentation and evaluation of tutorials in Informatics
5. Planning, organization and conduction of tutorials in informatic1. Basic methods and results of educational research on teaching and learning, in particular of learning psychology. Basic concepts of constructivism.
2. Techniques and tools for teaching Informatics 
3. Performance assessment, gender aspects and effects
4. Conception, presentation and evaluation of tutorials in Informatics
5. Planning, organization and conduction of tutorials in informatic","The lecturers give talks, introducing the topics of the independent work and the basics of teaching and educational research. Essential contents of the seminar are worked out individually or in groups. The results are presented by the students. Some teaching and education methods are demonstrated in role plays. 

During the semester a practical training takes place which consists of the carrying out of tutorials. The students visit one another in at least one tutor session. Afterwards the planned respectively observed teaching and education methods are discussed, applying criteria that had been introduced during the seminar before. Particular emphasis lies on the interaction between tutors and students and between the students.","E-learning system Moodle, presentations, scientific sources, case descriptions, cases and solutions",-,518,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473930/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT431012,Digital Changemaker Course,9.0,-,from Summer semester 2024,"Diepold, Klaus",Department of Computer Engineering,-,Master,Digital Changemaker Course,"Digitization Concepts and its Ethical Implications
Students learn to assess the holistic impact of digitization (technical, economic, social) and implementation of practical digitization concepts for existing companies.",one semester,winter/summer semester,English,-,270.0,90.0,180.0,"The module examinations consist of three graded presentations.

Learning outcomes of the application of the taught methodologies as well as the ability to collaborate on the challenges in interdisciplinary project teams are graded by three presentations, where students present their assigned tasks in each project team. The three presentations represent the achievements at three steps of the project work: 1. midterm with a focus on user research, 2. midterm with a focus on problem immersion, and 3. final presentation.

The final grade is calculated as follows:
- 100% three presentations of 10 min (1. midterm 25% / 2. midterm 25% / final 50%)",No,Yes,-,"At the end of the Digital Changemaker courses, students are able to apply innovation methodologies in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real-world problems.
Specific learning outcomes for the course are as follows. Students are able to:
1. apply trend research methodology.
2. identify problems that can be solved through digital technologies.
3. evaluate technical and digital solution approaches from a multidisciplinary
perspective, including assessing technological feasibility, economic benefits, and
societal sustainability.
4. develop a digitization concept and assess its ethical implications.
5. plan, execute, and document expert and user research.
6. apply the Design Thinking methodology to a digitization challenge.
7. use story-telling tools to captivate an audience and present an idea.
8. organize themselves in a team, communicate openly, and address problems in
teamwork.","The students will join an interdisciplinary team and get matched with a real-world problem to work on. Each team of four to five students will collaborate with an existing company which is primarily an SME or NGO to develop a viable digitization concept for a company's internal process that includes an analysis of the ethical impact of the proposed concept.
Within the 12 weeks, the students will receive input about the tools and methodologies they need to develop a digitization strategy as well as the impact assessment.
The Digital Changemaker Course has 3 phases:
● The Problem Immersion Phase fosters a comprehensive understanding of the trends
that will significantly impact the industry of the project partner in the coming years. This means that the students grasp the potential opportunities and risks arising from digitization. Building upon this, the objective of the Problem Immersion Phase is to shed light on the specific challenges faced by the project partner and to develop initial approaches for addressing them through digital technologies.
● The Research Phase forms the foundation of the program. The objective of this phase is for the students to identify the existing technological, economic, and societal trends within the industry of their project partner for the next five years. Through this process, a shared understanding of the opportunities and risks of digitalization will be fostered among all participants. Furthermore, they will be introduced to concepts of project management and team communication.
● The starting point of the Ideation Phase for the students is a prioritized list of project-partner-specific problems that can be addressed through digital technologies. The goal of this phase is for each team to develop a tailored solution concept for one of the problems, aligned with the project partner. In order to achieve this, different digital technologies should be compared and evaluated in terms of technological feasibility, as well as their economic and societal impacts.The students will join an interdisciplinary team and get matched with a real-world problem to work on. Each team of four to five students will collaborate with an existing company which is primarily an SME or NGO to develop a viable digitization concept for a company's internal process that includes an analysis of the ethical impact of the proposed concept.
Within the 12 weeks, the students will receive input about the tools and methodologies they need to develop a digitization strategy as well as the impact assessment.
The Digital Changemaker Course has 3 phases:
● The Problem Immersion Phase fosters a comprehensive understanding of the trends
that will significantly impact the industry of the project partner in the coming years. This means that the students grasp the potential opportunities and risks arising from digitization. Building upon this, the objective of the Problem Immersion Phase is to shed light on the specific challenges faced by the project partner and to develop initial approaches for addressing them through digital technologies.
● The Research Phase forms the foundation of the program. The objective of this phase is for the students to identify the existing technological, economic, and societal trends within the industry of their project partner for the next five years. Through this process, a shared understanding of the opportunities and risks of digitalization will be fostered among all participants. Furthermore, they will be introduced to concepts of project management and team communication.
● The starting point of the Ideation Phase for the students is a prioritized list of project-partner-specific problems that can be addressed through digital technologies. The goal of this phase is for each team to develop a tailored solution concept for one of the problems, aligned with the project partner. In order to achieve this, different digital technologies should be compared and evaluated in terms of technological feasibility, as well as their economic and societal impacts.","The Digital Changemaker course is designed as one comprehensive project with a predefined project plan aiming to create a viable digitization concept with an ethical impact assessment with a presentation as a final comprehensive result. The students are staffed into interdisciplinary teams. The teams work independently towards fixed milestones and set weekly assignments, gaining methodology and topic-related knowledge in lectures and workshops. They are guided by regular coaching sessions by the teaching staff. Students present their results regularly in order to obtain feedback on their outcomes.
● Lectures: According to the project phase, external and internal lecturers from academia and industry teach the students the methodology necessary for working on their project.
● Topic Workshops: Experts from different fields of industry and academia that provide diverse views on digitization, sustainability, and impact assessment are invited to illustrate different approaches and impart insights from their professional experience.
● Coaching Sessions: Coaching sessions are scheduled regularly during the course. In these coaching sessions, the teams discuss their work with the course instructors and teaching assistants and get advice for possible areas of improvement.
● Midterms: In these sessions, students present the current stand of their project and have the opportunity to collect feedback from the class and the teaching assistants on the current status of their work.
● Final Presentation: The students present their results to a larger external audience and answer questions on their discoveries.","PowerPoint, Reader, Flipchart, Films","Harald R. Fortmann: Digitalisierung im Mittelstand: Trends, Impulse und Herausforderungen der digitalen Transformation
For more information regarding the course and registration, please visit the course’s website under https://www.cdtm.de/dcm",519,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3839786/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL67002,"Digital Sustainability Transformation of, by and for the TUM",6.0,-,from Summer semester 2021,"Wurster, Stefan",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The exam consists of two written and two oral exercises. Students will have to complete one written homework assignments of about 3 pages (contributing 20 %), prepare 1 short lecture of about 10 min (counting 20% to the final grade), pitch the project they have developed in groups during the project week at a public conference (15 min; counting 40 %), and write a summary of about 6-8 pages of it (another 20%). In the assignment, they show that they can independently acquire knowledge and critically discuss key aspects linked to sustainable and digital transformations. In the lecture they demonstrate that they are able to comprehensibly prepare knowledge in order to share it with fellow students. With their pitch, they show that they have acquired the ability to work together in an interdisciplinary team, to put their knowledge into practice, and to systematically plan, implement and present their own projects. In the written summary they demonstrate that they are able to reflect and analyze how they can actively shape big transformations.",Yes,No,"This module is aimed at all students enrolled in a Master program at the TUM; it is thus designed as an interdisciplinary venue which brings together a range of scientific perspectives. No specific prior knowledge is required; however, its project-based character requires high levels of intrinsic motivation and the willingness to actively participate in a project. Students with a technological background are just as welcome as students from the social sciences.","After successful participation in this course, students are able:
- to independently acquire knowledge and to critically discuss key aspects linked to 
  sustainable and digital transformations, particularly in the context of smart cities and smart participation;
- to analyze how they can actively shape big transformations 
- to comprehensibly prepare knowledge in order to share it with fellow students
- to put their knowledge into practice for their own project, and to systematically 
  plan and implement their own projects;
- to work together with an interdisciplinary team and to present their projects in a pitch.","The issues of sustainability and digitization are among the central challenges of our time. Both transformations need to be actively designed, whereby sustainability and digitization do not have to be considered side by side, but rather together in the sense of ""digitainability"". The concept ""digitainability"" as a fusion of the terms ""digitization"" and ""sustainability"" emphasizes possible positive reinforcement effects of digitization and sustainability, which have so far been often neglected. It describes the ability to combine positive aspects of digitization and sustainable development and thus advance both digitization and sustainable development. At the same time, however, the central challenges and possible negative effects with regard to ecological, economic and social issues must also be kept in mind.

Universities like the TUM play a central role in the design of digital and sustainable transformation processes as learning environments concerning the education for sustainable / digital development, as incubators for innovations in the field of sustainability and digitization, and as role models for local economic, social, ecological and technological developments.

Starting in September 2022, the Digitainability workshop weeks take place twice a year for a period of two years. The upcoming workshop week will focus on “Smart Participation” and the question how and under what conditions citizens can actively participate in the digital transformation in the sense of SDG 16 (peace, justice & strong institutions) and despite the dangers that arise in the unbounded digital space (data security, dissemination of fake news, etc.), use the potential for a sustainable transformation for themselves and their environment (Musiał-Karg & Kapsa 2019). We will be examining questions of digital participation in the context of the smart city and looking at issues such as citizen participation and e-governance.

During the self study phase, students will read the relevant literature, complete written assignments, attend lectures and subsequently discuss the gained insights. 
The workshop week will start with a futurizing workshop, allowing the students to imagine desirable future scenarios and to derive strategies for the present. Afterwards students will tackle selected challenges in the field of smart participation. Students will regularly receive feedback and are expected to present their results in a pitch by the end of week two. 

The project week will be framed by two stakeholder workshops. The first workshop will bring together experts and students to discuss and map current problems. Afterwards, the experts will present their real-world challenges, which will then be worked on by students during the workshop week.
In the second workshop, students will present the technical and non–technical ideas that they have developed during the workshop week and discuss the possibilities to turn their ideas into action with the stakeholders afterwards.The issues of sustainability and digitization are among the central challenges of our time. Both transformations need to be actively designed, whereby sustainability and digitization do not have to be considered side by side, but rather together in the sense of ""digitainability"". The concept ""digitainability"" as a fusion of the terms ""digitization"" and ""sustainability"" emphasizes possible positive reinforcement effects of digitization and sustainability, which have so far been often neglected. It describes the ability to combine positive aspects of digitization and sustainable development and thus advance both digitization and sustainable development. At the same time, however, the central challenges and possible negative effects with regard to ecological, economic and social issues must also be kept in mind.

Universities like the TUM play a central role in the design of digital and sustainable transformation processes as learning environments concerning the education for sustainable / digital development, as incubators for innovations in the field of sustainability and digitization, and as role models for local economic, social, ecological and technological developments.

Starting in September 2022, the Digitainability workshop weeks take place twice a year for a period of two years. The upcoming workshop week will focus on “Smart Participation” and the question how and under what conditions citizens can actively participate in the digital transformation in the sense of SDG 16 (peace, justice & strong institutions) and despite the dangers that arise in the unbounded digital space (data security, dissemination of fake news, etc.), use the potential for a sustainable transformation for themselves and their environment (Musiał-Karg & Kapsa 2019). We will be examining questions of digital participation in the context of the smart city and looking at issues such as citizen participation and e-governance.

During the self study phase, students will read the relevant literature, complete written assignments, attend lectures and subsequently discuss the gained insights. 
The workshop week will start with a futurizing workshop, allowing the students to imagine desirable future scenarios and to derive strategies for the present. Afterwards students will tackle selected challenges in the field of smart participation. Students will regularly receive feedback and are expected to present their results in a pitch by the end of week two. 

The project week will be framed by two stakeholder workshops. The first workshop will bring together experts and students to discuss and map current problems. Afterwards, the experts will present their real-world challenges, which will then be worked on by students during the workshop week.
In the second workshop, students will present the technical and non–technical ideas that they have developed during the workshop week and discuss the possibilities to turn their ideas into action with the stakeholders afterwards.","The module draws on the ideas of service-learning and project-based learning. A range of teaching & learning techniques will be applied:
- Self-Learning: In preparation for the workshop week, students will be provided with a 
  reading list, news articles, podcasts and videos via the online tool. These materials allow 
  students to individually gain first insights on the topic. The accompanying written 
  assignments will help them to structure the newly acquired knowledge.
- Group work: After a set of introductory sessions which provide (expert-)input on the core 
  topics and a workshop on team-communication,  students will  learn to apply agile methods 
  and work on their projects in groups in the workshop week. Progress will be 
  assessed through project presentations by the end the second week as well as continuous 
  feedback from the instructors and external experts and peer-to-peer feedback.
- Presentational skills: Will be further facilitated through the requirement to present ongoing 
  and final results within the seminar and at a final presentation with stakeholders.",The module is planned as a hybrid one-month self-study-phase with expert input sessions and a one-week on-site workshop in order to enable the highest possible productivity of the students. Depending on the development of the Covid-19 pandemic a hybrid solution is as well possible. Materials will be accessible via Moodle.,"Introductory readings:
Bednarska-Olejniczak, Dorota, Jaroslaw Olejniczak & Libuse Svobodova. 2019. Towards a Smart and Sustainable CIty with the Involvement of Public Participation - The Case of Wroclaw. Sustainabilty 11: 332.
Gupta et al. 2020: The Digitalization Sustainability Matrix: A Participatory Research Tool for Investigating Digitainability. Sustainability 12(1).
Halegoua, Germaine R. 2020. Smart Cities. MIT Press: Massachussetts.
Lichtenthaler, Ulrich 2021. Digitainability: The Combined Effects of the Megatrends Digitalization and Sustainability. Journal of Innovation Management 9(2): 64-80. 
Saetra, Henrik Skaug. 2021. AI for the Sustainable Development Goals. CRC Press: Boca Raton / London.",520,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3022081/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9006,Entrepreneurship for Small Software-oriented Enterprises,2.0,-,Always,"Matthes, Florian",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,60.0,15.0,45.0,"The assessment is by means of two presentations (intermediate and final presentation, 15-20 minutes each, weighting: 30/70).  The presentations provide results of a case for setting up a small software-oriented enterprise created in a group. It has to be shown that the necessary knowledge regarding market analysis, financial planning and the development of a unique selling proposition has been acquired and can be applied in its basic features.",No,No,,"After the successful completion of this module, students are familiar with the basic knowledge for successful foundation and long-term management of a small software-oriented enterprise.
In particular, students are able 
-	to use the Business Model Canvas to conceptualize and detail their target business model,
-	to perform a SWOT analysis of their business model,
-	to develop a three-year financial plan for their startup company,
-	to pitch their startup idea confidently and thoroughly, backed by the knowledge and feedback they have received.","Contents include:
- Techniques for market analysis
- Procedures for financial planning
- Methods for developing a business plan
- Concept of ""unique selling proposition""Contents include:
- Techniques for market analysis
- Procedures for financial planning
- Methods for developing a business plan
- Concept of ""unique selling proposition""","The module is divided into two parts: First, basic knowledge about the subject area is imparted through lectures using slides. In the next step this knowledge is applied to a case and demonstrated by a presentation. For this purpose, teams of three to four participants are formed.","Slide show, possibly blackboard","- The Lean Startup, Eric Ries, 2011
- The Lean Entrepreneur, Brant Coop & Patrick Vlaskovits, 2013
- Crossing the Chasm, Geoffrey A. Moore, 2002
- The Innovator's Dilemma, Clayton M. Christensen
- The Four Ways to the Epiphany, Steve Blank, 2013
- Business Model Generation, Alexander Osterwalder & Yves Pigneur, 2011",521,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473891/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT87317,Ethics in Artificial Intelligence,3.0,-,from Winter semester 2023/24,Christoph,Department of Governance,-,Bachelor/Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"The module examination comprises a 60-minute written exam, which is divided into two sections: open questions (50% of total grade) and an essay (50% of total grade). The open questions assess key concepts discussed in the lecture, such as ethical theories or different abstraction levels of ethics or different legal / ethical frameworks discussed in AI ethics. Meanwhile, the essay delves into applied topics (""use cases"") and problems such as data privacy or bias, which are discussed critically in AI ethics and regulatory discourses. Through this written exam, students demonstrate their comprehensive understanding of the legal and ethical issues related to AI development, deployment, and use. Additionally, they showcase their ability to apply ethical theories and paradigms in practical decision-making within the context of AI. No aids are permitted during the examination.",Yes,No,"The module is directed to students with a strong interest in AI ethics and affiliated courses in applied ethics. Furthermore, the module requires students to be able to convery their opinion and viewpoints in written English.","After the completion of the module, students will be able to reflect critically on digital technologies including AI. This includes a better understanding of the legal and ethical issues of developing, deploying and using AI, for instance the issues of algorithmic opacity, algorithmic bias, data privacy and the issue of human oversight. Furthermore, the module seeks to empower students to apply ethical theories and paradigms within practical decision making and to gain a better understanding of organizational governance processes linked to ethics.","The module focuses on the ethical issues encountered in the AI lifecycle, including the development, deployment and use of AI. The first part of the module is therefore dedicated to the normative underpinnings of AI ethics, including different approaches in ethical theory such as deontology, virtue ethics,  consequentialism and contract theories. The second part examines the ethical issues of AI and addresses the technological specificities of AI when compared to other technologies. Moreover, the module addresses here different use cases of AI including autonomous driving, AI in health or finance. Finally, the course addresses the ethical issues.The module focuses on the ethical issues encountered in the AI lifecycle, including the development, deployment and use of AI. The first part of the module is therefore dedicated to the normative underpinnings of AI ethics, including different approaches in ethical theory such as deontology, virtue ethics,  consequentialism and contract theories. The second part examines the ethical issues of AI and addresses the technological specificities of AI when compared to other technologies. Moreover, the module addresses here different use cases of AI including autonomous driving, AI in health or finance. Finally, the course addresses the ethical issues.","The module employs a dynamic teaching approach centered around engaging lectures enhanced with multimedia presentations, incorporating guest speakers to offer diverse perspectives outside of traditional academia. Emphasizing active participation, the format fosters lively discussions, particularly regarding ethical dilemmas and critical analyses of AI advancements. Furthermore, the module is designed to empower students with essential skills for comprehending and critically appraising the ongoing developments in AI ethics and regulation. Complementing traditional methods, the integration of surveys, leveraging platforms such as Qualtrics or SurveyMonkey, offers an interactive element to stimulate student involvement and deepen understanding.","Computer, PowerPoint, Survey Monkey, Qualtrics","Bartneck, C., Lütge, C., Wagner, A., &; Welsh, S. (2019). Ethik in KI und Robotik. Carl Hanser Verlag GmbH Co KG.
Kaplan, J. (2016). Artificial intelligence: What everyone needs to know. Oxford University Press.",522,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3907351/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL70070,Ethics of Technology,6.0,-,from Winter semester 2017/18,Christoph,Department of Governance,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The examination will be held in form of a presentation (60 minutes). In this presentation, a relevant techno-ethical topic will be condensed and effectively communicated in limited time with the help of an adequate visualisation to a willing audience. With the presentation, students will also prove their ability to lead a critical discourse and show that they are able to react to questions and impulses.",Yes,No,Knowledge about foundations of ethics/business ethics,1. Students are able to deal critically with the ethical implications of technological developments; 2. Students learn to argue consistently against the background of an ethical theory; 3. Students are able to apply basic ethical concepts on problems of evaluating technologies; 4. Students acquire the ability to hold a scientific presentation; 5. Students practice their ability to write down scientific arguments,"1. Which ethical problems arise from human-machine interactions?; 2. How should human-machine interactions be designed from an ethical perspective?; 3. Do technical systems carry responsibility?; 4. What is ""mindless morality""?; 5. Are the ethical limits to progressive thinking; 6. How can consequences of technologies be evaluated?; 7. How can problems of an ethics of technology be investigated empirically?; 8. What do social-science experiments achieve for an ethics of technology?; 9. What causes societal resistance against technological progress?; 10. How should one deal with concerns about technological progress?1. Which ethical problems arise from human-machine interactions?; 2. How should human-machine interactions be designed from an ethical perspective?; 3. Do technical systems carry responsibility?; 4. What is ""mindless morality""?; 5. Are the ethical limits to progressive thinking; 6. How can consequences of technologies be evaluated?; 7. How can problems of an ethics of technology be investigated empirically?; 8. What do social-science experiments achieve for an ethics of technology?; 9. What causes societal resistance against technological progress?; 10. How should one deal with concerns about technological progress?","Seminar 1:
Seminar units by the instructors to transport theoretical foundations; group discussions to train students' argumentation; online quizzes to regularly monitor students' learning progress; 
Seminar 2:
presentations by students to train their ability to hold scientific talks; moderation of scientific discussions evolving around the presentations; preparation of case studies to practice the application of basic ethical concepts to concrete examples","Moodle, whiteboard, exercise sheets, flipchart, PowerPoint, films","Franssen, Maarten; Lokhorst, Gert-Jan; van de Poel, Ibo (2013): Philosophy of Technology, in: Zalta, Edward N.: Stanford Encyclopedia of Philosophy, available at:
https://plato.stanford.edu/entries/technology/
Institute of Electrical and Electronic Engineers (IEEE) (2017): Ethically Aligned Design: A Vision for Prioritizing Human Well-being with Autonomous and Intelligent Systems, Version 2, available at: http://standards.ieee.org/develop/indconn/ec/autonomous_systems.html
Peterson, Martin (2017): The Ethics of Technology: A Geometric Analysis of Five Moral Principles, Oxford University Press.",523,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1412347/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9017,Entrepreneurship,4.0,-,Always,"Gerndt, Hans",Department of Computer Engineering,-,Bachelor,-,-,one semester,summer semester,German,-,120.0,30.0,90.0,With a scientific elaboration (5 - 10 pages) the students prove that they understand the structure and the logic of the business plan and are able to develop a business idea and to use the results and contributions of the discussions for this development. In the final presentation (20 min.) the students show that they are able to present the business idea in a compact and conclusive way.,Yes,No,-,"After participation, the students will know the essential principles of setting up a company and will be familiar with the basics of creating a business plan. They can develop a (real or fictitious) business idea with the help of the business plan until it is ready to be founded. They are able to explain the business idea and the central aspects of the business plan to an audience in a compact and understandable way.","1. Corporation Law
2. Financing
3. Intellectual Property /Patents
4. Tax Law
5. Marketing and Sales
6. Business Plan Preparation1. Corporation Law
2. Financing
3. Intellectual Property /Patents
4. Tax Law
5. Marketing and Sales
6. Business Plan Preparation","First, the basic topics are presented by the lecturers and discussed in the seminar. Thereafter, the participants develop their own business ideas in groups. These ideas are discussed in the group with the lecturers and presented and discussed in a further development step in the plenum. At the final presentation, external experts will also be present and discuss the result.",Presentation with slides,Handbook Business Plan Creation of the Munich Business Plan Competition,524,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473910/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86051,Explainable AI -- A Comprehensive Seminar on Transparent and Ethical AI,6.0,-,from Summer semester 2023,"Kasneci, Gjergji",Department of Governance,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,45.0,135.0,"The module exam consists of a scientific paper (approximately 6 pages) with an accompanying presentation (approximately 30 minutes). Through the scientific paper, students demonstrate that they can engage in scientific discussion of the state of the art in the field of ""Explainable AI,"" and understand the importance and societal relevance of critically engaging with this topic, and can communicate this in writing in an appropriate manner. Additionally, students demonstrate that they understand the functionality and possibilities for application of various AI explanation techniques, such as those available in existing libraries. With the accompanying presentation, students demonstrate that they are able to present complex scientific content to specialized audiences, explain it comprehensibly, and engage in discussion about it.",No,Yes,Interest in AI developments,"Upon successful completion of the module, students will have:
(1) understanding of Explainable AI, its concepts, significance, associated challenges, and its relationship with ethics, fairness, and verifiability.
(2) understanding of different types of AI explanation techniques and their application and evaluation in various scenarios.
(3) knowledge of existing libraries for Explainable AI and their application.
(4) the ability to write scientific summaries and engage in critical discussions about research articles.","The rapid advancement and adoption of artificial intelligence (AI) across various domains have sparked concerns about the interpretability and transparency of AI systems. This MSc seminar aims to provide a comprehensive understanding of Explainable AI, focusing on techniques and best practices to make AI systems more interpretable, transparent, and accountable.The rapid advancement and adoption of artificial intelligence (AI) across various domains have sparked concerns about the interpretability and transparency of AI systems. This MSc seminar aims to provide a comprehensive understanding of Explainable AI, focusing on techniques and best practices to make AI systems more interpretable, transparent, and accountable.","The module consists of a seminar. The topics of the seminar will be introduced using slides and presentations in the lecture hall or in a hybrid format. The teaching format aims to encourage discussions based on student presentations and questions. Participants will collaborate in reading groups to explore specific techniques of Explainable AI and discuss their benefits for addressing social and ethical challenges of AI. Additionally, the course will equip students with the necessary skills to understand, summarize, critically discuss, and present the effectiveness of current research articles on Explainable AI solutions, as well as communicate their impact on society.","Computer, PowePoint presentations, videos","Molnar, Christoph. Interpretable machine learning. Lulu. com, 2020.  
https://christophm.github.io/interpretable-ml-book/. 
Arrieta, Alejandro Barredo, et al. ""Explainable Artificial Intelligence (XAI): Concepts, taxonomies, opportunities and challenges toward responsible AI."" Information fusion 58 (2020): 82-115. https://arxiv.org/pdf/1910.10045.pdf",525,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3509066/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86054,Exploring Unresolved Challenges of Large Language Models,6.0,-,from Summer semester 2023,"Kasneci, Gjergji",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,45.0,135.0,"The module examination consists of a scientific paper (approx. 6 pages) with an accompanying presentation (15-20 minutes). The paper will deal with a certain limitation of language models and shows that the student can summarize and reproduce their findings and considerations in written form in a structured manner. The student should especially show that he or she has understood why the limitation is a problem and how the problem could be mitigated. 
With the corresponding presentation, the participants prove that they are able to present a scientifically demanding topic to a specialized audience in a way that is understandable and to discuss it in a technically sound manner. The paper accounts for 60% and the presentation for 40% of the module grade.",No,Yes,"Interest in AI, as well as its capabilities and limitations. Willingness to deal with (to a certain extent) technical topics.","After successfully completing the module, the students will be able to:
(1) understand large language models, their beginnings and their development up to their current status, as well as the way they work and what they do,
(2) comprehend the capabilities of large language models and their limitations, as well as the reasons for these limitations and the solution approaches pursued so far, as well as
(3) assess the impact of these limitations on the usability of these models in different contexts.","In this module, we aim to address open challenges in the world of large language models (LLMs). After a more general introduction of LLMs, such as the timeline of their development, their way of working and today's state of the art, each student will dive into a specific shortcoming of these models, research it independently, and present the findings to the class. The challenges we will be focussing on can be separated into three bigger groups: 
(1) Design: problems arising before model deployment, e.g. unfathomable datasets or fine-tuning overhead.
(2) Behavior: problems arising during model deployment, e.g. outdated knowledge or misaligned behavior.
(3) Science: problems hindering academic progress, e.g. lack of experimental designs or lack of reproducibility.
Depending on the interest of the participants, we may also examine concrete applications of LLMs, as for example in the fields of law or medicine.In this module, we aim to address open challenges in the world of large language models (LLMs). After a more general introduction of LLMs, such as the timeline of their development, their way of working and today's state of the art, each student will dive into a specific shortcoming of these models, research it independently, and present the findings to the class. The challenges we will be focussing on can be separated into three bigger groups: 
(1) Design: problems arising before model deployment, e.g. unfathomable datasets or fine-tuning overhead.
(2) Behavior: problems arising during model deployment, e.g. outdated knowledge or misaligned behavior.
(3) Science: problems hindering academic progress, e.g. lack of experimental designs or lack of reproducibility.
Depending on the interest of the participants, we may also examine concrete applications of LLMs, as for example in the fields of law or medicine.","The module consists of a seminar. After one or more introducing session(s) by the lecturer, the seminar is mainly based on presentations by the participants, in which they present a problem of large language models to the group using slides. Each talk is followed by a discussion with all participants, in which the presentated information is critically reviewed and analyzed.","Computer, PowerPoint presentations","Challenges and Applications of Large Language Models. J. Kaddour, J. Harris, M. Mozes, H. Bradley, R. Raileanu and R. McHardy. 2023",526,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3585941/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86082,Global Governance of AI,6.0,-,from Winter semester 2024/25,"Gasser, Urs",Department of Governance,-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The module will be assessed with a 90min mixed questions written exam. The mix of questions allows students to showcase their understanding of AI governance efforts, demonstrate their ability to identify structural normative patterns and dynamics and illustrate their knowledge of contours and drivers of most important governance frameworks currently in development.",Yes,No,none,"After successful completion of the module, students will be able to: 
- Exhibit substantive understanding of AI governance efforts in the international realm
- Be able to identify structural normative patterns and dynamics shared across a diverse set of AI governance and regulatory efforts.
- Demonstrate an understanding of the contours and drivers of the most important governance frameworks currently under development internationally.
Across these AI-specific learning goals, students will also gain insight into the increasingly important role of technology governance in a challenging geopolitical environment.","This Master’s level module offers an introduction to the rapidly growing landscape of Artificial Intelligence (AI) governance from an international perspective. Through a blend of theoretical frameworks and real-world case studies, students will engage with the complex, evolving norms and standards as well as the institutions that shape the development, deployment, and governance  of AI-based technologies in different regions of the world.
The course is clustered into two segments. 
The first segment offers an overview of the main frontiers of governance developments at the international level, covering international AI-norm-building efforts by organisations such as the OECD, UNESCO, and Council of Europe, but also G8 and G20.
The second segment examines national AI governance initiatives, including in Canada, Brazil, China, and Japan, to both understand different approaches to AI governance and identify zones of convergence and divergence among them.This Master’s level module offers an introduction to the rapidly growing landscape of Artificial Intelligence (AI) governance from an international perspective. Through a blend of theoretical frameworks and real-world case studies, students will engage with the complex, evolving norms and standards as well as the institutions that shape the development, deployment, and governance  of AI-based technologies in different regions of the world.
The course is clustered into two segments. 
The first segment offers an overview of the main frontiers of governance developments at the international level, covering international AI-norm-building efforts by organisations such as the OECD, UNESCO, and Council of Europe, but also G8 and G20.
The second segment examines national AI governance initiatives, including in Canada, Brazil, China, and Japan, to both understand different approaches to AI governance and identify zones of convergence and divergence among them.","The course uses a mix of teaching methods, including weekly lectures and tutorials, discussions, and case studies. For specific questions and aspects, international guest speakers will be invited to offer students first-hand insight into cross-cultural governance developments and issues. In terms of teaching materials, the course will rely on both primary and secondary sources. A recent report commissioned by the U.S. National Academies of Sciences will serve as the framing text, particularly with regard to the analysis of normative patterns as well as areas of convergence and divergence across major international AI legislation and governance initiatives.","PowerPoint, primary and secondary sources","Gasser, U. (2024). Guardrails: Guiding Human Decisions in the Age of AI.",527,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025119/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL60900,"Information Technologies, Protest, and Conflict",6.0,-,from Winter semester 2024/25,"Paula, Katrin",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module grade is based on a portfolio, consisting of a paper (70%), a presentation (5%) and two other class contributions (25%), in the form of a proposal and a peer review. 
In the seminar paper (Words 4000 (+/-300 words)), students demonstrate their ability of develop a meaningful research project in the area of contentious politics and information technologies.
The seminar paper is accompanied by three tasks during the semester:
•	Moderation of one session (including presentation slides and the preparation of discussion questions) to test the communicative competence of presenting scientific topics to an audience.
•	Research proposal draft for the final seminar paper (max. 2 pages) and its presentation in a mini conference during the seminar to prepare the final paper.
•	Review and discussion of one other student’s research proposal draft.",Yes,No,Quantitative methods,"Upon the completion of the module, students are
•	able to define basic concepts and terms in the research area of contentious politics
•	able to summarize and critically evaluate seminal theories of political mobilization
•	able to apply these theories to analyze the impact of information technologies on political mobilization.
•	able to compare the impact of impact of old information technologies with the impact of new information technologies on political mobilization.
•	able to summarize, interpret, and assess the findings of influential empirical studies.
•	able to critically evaluate these research designs of empirical studies.
•	able to develop their own research project in conflict studies (including the identification of a meaningful research question, the clear definition of the gap in the literature, deduction of hypotheses, deduction of an appropriate research design, and the critical evaluation of existing data sources to investigate the selected research question)","This module consists of two building blocks:
First, it provides a basic introduction to contentious politics, with a strong focus on the impact of information technologies on political mobilization, i.e., violent and non-violent collective action and political violence (e.g., protests, riots, armed groups, civil wars, post-conflict stability). New information technologies are a double-edged sword. While they can enable swift collective action and easy coordination of protesters
or other contestants of the government, governments can also use new communication technologies as an effective tool of surveillance, information manipulation, and oppression. This course looks at how information
technologies and their development influence and change strategies of political actors.
Secondly, it offers an introduction to research designs in this area. This includes a general introduction to research designs as well as specific applications and problems in the field of conflict research (e.g. problems of causal inference, availability and quality of data sources, ethical considerations). The module focuses especially on political mobilization in autocratic environments and relies strongly on quantitative empirical studies.This module consists of two building blocks:
First, it provides a basic introduction to contentious politics, with a strong focus on the impact of information technologies on political mobilization, i.e., violent and non-violent collective action and political violence (e.g., protests, riots, armed groups, civil wars, post-conflict stability). New information technologies are a double-edged sword. While they can enable swift collective action and easy coordination of protesters
or other contestants of the government, governments can also use new communication technologies as an effective tool of surveillance, information manipulation, and oppression. This course looks at how information
technologies and their development influence and change strategies of political actors.
Secondly, it offers an introduction to research designs in this area. This includes a general introduction to research designs as well as specific applications and problems in the field of conflict research (e.g. problems of causal inference, availability and quality of data sources, ethical considerations). The module focuses especially on political mobilization in autocratic environments and relies strongly on quantitative empirical studies.","The module consists of two seminars: ""Information Technologies, Collective Action and Conflict"" (2 SWS) and ""Quantitative Research Designs in Conflict Studies"" (2 SWS). Both seminars a) provide foundational knowledge through presentations and slides on selected topics by the lecturer, b) enable discussion of the contents, c) train students in independent scientific work through student-led sessions (preparation and moderation of at least one session, including slides and discussion questions) and peer feedback on the work of other students, d) prepare students for their final proposal during the semester by including tailored exercises and discussion formats.","Scientific literature, slides, exercises.","• Gohdes, Anita R. 2018. “Studying the Internet and Violent Conflict.” Conflict Management and Peace Science 35(1):89-106.
• Kellstedt, Paul M., and Guy D. Whitten. 2018. The Fundamentals of Political Science Research (Third Edition). Cambridge: Cambridge University Press.
• King, Gary, Robert O. Keohane, and Sidney Verba. 1994. Designing Social Inquiry. Princeton: Princeton University Press.
• Tilly, Charles, and Sidney Tarrow. 2015. Contentious Politics (Second Edition). Oxford: Oxford University Press.
• Tufekci, Zeynep. 2017. Twitter and Tear Gas: The Power and Fragility of Networked Protest. New Haven: Yale University Press.",528,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4032753/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MGT001347,Innovation Facilitator,6.0,UTUM,Always,"Alexy, Oliver",Associate Professorship of Innovation and Organization Design (Prof. Alexy),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,50.0,130.0,"Combination of group and individual project assignment - final examination consists of two components, each carrying 50% of the final course grade: (1) a 5 minute group presentation plus 10 minutes Q&A and feedback at the end of the course and (2) an individual reflection paper of ca. 2,500 words. 
Students will present to the class, the lecturer and the partner how the team identified an attractive opportunity in a suitable market, understood the customers’ / users’ needs in the process and, as a result, proposed a sustainable business model that balances people, planet and profit.

In a written reflection paper, every student will reflect upon and consolidate their individual learnings from (1) the training on high-performing teams, (2) the reading package and (3) their entrepreneurial experience on three different levels - self, team and entrepreneurship.
As part of the reflection, every student will anonymously read reflection papers of their peers. The peer feedback will foster students' ability to analyze the work of others as well as their own work and to give and receive effective feedback.",Yes,No,Practical experience in applying Design Thinking and Business Design as well as distinct ability to work in a team and great interest in working with individuals and teams,"By the end of the semester students will be able to understand and apply life-centered design principles in the early stages of an entrepreneurial process: from identifying an entrepreneurial opportunity and understanding its environmental and social impact to validating assumptions by applying qualitative research methods and interpreting data as well as using prototyping as a tool for communication and learning. They will be able to apply creativity methods, take over collective responsibility and know how to effectively communicate their business opportunities.
They will have deepened their methodological knowledge in Design Thinking and sustainable business design and have the ability to apply it in following founding projects or a lead role in an innovation team. At the same time, they will have experienced working in a diverse, self-organized team and they will have learned to actively create a setting in which teams can work together effectively by giving and receiving feedback, moderating discussions, defining project goals and reacting to changes.","Supported by a training on building a high-performing team and the reading package students will work on five intensive days in interdisciplinary teams on a challenge from a partner and learn why and how to develop customer and user centric business ideas through applying an entrepreneurial mindset and innovative methods -  always considering the triple bottom line.
Taking on an embedded view on the interrelatedness of economic, social and environmental systems, students will develop an ecosystem map to get an overview of relevant stakeholders and potential customers as well as important relationships and value streams. Input on Empathy Research will prepare them to collect qualitative insights from potential customers and users through interviews, immersion and contextual observations. 
After conducting their Empathy Research they will step by step learn how to synthesize their insights and define opportunities for sustainable innovation. With a concrete how-might-we-question they will start into ideation. Through different creativity methods they will develop and prioritize ideas and build a simple prototype. This prototype is being tested again through qualitative tests with potential customers and users. When they come back after testing they do a first iteration based on the feedback they got and derive assumptions on a potential business model. After input on pitching they will prepare slides or other material and pitch in front of the group, partner and external guests. After the pitch event they will be led through a reflection of the learnings they gained during the week. The reading package will support the transfer of these learnings.Supported by a training on building a high-performing team and the reading package students will work on five intensive days in interdisciplinary teams on a challenge from a partner and learn why and how to develop customer and user centric business ideas through applying an entrepreneurial mindset and innovative methods -  always considering the triple bottom line.
Taking on an embedded view on the interrelatedness of economic, social and environmental systems, students will develop an ecosystem map to get an overview of relevant stakeholders and potential customers as well as important relationships and value streams. Input on Empathy Research will prepare them to collect qualitative insights from potential customers and users through interviews, immersion and contextual observations. 
After conducting their Empathy Research they will step by step learn how to synthesize their insights and define opportunities for sustainable innovation. With a concrete how-might-we-question they will start into ideation. Through different creativity methods they will develop and prioritize ideas and build a simple prototype. This prototype is being tested again through qualitative tests with potential customers and users. When they come back after testing they do a first iteration based on the feedback they got and derive assumptions on a potential business model. After input on pitching they will prepare slides or other material and pitch in front of the group, partner and external guests. After the pitch event they will be led through a reflection of the learnings they gained during the week. The reading package will support the transfer of these learnings.","This module relies on a combination of readings, input sessions, workshops, teamwork and individual feedback and support. While input sessions will stimulate students’ engagement with relevant tools and topics, workshops and team discussions will support the implementation of the knowledge in their projects and facilitate students’ learning of the soft and intricate aspects of adopting an entrepreneurial mindset and skills. Working on a design challenge that a partner (e.g. TUM Venture Labs) provides stimulates peer competition and allows students to directly apply what they learn in a real life setting. The reading package will strengthen students' understanding of the methods and allow them to make sense of their practical experience.","Presentations, Canvas, handywork",Each semester students will be provided with a mandatory reading package.,529,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3239837/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9048,Innovation Generation in the Healthcare Domain,6.0,-,Always,"Navab, Nassir",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Type of Assessment: Project Work

Throughout the module, students will develop all necessary components to validate the customer requirements to design the best product / service fitting a specific customer group. This requires active attendance of the interactive lectures. For optimal guidance, several stages of this process are evaluated in either written (value proposition canvas and documentation of validated innovation) or oral form (2 presentations), allowing the lecturer to provide in-depth feedback.

Grading will be based on attendance (10%), the mid-term presentation (10%), the final group presentation (20%), written assignments/report (40%), and a written test (45 minutes) on the technology basics (20%). Written assignments and oral presentations are conducted in groups of 2-4 students.",No,No,"You know the basics of imaging and image guidance and you are interested in understanding the difference between research and clinical solutions. You are highly motivated, eager to work in a team and you want to understand how the healthcare system works and validate an idea if it is an innovation (will someone apply and buy it). It will be of advantage if you have already an idea (e.g. through the Image Guided Surgery module) and you want to validate throughout the module if this is an innovation (i.e. it has potential in a market) or if it is only a great idea/invention.","The learning of this module includes:
•	To learn and apply tools and methods to evaluate the innovation degree of an idea
•	To apply tools and methods to validate the innovation/market of an invention
•	To learn methodology to conduct innovation games to develop ideas in a structured way
•	To apply use of business model and value proposition canvas
•	To learn, understand and apply product management and project management methods and tools
•	To understand the medical market, its payer models and healthcare reimbursement
•	To understand the business in the biomedical market
•	To learn apply methods and tools to translate the inventions to innovations
•	To learn soft skills how to present ideas in front of a review/investment committee","The modul focuses on customer validation and development around novel ideas in healthcare with the focus on medical imaging systems, medical technology & healthcare services. It focuses on the value proposition design and validation of system requirements.
Students will learn how to get user/customer feedback from medical professionals, learn methods to generate ideas and validate them quickly and derive business cases using state of the art methods for customer development and business generation. Furthermore, a basic understanding of markets in the medical domain and the various healthcare systems will be provided in overview lectures. The students will work on real life examples and use cases and with close contact to the Munich university clinics.
In all lecture blocks we will also work with a set of INNOVATION Games on identifying problems and solutions as well as generating novel concepts and ideas - very useful for identifying translational ideas and also for analyzing and improving complex project or task that eventually could result in a venture and new business generation.The modul focuses on customer validation and development around novel ideas in healthcare with the focus on medical imaging systems, medical technology & healthcare services. It focuses on the value proposition design and validation of system requirements.
Students will learn how to get user/customer feedback from medical professionals, learn methods to generate ideas and validate them quickly and derive business cases using state of the art methods for customer development and business generation. Furthermore, a basic understanding of markets in the medical domain and the various healthcare systems will be provided in overview lectures. The students will work on real life examples and use cases and with close contact to the Munich university clinics.
In all lecture blocks we will also work with a set of INNOVATION Games on identifying problems and solutions as well as generating novel concepts and ideas - very useful for identifying translational ideas and also for analyzing and improving complex project or task that eventually could result in a venture and new business generation.","By means of a presentation, regularly by slides, the lecturer presents basic principles on innovation generation in the healthcare domain i.e. creation of market potential for inventions, and illustrates these by means of examples.
Accompanying assignments deepen the understanding of the concepts explained in the lecture, and train students to apply the learnt techniques to create their optimized business case and validated for an intended customer group.
After the module students, should be able to analyze ideas with the learned and applied methods and tools and can create their own business model.","Slide show, blackboard, flipchart","Primary:
•	Osterwalder, A., Pigneur, Y., Bernarda, G. & Smith, A. Value Proposition Design: How to Create Products and Services Customers Want. (John Wiley & Sons, 2014).
•	Brant Cooper, Patrick Vlaskovits -- The Lean Entrepreneur -- ISBN 978-1-118-29534-2 
•	Alexander Osterwalder -- Business Model Generation -- ISBN 978-0470876411 
•	Harvard Business Review on Entrepreneurship -- ISBN 978-0-87584-910-2
•	Steve Blank Slide Share - particularly up to Slide 115 (http://bit.ly/2glKNW1)
Optional:
•	Eric Ries, The Lean Startup, ISBN 978-0307887894
•	Langdon Morris, The Innovation Master Plan (http://www.innovationmanagement.se)
•	Peter Merrill, Innovation Generation, ISBN 978-0873897341
•	Kim, W. C. & Mauborgne, R. Blue Ocean Strategy: How to Create Uncontested Market Space and Make the Competition Irrelevant. (Harvard Business School Press, 2005).
•	Keeley, L., Walters, H., Pikkel, R. & Quinn, B. Ten Types of Innovation: The Discipline of Building Breakthroughs. (John Wiley & Sons, 2013).
•	Blank, S. & Dorf, B. The Startup Owner’s Manual: The Step-By-Step Guide for Building a Great Company. (K & S Ranch, 2012).",530,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1339018/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000285,Innovative Entrepreneurs - Leadership of High-Tech Companies,3.0,S_UTUM,from Summer semester 2005,Sch,Chair of Entrepreneurship (Prof. Patzelt),-,Bachelor,-,-,one semester,winter/summer semester,English,-,90.0,30.0,60.0,"The examination performance is achieved through individual project work, which is divided into three phases. In the first phase, the students intensely engage themselves over a period of six to eight weeks with a self-chosen ""Inner Development Challenge"" from one of the following topic areas: Relationship to Self, Cognitive Skills, Caring for Others and the World, Social Skills, and Driving Change. Subsequently, in the reflection phase, a written reflection paper is produced in which the students critically reflect on their experiences and draw conclusions for their future. In the Peer feedback phase, the students read and analyze five reflection papers of their fellow students. This fosters the students' ability to critically analyze their own works as well as the works of others and to give and receive effective feedback.",Yes,No,"- Knowledge: No special requirements, willingness to participate
- Abilities: Identifying opportunities; proactiveness; communication; commitment 
- Skills: openness; analytical thinking; visual thinking; self-motivation; networking","Upon successful completion of this module, participants will be able to...
- understand the entrepreneurial mindset
- recognize and develop personal strengths
- develop and implement personal ideas
- understand Design Thinking methodology

Moreover through guest speakers’ lectures and optional workshops participants will be empowered to:
- realize opportunities and challenges associated with the founding and managing of technology- and growth-oriented companies;
- create a personal roadmap for entrepreneurial success.   

Thus, students familiarize with topics like opportunity recognition, innovation management, growth, leadership, and the facets of entrepreneurship. In doing that, they are enabled to see, realize, and experience the multiplicity in the everyday life of an entrepreneur, entrepreneurial personalities, as well as entrepreneurial skills and motivations.","The objective of the module is to inspire and motivate the participants coming from various disciplines for an entrepreneurial career, and to give them a basic understanding about founding and managing technology- and growth-oriented companies. To serve this purpose, the module provides an introduction to the topic of (effectual) entrepreneurship, as well as guest lectures by outstanding founders, entrepreneurs, managers, and investors on selected topics, such as:

1. The entrepreneurial ecosystem
2. Founding of companies for students and scientists
3. How to develop an idea into a market-ready product
4. Financing of startups
5. Corporate growth
6. Creating and managing an entrepreneurial culture
7. Strategic business management
8. Innovation management
9. Corporate finance
10. Business succession

Moreover, for self-motivated participants, there is ample opportunity for personal development through interactive workshops, closed networking events.The objective of the module is to inspire and motivate the participants coming from various disciplines for an entrepreneurial career, and to give them a basic understanding about founding and managing technology- and growth-oriented companies. To serve this purpose, the module provides an introduction to the topic of (effectual) entrepreneurship, as well as guest lectures by outstanding founders, entrepreneurs, managers, and investors on selected topics, such as:

1. The entrepreneurial ecosystem
2. Founding of companies for students and scientists
3. How to develop an idea into a market-ready product
4. Financing of startups
5. Corporate growth
6. Creating and managing an entrepreneurial culture
7. Strategic business management
8. Innovation management
9. Corporate finance
10. Business succession

Moreover, for self-motivated participants, there is ample opportunity for personal development through interactive workshops, closed networking events.","As guest lecturers, each week an outstanding founder, entrepreneur, manager, or investor, spanning a wide-ranging industrial spectrum, is hosted to report on their individual entrepreneurial careers. 

At the end of each lecture, the participants can actively engage in discussions with the guest speaker during an open session.

Moreover, in context of a workshop, the participants venture their own personal qualities and skills to understand in a structured way their own entrepreneurial identity. In doing that, they focus on their individual strengths and resources to develop a plan to be entrepreneurial.

The module also provides participants with ample opportunity to network with people from the entrepreneurial environment of TUM.","- Lecture slides downloadable 
- Online discussion forum (e.g., for questions and feedback on guest lectures)
- Hand­outs (distributed online)","Read, S., S arasvathy, S., Dew, N., Wiltbank, R., & Ohlsson, A. V. (2016). Effectual Entrepreneurship. Taylor & Francis",531,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/261605/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86084,Introduction to Business Law,6.0,-,from Summer semester 2024,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The module examination consists of a graded, written exam (60 minutes). Necessary legal materials will either be provided or may be brought as copies. Students answer abstract legal questions and solve small cases by applying the respective law. By completing the exam, students demonstrate their understanding of the legal business framework and of basic legal methods for solving a case as well as identifying legal issues and they show that they are able to apply their legal knowledge to a specific case by addressing and discussing such legal issues. The fictive (hypothetical) cases are taken from the areas of law covered during the semester and include concepts as laid down in the first three books of the Bürgerliches Gesetzbuch (German Civil Code) with a particular focus on the digital transformation, fundamentals of German commercial and corporate law (e.g., from the German Commercial Code, HGB), principles of IP law and the EU legal framework for digital businesses. The exact weighting of the abstract questions and the case work will be announced before the exam.",Yes,No,"None.
No prior legal knowledge is required. Everything that is necessary for attending and passing the module is taught as part of the module. Preparation before the start of the module is also not necessary.","After completing the module, students will be able to
(1.) understand the basic principles of German private law as distinguished from other jurisdictions and the legal framework for conducting business and the implications of European Union law,
(2.) analyze essential legal requirements and apply them to specific circumstances,
(3.) create a legal analysis for a specific case in the area of business law, taking into account developments in business models (e.g., related to the digital transformation), that identifies and addresses legal issues and proposes a solution from the perspective of a judge on the basis of sound legal arguments.","This module introduces the foundations of private business law taking into account the development of new business models (e.g., in the digital transformation) and respective cases for topics such as:
- Foundations of German private law and methods of legal interpretation and case solving, taking into account the European and international perspective on business law;
- General part of the German Civil Code (BGB): Legal capacity, legal transactions, agency;
- Contracts as laid down in the BGB: Establishment, content and termination of different types of contracts; with a particular focus on digital products (Sec. 327 et seqq. BGB);
- Overview of commercial and corporate law as laid down in the BGB and Handelsgesetzbuch (Commercial Code, HGB);
- Law of Torts and unjust enrichment (BGB);
- Property law (BGB), principles of IP Law and implications for phenomena such as the digital transformation;
- Overview of EU Law for Digital Business and its interaction with private law, including the General Data Protection Regulation, the Digital Services Act, the Data Act, the Digital Markets Act, and the AI Act.This module introduces the foundations of private business law taking into account the development of new business models (e.g., in the digital transformation) and respective cases for topics such as:
- Foundations of German private law and methods of legal interpretation and case solving, taking into account the European and international perspective on business law;
- General part of the German Civil Code (BGB): Legal capacity, legal transactions, agency;
- Contracts as laid down in the BGB: Establishment, content and termination of different types of contracts; with a particular focus on digital products (Sec. 327 et seqq. BGB);
- Overview of commercial and corporate law as laid down in the BGB and Handelsgesetzbuch (Commercial Code, HGB);
- Law of Torts and unjust enrichment (BGB);
- Property law (BGB), principles of IP Law and implications for phenomena such as the digital transformation;
- Overview of EU Law for Digital Business and its interaction with private law, including the General Data Protection Regulation, the Digital Services Act, the Data Act, the Digital Markets Act, and the AI Act.","The module consists of the lecture and the accompanying case studies. In the lecture, the respective basic legal principles, scope and essence of relevant provisions are presented. This takes place in the form of media-supported frontal teaching together with interactive elements to activate the students, such as live online surveys or discussions, or in a hybrid format.
In the case studies, the established legal understanding is applied to specific life situations including actual and fictional cases. The students discuss the case and the solution of the case together as a group, individually or in small groups. The case study format allows for the students to deepen their understanding of the law, to practise the identification of legal issues, the structured presentation of legal issues as well as the development of sound legal arguments.","PowerPoint, case materials, text of legal acts","'No required reading. Materials for consultation during the semester:
- Robbers, An Introduction to German Law, 8th edition 2023 (or previous editions), ISBN 978-3-7560-0011-1
- English translations of German statutes, available online: https://www.gesetze-im-internet.de/Teilliste_translations.html
- English translations of German case law, available online: https://law.utexas.edu/transnational/foreign-law-translations/german/toc.php
- Legal acts of the European Union, available online: https://eur-lex.europa.eu/homepage.html
- Case law of the Court of Justice of the European Union, available online: https://curia.europa.eu/jcms/jcms/j_6/en/",533,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025127/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9046,"IT Law in Public Administrations: E-Government Act, IT Security and Procurement",5.0,-,Always,"Krcmar, Helmut",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,150.0,60.0,90.0,-,No,No,-,-,--,-,-,-,534,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1200390/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82522,"Crises, Catastrophies and Exceptional Situations in Law",6.0,-,from Winter semester 2022/23,-,Department of Governance,-,Bachelor,-,-,one semester,summer semester,German,-,180.0,30.0,150.0,"The examination consists of the preparation and execution of a 15 to 20 minute presentation with subsequent discussion (60%). For the presentation, a concept paper (40%) of 6 to 8 pages (excl. list of sources) should be prepared, which briefly presents the scientific findings, citing sources. Through the presentation and the concept paper it should be proven that the seminar topic can be correctly located within the crisis and disaster law, scientifically processed, presented to the other students and the teaching person and that basic knowledge in disaster law exists. The subsequent discussion should assess whether questions about the specific topic and related areas can be answered or discussed. The concept paper serves as a structural presentation of the topic and should show to what extent scientific sources have been processed and theses highlighted.",Yes,No,"The students should  have prior knowledge of the basic principles of the german legal system (i.e. regularly fullfilled with the successful completion of the course ""Einführung in das Recht der digitalen Gesellschaft"")","After participating in the module, the students are able to classify important topics of disaster control, the state handling of crises and the law of hazard prevention in socio-political and legal terms. At the end of the module, they are able to critically examine approaches they have developed themselves and illustrate and discuss them in the group. At the same time, they are able to scientifically process a complex issue through independent research.","Concepts, organization and structure as well as actors of internal security in the field of disasters, crises, civil protection and civil defense in Germany ; studies of past as well as fictitious crises and disasters (floods, pandemics, terrorist attacks, war, blackouts) ; potentials and risks of governmental access and intervention for hazard prevention; basics of the law of hazard prevention.Concepts, organization and structure as well as actors of internal security in the field of disasters, crises, civil protection and civil defense in Germany ; studies of past as well as fictitious crises and disasters (floods, pandemics, terrorist attacks, war, blackouts) ; potentials and risks of governmental access and intervention for hazard prevention; basics of the law of hazard prevention.","Lecture, presentations, group work, reading work, discussions, active participation and attendance. The module consists of a seminar. The participants receive a theoretical introduction to the law in crisis and disaster situations by the lecturer in order to convey the basics. Topics for seminar work and presentation are assigned, which are prepared in individual work. These test the ability to research and self-study. The module requires a comparatively higher proportion of self-study because students must learn legal methodology and develop content that is foreign to them.","Texts, media supported presentations, discussions, group work, shared docs","Tesch/Saß, Corona - Deutschlands digitales Desaster; Leupold, Die Feststellung des Katastrophenfalls; Grüner, Biologische Katastropgen; Klafki, Risiko und Recht; Kloepfer, Handbuch des Katastrophenrechts; Mers, Infektionsschutz im liberalen Rechtsstaat; Rechtshandbuch Zivile Sicherheit",535,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3440849/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT6230000,Learning through Teaching: Programming Courses at Schools,3.0,-,from Summer semester 2023,"Krusche, Stephan",Department of Computer Science,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,60.0,30.0,"Self-reflection to achieve the learning goals using a questionnaire and participation in the final group discussion, active participation. The module is graded.",No,No,"- Basic programming skills (IN0001 and IN0002 or equivalent).
- Willingness to learn entry-level technologies (such as Scratch, HTML, Python, Bash, or Swift)
- German language skills (at least B2)","Upon successful completion of the module, participants will be able to:
- Communicate enthusiasm for computer science
- Communicate basic programming skills to people with no IT experience
- Apply digital presentation techniques and online facilitation methods
- Communicate with, collaborate with, and meet the individual needs of people who are not familiar with IT
- Provide self-efficacy to young people as role model
- Teach the importance of basic IT skills, digital literacy, and media literacy
- Pass on the importance of creativity and critical thinking as well as a positive culture of making mistakes","This hands-on course takes place entirely virtually. Participants inspire students with programming courses at a simple level. Through small programs and games, they provide young people with insights into digital topics, strengthen their IT skills and share their passion for their choice of studies. The participants work in teams and independently supervise young people in a school class. They improve their communication on IT topics with young people without IT experience, apply presentation techniques, practice moderation skills and exercise creativity in new situations. The lecturers of the course prepare the participants for the assignment: with practice-proven and didactically sound concepts for programming courses in different languages and topics such as Scratch, HTML, Python, Bash and Swift.This hands-on course takes place entirely virtually. Participants inspire students with programming courses at a simple level. Through small programs and games, they provide young people with insights into digital topics, strengthen their IT skills and share their passion for their choice of studies. The participants work in teams and independently supervise young people in a school class. They improve their communication on IT topics with young people without IT experience, apply presentation techniques, practice moderation skills and exercise creativity in new situations. The lecturers of the course prepare the participants for the assignment: with practice-proven and didactically sound concepts for programming courses in different languages and topics such as Scratch, HTML, Python, Bash and Swift.","The course takes place exclusively online. In addition to self-study, there will be onboarding and support from the lecturers.
At the end, a short reflection of the assignment is to be written.","Lecture slides, online courses",Will be announced during the course,536,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3501529/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86066,Machine Learning and Society (3 ECTS),3.0,-,from Winter semester 2023/24,"Papakyriakopoulos, Orestis",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,90.0,30.0,60.0,"The module examination is a written examination in the form of a multiple choice test (60 minutes). With the written exam, students demonstrate that they are able to critically evaluate ML technologies, recognize potential biases and harms, and can conceptually contribute to the development of ethical and responsible AI systems. In addition, students prove that they are capable of evaluating key concepts of machine learning, such as algorithmic fairness, and applying them in various socio-technical contexts.",Yes,No,"Basic knowledge of machine learning concepts and algorithms is recommended, though not strictly required. The same applies for coding skills. An interest in ethics, social science, and policy aspects related to technology would be advantageous for engaging with the course content.","After successful participation in the module, students will have a comprehensive understanding of the complex interplay between machine learning and society. They will be equipped to critically assess ML technologies, recognize potential biases and harms, and contribute to the development of more ethical and responsible AI systems. Students will also gain practical skills in auditing and red teaming approaches, understanding the importance of aligning large language models with societal values, and dealing with the challenges of fairness in algorithmic decision-making.","This module sheds light into the profound impact of machine learning (ML) on society, emphasizing the ethical, societal, and technical challenges posed by advanced algorithms. It aims to equip students with a critical understanding of the implications of ML technologies and the responsibility of practitioners in this field.
1. Algorithmic Bias
Explore the concept of bias in machine learning algorithms.
Understand how bias originates from data sources and algorithmic design.
Examine case studies where algorithmic bias has impacted decision-making in areas like recruitment, criminal justice, and lending.
2. Fairness: Formal Definitions
Introduce formal definitions of fairness in the context of machine learning.
Analyze different models of fairness and their applicability in various scenarios.
Discuss the trade-offs and challenges in implementing these models in real-world applications.
3. Alignment of Large Language Models (LLMs)
Investigate the alignment challenges in large language models.
Discuss strategies for aligning LLMs with human values and ethical norms.
Evaluate the effectiveness and limitations of these alignment strategies through practical examples.
4. Red Teaming
Learn about the practice of red teaming in the context of machine learning.
Understand how adversarial approaches can identify vulnerabilities in ML systems.
Study real-life instances where red teaming has been used to improve system robustness and safety.
5. Auditing
Examine the role of auditing in ensuring the ethical use of machine learning.
Discuss methodologies for conducting effective audits of ML systems.
Assess the impact of regulatory and compliance requirements on ML auditing processes.
6. Limits of Prediction
Investigate the theoretical and practical limits of predictive modeling in machine learning.
Understand the implications of these limits on the reliability and utility of ML predictions.
Explore scenarios where over-reliance on predictive models can lead to adverse outcomes.
7. Algorithmic Harms
Define and categorize different types of algorithmic harms.
Analyze the societal impact of these harms, with a focus on vulnerable and marginalized groups.
Discuss strategies to mitigate and prevent algorithmic harms, including policy interventions and technical solutions.
8. ML in Society
Understand how ML systems are influenced by and, in turn, influence social structures, norms, and values.
Discuss case studies that illustrate the deep interconnection between ML applications and social dynamics.
9. ML as Society
Understand the collaborative and often complex interactions between these stakeholders in the development and deployment of ML systems.
Examine the roles and responsibilities of each stakeholder group, emphasizing the ethical considerations at each stage of ML development.
Explore the concept of ML systems as socio-technical systems, where technical aspects are deeply intertwined with social, ethical, and organizational dimensions.This module sheds light into the profound impact of machine learning (ML) on society, emphasizing the ethical, societal, and technical challenges posed by advanced algorithms. It aims to equip students with a critical understanding of the implications of ML technologies and the responsibility of practitioners in this field.
1. Algorithmic Bias
Explore the concept of bias in machine learning algorithms.
Understand how bias originates from data sources and algorithmic design.
Examine case studies where algorithmic bias has impacted decision-making in areas like recruitment, criminal justice, and lending.
2. Fairness: Formal Definitions
Introduce formal definitions of fairness in the context of machine learning.
Analyze different models of fairness and their applicability in various scenarios.
Discuss the trade-offs and challenges in implementing these models in real-world applications.
3. Alignment of Large Language Models (LLMs)
Investigate the alignment challenges in large language models.
Discuss strategies for aligning LLMs with human values and ethical norms.
Evaluate the effectiveness and limitations of these alignment strategies through practical examples.
4. Red Teaming
Learn about the practice of red teaming in the context of machine learning.
Understand how adversarial approaches can identify vulnerabilities in ML systems.
Study real-life instances where red teaming has been used to improve system robustness and safety.
5. Auditing
Examine the role of auditing in ensuring the ethical use of machine learning.
Discuss methodologies for conducting effective audits of ML systems.
Assess the impact of regulatory and compliance requirements on ML auditing processes.
6. Limits of Prediction
Investigate the theoretical and practical limits of predictive modeling in machine learning.
Understand the implications of these limits on the reliability and utility of ML predictions.
Explore scenarios where over-reliance on predictive models can lead to adverse outcomes.
7. Algorithmic Harms
Define and categorize different types of algorithmic harms.
Analyze the societal impact of these harms, with a focus on vulnerable and marginalized groups.
Discuss strategies to mitigate and prevent algorithmic harms, including policy interventions and technical solutions.
8. ML in Society
Understand how ML systems are influenced by and, in turn, influence social structures, norms, and values.
Discuss case studies that illustrate the deep interconnection between ML applications and social dynamics.
9. ML as Society
Understand the collaborative and often complex interactions between these stakeholders in the development and deployment of ML systems.
Examine the roles and responsibilities of each stakeholder group, emphasizing the ethical considerations at each stage of ML development.
Explore the concept of ML systems as socio-technical systems, where technical aspects are deeply intertwined with social, ethical, and organizational dimensions.","The module consists of a lecture. In the lecture students will be introduced to key concepts in Machine learning and Society. During the lecture, there will be slides and presentations, which will describe different parts key concepts. Students will be answer questions and perform short excercises, through which they can prove their understanding of the course content.","computer, presentations, videos","Barocas, Solon, Moritz Hardt, and Arvind Narayanan. Fairness and machine learning: Limitations and opportunities. MIT Press, 2023.

Raji, Inioluwa Deborah, Andrew Smart, Rebecca N. White, Margaret Mitchell, Timnit Gebru, Ben Hutchinson, Jamila Smith-Loud, Daniel Theron, and Parker Barnes. ""Closing the AI accountability gap: Defining an end-to-end framework for internal algorithmic auditing."" In Proceedings of the 2020 conference on fairness, accountability, and transparency, pp. 33-44. 2020.

Casper, Stephen, Xander Davies, Claudia Shi, Thomas Krendl Gilbert, Jérémy Scheurer, Javier Rando, Rachel Freedman et al. ""Open problems and fundamental limitations of reinforcement learning from human feedback."" arXiv preprint arXiv:2307.15217 (2023).",537,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3844317/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86065,Machine Learning and Society (6 ECTS),6.0,-,from Winter semester 2023/24,"Papakyriakopoulos, Orestis",Department of Governance,-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The module examination consists of a project work with a corresponding final presentation. The project work is completed in groups over the semester. Students form teams and choose a topic of their interest from the field of Machine Learning and Society. This could be conducting primary research and writing a research paper according to academic standards, working with an external stakeholder and building a civil tech tool, or writing a policy report on a current societal problem in AI.
The project work is developed in different phases. In the first phase, the project teams will deal with their chosen topic, answer questions about it, or create a tool. In this phase, students demonstrate that they are able to further develop and advance a project that explores the interface between machine learning and its social impact using relevant methodology. Hereby, students demonstrate their ability to choose and apply appropriate methods for their project, e.g., statistical methods, data collection practices, machine learning models, or stakeholder interviews.
At the end of the semester, the project's results are presented and explained to the module participants in a 5-minute presentation. With the presentation, the students show that they are able to explain and give their results and individual steps to a specialist audience in a comprehensible manner. In addition, the students show each team member's contribution to the work.
In addition to the presentation, a detailed written report (10-15 pages) is submitted. With the report, students show that they can appropriately present their results and individual development steps in writing. They also show that they can explain their decisions regarding the research question and the methods used comprehensibly, answer research questions appropriately, point out the limits of the project, and refer to ethical concerns.
With the project work, students demonstrate that they are able to critically evaluate ML technologies, recognize potential biases and harms, and contribute to the development of ethical and responsible AI systems.
The grade is based on 95% project report and 5% presentation.",Yes,No,"Basic knowledge of machine learning concepts and algorithms is recommended, though not strictly required. The same applies for coding skills. An interest in ethics, social science, and policy aspects related to technology would be advantageous for engaging with the course content.","After successful participation in the module, students will have a comprehensive understanding of the complex interplay between machine learning and society. They will be equipped to critically assess ML technologies, recognize potential biases and harms, and contribute to the development of more ethical and responsible AI systems. Students will also gain practical skills in auditing and red teaming approaches, understanding the importance of aligning large language models with societal values, and dealing with the challenges of fairness in algorithmic decision-making. They will be able to work in teams, to conceptualize, plan and execute data science projects. They will also be capable of transmitting the generated knowledge to different stakeholders and audiences of interest.","This module sheds light into the profound impact of machine learning (ML) on society, emphasizing the ethical, societal, and technical challenges posed by advanced algorithms. It aims to equip students with a critical understanding of the implications of ML technologies and the responsibility of practitioners in this field.
1. Algorithmic Bias
Explore the concept of bias in machine learning algorithms.
Understand how bias originates from data sources and algorithmic design.
Examine case studies where algorithmic bias has impacted decision-making in areas like recruitment, criminal justice, and lending.
2. Fairness: Formal Definitions
Introduce formal definitions of fairness in the context of machine learning.
Analyze different models of fairness and their applicability in various scenarios.
Discuss the trade-offs and challenges in implementing these models in real-world applications.
3. Alignment of Large Language Models (LLMs)
Investigate the alignment challenges in large language models.
Discuss strategies for aligning LLMs with human values and ethical norms.
Evaluate the effectiveness and limitations of these alignment strategies through practical examples.
4. Red Teaming
Learn about the practice of red teaming in the context of machine learning.
Understand how adversarial approaches can identify vulnerabilities in ML systems.
Study real-life instances where red teaming has been used to improve system robustness and safety.
5. Auditing
Examine the role of auditing in ensuring the ethical use of machine learning.
Discuss methodologies for conducting effective audits of ML systems.
Assess the impact of regulatory and compliance requirements on ML auditing processes.
6. Limits of Prediction
Investigate the theoretical and practical limits of predictive modeling in machine learning.
Understand the implications of these limits on the reliability and utility of ML predictions.
Explore scenarios where over-reliance on predictive models can lead to adverse outcomes.
7. Algorithmic Harms
Define and categorize different types of algorithmic harms.
Analyze the societal impact of these harms, with a focus on vulnerable and marginalized groups.
Discuss strategies to mitigate and prevent algorithmic harms, including policy interventions and technical solutions.
8. ML in Society
Understand how ML systems are influenced by and, in turn, influence social structures, norms, and values.
Discuss case studies that illustrate the deep interconnection between ML applications and social dynamics.
9. ML as Society
Understand the collaborative and often complex interactions between these stakeholders in the development and deployment of ML systems.
Examine the roles and responsibilities of each stakeholder group, emphasizing the ethical considerations at each stage of ML development.
Explore the concept of ML systems as socio-technical systems, where technical aspects are deeply intertwined with social, ethical, and organizational dimensions.This module sheds light into the profound impact of machine learning (ML) on society, emphasizing the ethical, societal, and technical challenges posed by advanced algorithms. It aims to equip students with a critical understanding of the implications of ML technologies and the responsibility of practitioners in this field.
1. Algorithmic Bias
Explore the concept of bias in machine learning algorithms.
Understand how bias originates from data sources and algorithmic design.
Examine case studies where algorithmic bias has impacted decision-making in areas like recruitment, criminal justice, and lending.
2. Fairness: Formal Definitions
Introduce formal definitions of fairness in the context of machine learning.
Analyze different models of fairness and their applicability in various scenarios.
Discuss the trade-offs and challenges in implementing these models in real-world applications.
3. Alignment of Large Language Models (LLMs)
Investigate the alignment challenges in large language models.
Discuss strategies for aligning LLMs with human values and ethical norms.
Evaluate the effectiveness and limitations of these alignment strategies through practical examples.
4. Red Teaming
Learn about the practice of red teaming in the context of machine learning.
Understand how adversarial approaches can identify vulnerabilities in ML systems.
Study real-life instances where red teaming has been used to improve system robustness and safety.
5. Auditing
Examine the role of auditing in ensuring the ethical use of machine learning.
Discuss methodologies for conducting effective audits of ML systems.
Assess the impact of regulatory and compliance requirements on ML auditing processes.
6. Limits of Prediction
Investigate the theoretical and practical limits of predictive modeling in machine learning.
Understand the implications of these limits on the reliability and utility of ML predictions.
Explore scenarios where over-reliance on predictive models can lead to adverse outcomes.
7. Algorithmic Harms
Define and categorize different types of algorithmic harms.
Analyze the societal impact of these harms, with a focus on vulnerable and marginalized groups.
Discuss strategies to mitigate and prevent algorithmic harms, including policy interventions and technical solutions.
8. ML in Society
Understand how ML systems are influenced by and, in turn, influence social structures, norms, and values.
Discuss case studies that illustrate the deep interconnection between ML applications and social dynamics.
9. ML as Society
Understand the collaborative and often complex interactions between these stakeholders in the development and deployment of ML systems.
Examine the roles and responsibilities of each stakeholder group, emphasizing the ethical considerations at each stage of ML development.
Explore the concept of ML systems as socio-technical systems, where technical aspects are deeply intertwined with social, ethical, and organizational dimensions.","The module consists of a lecture and a seminar.
In the lecture students will be introduced to key concepts in Machine learning and Society. During the lecture, there will be slides and presentations, which will describe different parts key concepts. Students will be answer questions and perform short excercises, through which they can prove their understanding of the course content. In the seminar, students will have to apply the learned concepts in practice. They will form groups, learn how to work as teams, and answer a specific research question at the intersection of machine learning and society. Through the final presentation and the delivery of the project they will prove their expertise in machine learning and society.","computer, presentations, videos","Barocas, Solon, Moritz Hardt, and Arvind Narayanan. Fairness and machine learning: Limitations and opportunities. MIT Press, 2023.

Raji, Inioluwa Deborah, Andrew Smart, Rebecca N. White, Margaret Mitchell, Timnit Gebru, Ben Hutchinson, Jamila Smith-Loud, Daniel Theron, and Parker Barnes. ""Closing the AI accountability gap: Defining an end-to-end framework for internal algorithmic auditing."" In Proceedings of the 2020 conference on fairness, accountability, and transparency, pp. 33-44. 2020.

Casper, Stephen, Xander Davies, Claudia Shi, Thomas Krendl Gilbert, Jérémy Scheurer, Javier Rando, Rachel Freedman et al. ""Open problems and fundamental limitations of reinforcement learning from human feedback."" arXiv preprint arXiv:2307.15217 (2023).",538,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3844312/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9036,Master Your Thesis!,4.0,-,Always,"Burschka, Darius",Department of Computer Engineering,-,Master,-,-,one semester,winter/summer semester,English,-,120.0,30.0,90.0,"Assesment method: research paper

To prepare for their Master’s Thesis, students compose a written document spanning 5 to 6 pages that details their preliminary research proposal. This proposal serves as a demonstration of the student's capability to articulate their research in a manner consistent with good scientific practice, structure their document according to the established conventions and develop a realistic and feasible research plan. The written proposal will be assessed on several criteria: the clarity and credibility of the research explanation, adherence to disciplinary norms and the overall coherence of the proposed research plan. This component will constitute 80% of the module grade.

As a complementary task, students feature their proposal in a 10-minute oral presentation. This presentation will be assessed on the basis of effective communication skills, which include the selection and organization of appropriate materials, the design and layout of visual aids, the focused time management, the engaging and clear presentation style, and the interaction with and responsiveness to the audience. This component will constitute 20% of the module grade.

Through this stepwise assignment, students demonstrate their readiness to embark on their Master’s Thesis by showing competence in both written and oral communication, structured planning and adherence to scientific standards.",Yes,No,"To participate actively, students will need solid skills in English language.","At the end of this module, students will be able to 
- Draft a viable thesis proposal in English.
- Develop an outline for their envisioned thesis.
- Detail the outline of a thesis section.
- Formulate a (working) title of their thesis.
- Analyse sources to identify compelling arguments.
- Establish logical flow at both the paragraph and document levels.
- Articulate a scientific argument using various rhetorical strategies.","This module will focus on the following:
- Meeting the formal requirements of the Master´s Thesis
- Structuring a document through outlining
- Creating effective thesis titles
- Establishing logical text flow
- Debugging one´s own text, self-reflection
- Incorporate feedback
- Ethically correct use of AI tools for writing.This module will focus on the following:
- Meeting the formal requirements of the Master´s Thesis
- Structuring a document through outlining
- Creating effective thesis titles
- Establishing logical text flow
- Debugging one´s own text, self-reflection
- Incorporate feedback
- Ethically correct use of AI tools for writing.","Remote-learning seminars via Zoom for class work, presentations, and group discussions. Self-study periods alternating with collaborative work and peer feedback between the seminar sessions.",Use of the Moodle platform for interactive tasks during sessions and for subsequent self-study.,"Bailey, S. (2015). Academic writing: A handbook for international students (4th ed.). Routledge.
Silvia, P. J. (2019). How to write a lot: A practical guide to productive academic writing (2nd ed.). American Psychological Association.",539,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/559107/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82530,Media Law and Social Media,6.0,-,from Winter semester 2022/23,-,Department of Governance,-,Bachelor,-,-,one semester,summer semester,German,-,180.0,30.0,150.0,"The module examination consists of a written exam (90 minutes). The written exam consists of answering questions and working on small case studies in the context of media law issues. By answering the questions, students demonstrate that they are familiar with the legal principles and systematics of media law. In addition, students demonstrate an understanding of the basics of regulating social media platforms. By working on small case studies, students demonstrate their ability to interpret the legal principles, basic legal knowledge and methodology they have learned and apply them to an unfamiliar situation in the context of platform regulation and media law.",Yes,No,Modul participants should have an interest in legal topics.,At the end of the module participants will have a basic understanding of media law and will be able to classify media phenomena in legal terms and to argue legally.,"Basic knowledge in media law:
- Players in the media sector and their legal responsibilities
- Relevant laws as well as relevant court decisions
- Legal assessment of media phenomena in the area of social mediaBasic knowledge in media law:
- Players in the media sector and their legal responsibilities
- Relevant laws as well as relevant court decisions
- Legal assessment of media phenomena in the area of social media","The module consists of a lecture. The lecture is structured with interactive elements, explanations based on case studies and small homework assignments. In the lecture, students learn about legal methodology, basic structures and principles of media law as well as an overview of the various sub-areas of media law using case studies and are encouraged to name specific legal features through interactive participation. The definitions of key legal terms are always taught with reference to specific case studies. In the lecture, participants also learn to independently solve specific legal issues in the context of media law by applying the definitions and legal methodology they have learned. In the lecture, students are also presented with completely unfamiliar case studies to which the knowledge they have learned can be applied.",PowerPoint; excercise sheets (Tafelarbeit),"""Medienrecht"" v. Dieter Dörr / Rolf Schwartmann (2023);
""Medienrecht"" v. Frank Fechner (2023)",540,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3440855/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86076,Open Data - Open Science,6.0,-,from Winter semester 2024/25,"Leonelli, Sabina",Chair of Philosophy and History of Science (Prof. Leonelli),-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module will be assessed in a scientific paper (3000 words) and a 90-minute written exam. The written exam allows students to demonstrate their knowledge of the principles of open science and open research and their understanding of political and economic dimensions in knowledge production. In the scientific paper students demonstrate that they are able to discuss the political and economic dimensions of knowledge production. The paper will be on a topic inspired by one of the module sessions as listed below. The essay needs to propose and defend a solution to one of the challenges identified and debated during the seminars. Essays need to be written in the 1st person (“I will argue that..”) and make use of relevant scholarly literature, with at least 8 academic sources cited and discussed within the essay.",Yes,No,none,"By the end of this module, students will be able to: 
Understand the principles and importance of open science and open (research) data. 
Analyze the impact of open initiatives like the Human Genome Project across several societal domains, such as research, politics, education, economy, security and more. 
Evaluate critically the political and economic dimensions of knowledge production. 
Gain practical skills in data discovery, cleaning, analysis, and presentation. 
Apply open science practices in their own research fields. 
Contributors will also gain understanding of cutting-edge debates in the philosophy and social studies of science, especially life and environmental sciences; science governance and current global transformations; inequity and injustice in scientific knowledge production and use. Contributors will also gain skills in discussing complex problems for science and society, articulating and defending their own position on such issues, and researching background and solutions in a scholarly, rigorous manner.","The module is designed to provide students with a comprehensive understanding of the principles and practices of openness in scientific research and data management. The course is structured to highlight the transformative potential of open science, in particular open access to publications, open research data, and open source for science in society, emphasizing not only aspects of research integrity or innovation (such as reproducibility), but also aspects of democratizing access and use of knowledge. It also aims to foster students’ understanding of the Open Science movement, its impact on science and society, and, more generally, current transformation in research practices and governance. The module builds around the research conducted within the PHIL_OS project (www.opensciencestudies.eu), one of the leading research groups worldwide working on these issues, and therefore focuses on the cutting-edge of research on Open Science. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. The course will also cover key topics including open source projects, open infrastructures, and citizen science, illustrated with real-world case studies to demonstrate their impact on various fields. In terms of disciplinary domain, we will discuss emerging research within the fields of philosophy, history and social studies of science and technology, as well as meta-research (sometimes also referred to as “research on research”). Topics encompass, but are not be limited to: the reproducibility crisis; information quality; inequity and injustice across research environments; data-intensive technologies and AI; data management; cooperation and coordination within and across scientific institutions; citizen science and public science; science governance; scientific modelling and epistemology. See the detailed schedule for more details. Attendees are required to attend sessions regularly, study the readings for each week in advance of the meeting, and come prepared for discussion. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. 

In addition to theoretical knowledge, the course incorporates hands-on exercise components that engage students in practical applications of open access, open research data, and open source. Students will work in groups to discover, clean, analyze, and present data relevant to their fields of study. This exercise is designed to build practical skills and encourage collaboration. This dual approach ensures that students not only understand the importance of open science and open data but also gain the practical experience necessary to implement these practices in their future careers. By the end of the course, students will be well-equipped to contribute to the growing movement towards openness in research and public administration, fostering a more inclusive and accessible knowledge economy.The module is designed to provide students with a comprehensive understanding of the principles and practices of openness in scientific research and data management. The course is structured to highlight the transformative potential of open science, in particular open access to publications, open research data, and open source for science in society, emphasizing not only aspects of research integrity or innovation (such as reproducibility), but also aspects of democratizing access and use of knowledge. It also aims to foster students’ understanding of the Open Science movement, its impact on science and society, and, more generally, current transformation in research practices and governance. The module builds around the research conducted within the PHIL_OS project (www.opensciencestudies.eu), one of the leading research groups worldwide working on these issues, and therefore focuses on the cutting-edge of research on Open Science. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. The course will also cover key topics including open source projects, open infrastructures, and citizen science, illustrated with real-world case studies to demonstrate their impact on various fields. In terms of disciplinary domain, we will discuss emerging research within the fields of philosophy, history and social studies of science and technology, as well as meta-research (sometimes also referred to as “research on research”). Topics encompass, but are not be limited to: the reproducibility crisis; information quality; inequity and injustice across research environments; data-intensive technologies and AI; data management; cooperation and coordination within and across scientific institutions; citizen science and public science; science governance; scientific modelling and epistemology. See the detailed schedule for more details. Attendees are required to attend sessions regularly, study the readings for each week in advance of the meeting, and come prepared for discussion. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. 

In addition to theoretical knowledge, the course incorporates hands-on exercise components that engage students in practical applications of open access, open research data, and open source. Students will work in groups to discover, clean, analyze, and present data relevant to their fields of study. This exercise is designed to build practical skills and encourage collaboration. This dual approach ensures that students not only understand the importance of open science and open data but also gain the practical experience necessary to implement these practices in their future careers. By the end of the course, students will be well-equipped to contribute to the growing movement towards openness in research and public administration, fostering a more inclusive and accessible knowledge economy.","The module will consist of a lecture and a seminar. The lectures will take the form of presentations given by experts in each topic with a discussion around readings circulated in advance (including in many cases draft manuscripts of work that has not yet published). The seminars will take the form of updates and discussions among students and participants to the PHIL_OS project, thereby bringing the students right into the heart of ongoing research on these issues, including the latest policy and scientific developments.","Reader, PowerPoint","Fecher, B., & Friesike, S. (2014). Open science: one term, five schools of thought (pp. 17-47). Springer International Publishing. 
Gold, E. R. (2021). The fall of the innovation empire and its possible rise through open science. Research Policy, 50(5), 104226. 
Heimstädt, M., & Friesike, S. (2021). The odd couple: Contrasting openness in innovation and science. Innovation, 23(3), 425-438. 
Leonelli, S. (2023) Philosophy of Open Science. Cambridge University Press.
Levin, N. and Leonelli, S. (2016) How Does One “Open” Science? Questions of Value in Biological Research. Science, Technology and Human Values 42 (2): 280-305. DOI: 10.1177/0162243916672071 
Maxson Jones, K., Ankeny, R. A., & Cook-Deegan, R. (2018). The Bermuda Triangle: The pragmatics, policies, and principles for data sharing in the history of the human genome project. Journal of the History of Biology, 51(4), 693-805. 
Ross-Hellauer, T., Reichmann, S., Cole, N. L., Fessl, A., Klebel, T., & Pontika, N. (2022). Dynamics of cumulative advantage and threats to equity in open science: a scoping review. Royal Society open science, 9(1), 211032. 
Salazar, A., Wentzel, B., Schimmler, S., Gläser, R., Hanf, S., & Schunk, S. A. (2023). How Research Data Management Plans Can Help in Harmonizing Open Science and Approaches in the Digital Economy. Chemistry–A European Journal, 29(9), e202202720. 
Tyfield, D., Lave, R., Randalls, S., & Thorpe, C. (Eds.). (2017). The routledge handbook of the political economy of science (pp. 21-31). London, UK: Routledge.",541,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025095/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT53406,Open Data - Open Science (Introduction),3.0,-,from Winter semester 2024/25,"Leonelli, Sabina",Chair of Philosophy and History of Science (Prof. Leonelli),Part of SOT86076 (Lecture without workshop/seminar),Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module will be assessed in a 90-minute written exam. The exam allows students to demonstrate their knowledge of principles of open science and open research and illustrate their evaluation skills of political and economic dimensions in knowledge production, as well as their ability to analyze the impact of different initiatives on a variety of fields.",No,No,none,"By the end of this module, students will be able to: 
- describe the principles of open science and open (research) data. 
- understand the impact of open initiatives like the Human Genome Project across several societal domains, such as research, politics, education, economy, security 
- apply open science practices in their own research fields","The module is designed to provide students with a comprehensive understanding of the principles and practices of openness in scientific research and data management. The course is structured to highlight the transformative potential of open science, in particular open access to publications, open research data, and open source for science in society, emphasizing not only aspects of research integrity or innovation (such as reproducibility), but also aspects of democratizing access and use of knowledge. It also aims to foster students’ understanding of the Open Science movement, its impact on science and society, and, more generally, current transformation in research practices and governance. The module builds around the research conducted within the PHIL_OS project (www.opensciencestudies.eu), one of the leading research groups worldwide working on these issues, and therefore focuses on the cutting-edge of research on Open Science. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. The course will also cover key topics including open source projects, open infrastructures, and citizen science, illustrated with real-world case studies to demonstrate their impact on various fields.
In terms of disciplinary domain, we will discuss emerging research within the fields of philosophy, history and social studies of science and technology, as well as meta-research (sometimes also referred to as “research on research”). Topics encompass, but are not be limited to: the reproducibility crisis; information quality; inequity and injustice across research environments; data-intensive technologies and AI; data management; cooperation and coordination within and across scientific institutions; citizen science and public science; science governance; scientific modelling and epistemology. See the detailed schedule for more details. Attendees are required to attend sessions regularly, study the readings for each week in advance of the meeting, and come prepared for discussion.The module is designed to provide students with a comprehensive understanding of the principles and practices of openness in scientific research and data management. The course is structured to highlight the transformative potential of open science, in particular open access to publications, open research data, and open source for science in society, emphasizing not only aspects of research integrity or innovation (such as reproducibility), but also aspects of democratizing access and use of knowledge. It also aims to foster students’ understanding of the Open Science movement, its impact on science and society, and, more generally, current transformation in research practices and governance. The module builds around the research conducted within the PHIL_OS project (www.opensciencestudies.eu), one of the leading research groups worldwide working on these issues, and therefore focuses on the cutting-edge of research on Open Science. Through case studies, students will explore foundational concepts such as the political economy of scientific knowledge production and the significance of open science initiatives. The course will also cover key topics including open source projects, open infrastructures, and citizen science, illustrated with real-world case studies to demonstrate their impact on various fields.
In terms of disciplinary domain, we will discuss emerging research within the fields of philosophy, history and social studies of science and technology, as well as meta-research (sometimes also referred to as “research on research”). Topics encompass, but are not be limited to: the reproducibility crisis; information quality; inequity and injustice across research environments; data-intensive technologies and AI; data management; cooperation and coordination within and across scientific institutions; citizen science and public science; science governance; scientific modelling and epistemology. See the detailed schedule for more details. Attendees are required to attend sessions regularly, study the readings for each week in advance of the meeting, and come prepared for discussion.","The module will consist of a lecture, which introduces participants to the principles and the importance of Open Data for research and industry and to the political economy of knowledge production. This will be done with case studies as the human genome project or examples of open infrastructure and citizen science. Attendees are required to attend sessions regularly, study the readings for each week in advance of the meeting, and come prepared for discussion.","Reader, PowerPoint","Fecher, B., & Friesike, S. (2014). Open science: one term, five schools of thought (pp. 17-47). Springer International Publishing. 
Gold, E. R. (2021). The fall of the innovation empire and its possible rise through open science. Research Policy, 50(5), 104226. 
Heimstädt, M., & Friesike, S. (2021). The odd couple: Contrasting openness in innovation and science. Innovation, 23(3), 425-438. 
Leonelli, S. (2023) Philosophy of Open Science. Cambridge University Press.
Levin, N. and Leonelli, S. (2016) How Does One “Open” Science? Questions of Value in Biological Research. Science, Technology and Human Values 42 (2): 280-305. DOI: 10.1177/0162243916672071 
Maxson Jones, K., Ankeny, R. A., & Cook-Deegan, R. (2018). The Bermuda Triangle: The pragmatics, policies, and principles for data sharing in the history of the human genome project. Journal of the History of Biology, 51(4), 693-805. 
Ross-Hellauer, T., Reichmann, S., Cole, N. L., Fessl, A., Klebel, T., & Pontika, N. (2022). Dynamics of cumulative advantage and threats to equity in open science: a scoping review. Royal Society open science, 9(1), 211032. 
Salazar, A., Wentzel, B., Schimmler, S., Gläser, R., Hanf, S., & Schunk, S. A. (2023). How Research Data Management Plans Can Help in Harmonizing Open Science and Approaches in the Digital Economy. Chemistry–A European Journal, 29(9), e202202720. 
Tyfield, D., Lave, R., Randalls, S., & Thorpe, C. (Eds.). (2017). The routledge handbook of the political economy of science (pp. 21-31). London, UK: Routledge.",542,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4275569/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT56307,Philosophy of Artificial Intelligence: Key Readings,6.0,-,Always,"Centrone, Stefania",Associate Professorship of Philosophy and Philosophy of Science (Prof. Centrone),-,Bachelor/Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"In an oral examination (30 minutes), students will demonstrate their ability to interpret philosophical texts on AI topics and discuss their approaches in relation to current debates.",Yes,No,-,"Students are able to,
- understand texts on philosophical issues in the context of artificial intelligence
- identify and exemplify philosophical concepts relevant to AI phenomena
- apply philosophical concepts to discuss current AI phenomena (selected examples).","Can machines learn and think? How do AI systems differ from human thought, speech, and action? How is AI changing knowledge and science? What are the ethical risks? And how should the basic assumptions of AI research and development be considered? Assigned courses address AI-related topics from a variety of philosophical perspectives, including logic, philosophy of language, philosophy of mind, knowledge, and science, philosophical anthropology and ethics.Can machines learn and think? How do AI systems differ from human thought, speech, and action? How is AI changing knowledge and science? What are the ethical risks? And how should the basic assumptions of AI research and development be considered? Assigned courses address AI-related topics from a variety of philosophical perspectives, including logic, philosophy of language, philosophy of mind, knowledge, and science, philosophical anthropology and ethics.",Seminar: readings and discussions of texts including teaching on historical and philosophical contexts and discussions to argue their relevance for current debates.,Online Reader,"Margaret A. Boden (Ed.): The Philosophy of Artificial Intelligence, Oxford 1990",543,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3786742/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL00011,Politics for Rocket Scientists: An Introduction to Political Science for Non-Political Scientists,6.0,-,from Winter semester 2016/17,Tim,Department of Governance,-,Bachelor/Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"Form of examination (""Prüfungsleistung""):  Closed book final exam (""Klausur"", 90 minutes), predominantly in multiple choice format (""Multiple Choice mit Einfachauswahlausgaben"").  The exam will provide students with an opportunity to demonstrate their mastery of the course materials and the learning objectives, such as their familiarity with different ways of thinking systematically about politics and public policy, by answering a series of questions addressing the full range of topics covered in the course.",No,Yes,"Open to TUM students in any field of study; no prerequisites. This is an introductory course geared toward students without prior university-level training in political science or related social sciences, who seek an understanding of the systematic, scientific study of politics and public policy.","The course is designed to expose students from across the TUM (especially those in the natural sciences and engineering but also students at the TUM School of Health and Medicine and the TUM School of Management) to different ways of thinking systematically about politics and public policy.  Students will gain an understanding of the foundational questions of Political Science, acquire knowledge of key concepts, theories and core methods of political analysis, and learn how to apply some of the conceptual, theoretical and methodological tools of the social sciences to important contemporary policy questions for science, technology, economy and democratic societies.","This course provides a broad introduction to the systematic study of politics and policy from the local to the global level.  We will study the sources of political preferences, as well as various forms of articulating those preferences (from public opinion polls and voting to political violence). We compare how legislative institutions translate public preferences into law and policy in democratic and non-democratic regimes--and we will examine the role of executives and courts in the political process.  Addressing these issues requires empirical analysis but also raises fundamental questions of political philosophy, such as:  What is the nature of power and how is it related to expertise, authority, legitimacy, and ethics?  And what does democracy mean in international politics or global governance?  We will also examine the relationship between politics, economics, law, and technological innovation, asking questions such as:  Why is government intervention in the development of new technologies or elsewhere in the economy sometimes considered essential and other times the source of severe problems?  What are the political consequences of various kinds of inequality in a democracy?  Why are technically or scientifically optimal policies often passed up for sub-optimal policies that are no more than ""second-best""?  Are there ways to improve upon those second-best outcomes?  And why is the realization that war makes everyone worse off no guarantee against the military escalation of interstate disputes?  Approximately 2/3 of each week's class will be devoted to the conceptual, theoretical and empirical-methodological tools of political analysis; during the remaining 1/3 of each class, we will explore the application of those tools to contemporary issues at the intersection of science, technology, economy and society.This course provides a broad introduction to the systematic study of politics and policy from the local to the global level.  We will study the sources of political preferences, as well as various forms of articulating those preferences (from public opinion polls and voting to political violence). We compare how legislative institutions translate public preferences into law and policy in democratic and non-democratic regimes--and we will examine the role of executives and courts in the political process.  Addressing these issues requires empirical analysis but also raises fundamental questions of political philosophy, such as:  What is the nature of power and how is it related to expertise, authority, legitimacy, and ethics?  And what does democracy mean in international politics or global governance?  We will also examine the relationship between politics, economics, law, and technological innovation, asking questions such as:  Why is government intervention in the development of new technologies or elsewhere in the economy sometimes considered essential and other times the source of severe problems?  What are the political consequences of various kinds of inequality in a democracy?  Why are technically or scientifically optimal policies often passed up for sub-optimal policies that are no more than ""second-best""?  Are there ways to improve upon those second-best outcomes?  And why is the realization that war makes everyone worse off no guarantee against the military escalation of interstate disputes?  Approximately 2/3 of each week's class will be devoted to the conceptual, theoretical and empirical-methodological tools of political analysis; during the remaining 1/3 of each class, we will explore the application of those tools to contemporary issues at the intersection of science, technology, economy and society.","The module consists of a single 3 hours/week highly interactive lecture, accompanied by weekly reading assignments.  Close advance reading of the assigned texts for each week's lecture will be expected, but lectures will go well beyond the readings, and the exam will assume familiarity with both the readings and lectures.
In early May, in early June, and again in the week before the final exam, there will be optional tutorials (""Übung"") to learn how we read texts and study in the social sciences. These sessions are offered at different times to ensure that anyone can attend at least one session - and I strongly encourage every student to attend one.","Various (readings, slides, etc.)","Required readings are taken from various books (including Aristotle's The Politics; The Oxford Handbook of Political Economy; International Political Economy: Perspectives on Global Power and Wealth (Frieden, Lake & Broz, eds.); and The New Global Rulers: The Privatization of Regulation in the World Economy (Büthe and Mattli), as well as
academic journals (such as the American Political Science Review, Antitrust Bulletin, International Organization, and West European Politics) and occasionally from popular magazines and online publications. Final list to be announced at the beginning of the semester",544,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1351319/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82534,Practical Seminar Legal Tech Special,3.0,-,from Winter semester 2023/24,-,Department of Governance,-,Bachelor/Master,-,-,one semester,winter/summer semester,German,-,90.0,30.0,60.0,"The module exam consists of a written exam (45 minutes). In the written exam, students answer multiple-choice questions from the field of legal tech and digitalization. Part of the questions requires a transfer performance from the students for the answer. With the written exam, students demonstrate that they have acquired the knowledge of legal and technical background of the novel research field of Legal Tech. They also demonstrate that they have an understanding of fundamental mechanisms of action, both in terms of the legal framework and technical developments in areas such as artificial intelligence and machine learning.",Yes,No,Not required,"After successful participation in the module, students will know the legal and technical background of the novel research area of legal tech. In addition, they have a basic understanding of fundamental mechanisms of action, both in terms of the legal framework and current technical developments in areas such as artificial intelligence and machine learning. Furthermore, they possess the ability to analyze and evaluate opportunities and risks that the field of Legal Tech entails.","For about 6 years, the field of legal tech has been on the rise in the German legal market. In the course of this time, a strong development in terms of potential disruption on the industry became apparent; in parallel, technology evolved away from rigid decision-making logic towards the application of modern AI systems. Due to the now undeniable impact, the seminar will provide knowledge about modern applications as well as future potentials and risks, in addition to laying basic legal and technical building blocks. The aim is to enable students to use this knowledge to understand current developments and to actively shape future developments.For about 6 years, the field of legal tech has been on the rise in the German legal market. In the course of this time, a strong development in terms of potential disruption on the industry became apparent; in parallel, technology evolved away from rigid decision-making logic towards the application of modern AI systems. Due to the now undeniable impact, the seminar will provide knowledge about modern applications as well as future potentials and risks, in addition to laying basic legal and technical building blocks. The aim is to enable students to use this knowledge to understand current developments and to actively shape future developments.","The module consists of a seminar. The seminar consists of prepared presentations, reading, discussions and active participation of the students. The seminar provides the participants with legal and technical basics and background in the field of legal tech.","Reading work, media assisted Presentations, Discussions, 
individual teaching platform",https://www.legaltech-expedition.de/2022/04/29/kompendium-1-einfuehrung/,545,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3757093/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86402,Qualitative Methods,6.0,-,from Winter semester 2023/24,Conceicao,Department of Governance,-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,The module grade is based on a written examination with a duration of 90 minutes. The written exam will assess to which extent students understand essential elements of qualitative and comparative methods and whether they are able to apply this knowledge in a limited timeframe.,Yes,No,none,"Upon successfully completing this module, students will have a foundational understanding of qualitative and comparative methods and will be able to apply this knowledge independently. Furthermore, students will be able to (1) evaluate the role of research design for conducting original empirical social research; (2) familiarize themselves with all the stages of social science research; (3) compare and contrast and assess the utility of different research strategies and methods based on specific criteria such as validity and reliability; (4) use the methodological training in their master thesis and other research projects to design and conduct the empirical part of their study. In particular, considering extant literature, students will be able to develop and justify a written research proposal, which might inform their master thesis; (5) outline and critically assess ethical issues involved in social research.","This module introduces qualitative and comparative methods and seeks to equip students with transferable qualitative research design skills. The course is designed for master's students with diverse academic backgrounds. The course covers core elements of research design, such as formulating a research question, developing a theory, explanation, and causation, building a concept, and case selection. The course will also explore various methods and approaches such as process tracing and using (comparative) case studies. Therefore, the lectures are designed to strike a balance between summarizing key ideas in the social sciences and familiarizing the participants with current debates in qualitative research methods. The lecture will give an overview of the strengths and weaknesses of different approaches, including the practical challenges of conducting qualitative research. It provides students with a systematic introduction to the theory and conduct of qualitative social science research, including the most widely used research methodologies in the social sciences such as case studies. The tutorials will consider the application of research methods to major questions in international and comparative politics and discuss the methodological choices in extant research, covering a range of qualitative approaches.This module introduces qualitative and comparative methods and seeks to equip students with transferable qualitative research design skills. The course is designed for master's students with diverse academic backgrounds. The course covers core elements of research design, such as formulating a research question, developing a theory, explanation, and causation, building a concept, and case selection. The course will also explore various methods and approaches such as process tracing and using (comparative) case studies. Therefore, the lectures are designed to strike a balance between summarizing key ideas in the social sciences and familiarizing the participants with current debates in qualitative research methods. The lecture will give an overview of the strengths and weaknesses of different approaches, including the practical challenges of conducting qualitative research. It provides students with a systematic introduction to the theory and conduct of qualitative social science research, including the most widely used research methodologies in the social sciences such as case studies. The tutorials will consider the application of research methods to major questions in international and comparative politics and discuss the methodological choices in extant research, covering a range of qualitative approaches.","This module consists of the lecture ""Qualitative Methods"" (2 SWS) and an accompanying tutorial (2 SWS). The lecture provides foundational knowledge through presentations and slides. The tutorial enables the discussion and application of the lecture contents in a smaller group setting, in preparation for the written exam.","Scientific literature, PowerPoint, slides, exercises","Goertz, Gary, and James Mahoney (2012): A Tale of Two Cultures: Qualitative and Quantitative Research in the Social Sciences. Princeton, NJ: Princeton University Press.
Janet M. Box-Steffensmeier, Henry E. Brady and David Collier (2008): The Oxford Handbook of Political Methodology. Oxford: Oxford University Press.
In addition, a reader of additional seminar texts will be made available at the start of the semester.",546,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3381940/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82531,Legal Principles of Artificial Intelligence,6.0,-,from Summer semester 2023,-,Department of Governance,-,Bachelor,-,-,one semester,winter semester,German,-,180.0,60.0,120.0,"The module examination consists of a written exam (90 minutes). The written exam consists of answering questions and working on small case studies in the context of the legal issues of artificial intelligence. With the answer-choice questions, the students demonstrate that they know the legal foundations and the systematics at the interdisciplinary interface of artificial intelligence and law. In addition, the students demonstrate an understanding of the fundamentals of the regulation of algorithmic systems. By working on small case studies, the students demonstrate the ability to interpret the learned legal principles, the basic legal knowledge and the taught methodology and to transfer them to an unknown issue in the context of artificial intelligence.",Yes,No,,"After successful participation in the module, the students know the interdisciplinary foundations of AI and are able to classify selected AI application examples from practice in legal terms. At the end of the module, they will also be able to critically analyse legal arguments. At the same time, they are able to process a more complex AI-related issue by applying legal methodology.","(Conceptual, technical, ethical and legal) basics of artificial intelligence and presentation of selected practical examples of application. Influence and significance of artificial intelligence in various areas of law, such as constitutional and administrative law, civil contract and liability law, intellectual property law, data and data protection law. In addition, the status and need for AI regulation will be conveyed on the basis of the challenges of artificial intelligence for the application of law. In addition to sector-specific regulations, the focus will be on the European Union's proposal for an AI Act and guidelines on AI and product liability. Finally, (legal) ethical principles in the context of the use of artificial intelligence will be taught.(Conceptual, technical, ethical and legal) basics of artificial intelligence and presentation of selected practical examples of application. Influence and significance of artificial intelligence in various areas of law, such as constitutional and administrative law, civil contract and liability law, intellectual property law, data and data protection law. In addition, the status and need for AI regulation will be conveyed on the basis of the challenges of artificial intelligence for the application of law. In addition to sector-specific regulations, the focus will be on the European Union's proposal for an AI Act and guidelines on AI and product liability. Finally, (legal) ethical principles in the context of the use of artificial intelligence will be taught.","The module consists of a lecture and an accompanying exercise. The lecture is structured with interactive elements, explanations based on case studies and smaller homework assignments. In the lecture, students learn about legal methodology, basic structures and principles of the law of artificial intelligence by means of interdisciplinary case studies with concrete reference to the reality of digital life and are challenged to name special legal features through interactive participation. The definitions of central legal terms are always taught with reference to concrete AI case studies. In the accompanying exercise, students learn to independently solve concrete legal questions in the context of algorithmic systems by applying definitions and legal methodology they have learned. The focus will be on current regulatory projects in the context of artificial intelligence. In addition, technical elements will be used in the exercise. In the lecture and in the accompanying exercise, students will also be presented with completely unknown case studies to which learned knowledge is to be applied.","Texts, media supported presentations, discussions","Ebers/Heinze/Krügel/Steinrötter, Künstliche Intelligenz und Robotik - Rechtshandbuch, Beck, 1. Auflage 2020 & Braegelmann/Kaulartz, Rechtshandbuch Artificial Intelligence und Machine Learning, Beck, 1. Auflage 2020, Chibanguza/Kuss/Steege, Künstliche Intelligenz - Recht und Praxis automatisierter und autonomer Systeme, 1. Auflage 2021",547,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3663450/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT82519,Legal Issues of the Use of Artificial Intelligence,6.0,-,from Winter semester 2022/23,"Bronner, Pascal",Department of Governance,-,Bachelor,-,-,one semester,irregularly,German,-,180.0,30.0,150.0,"The examination performance is an exercise performance. On the one hand, it consists of the preparation of a short exercise paper (1-2 pages) on a current topic in the context of AI regulation during the semester (30%), which the students work on in their own study time. On the other hand, the examination performance consists of the independent preparation (self-study) and performance of a 15-20 minute lecture with subsequent discussion and questions in the group (40%) in a block event at the end of the semester. A handout of 1-2 pages should be prepared for the lecture (10%). Prior to the lecture, a concept paper of 1-2 pages should be prepared, which briefly presents the scientific findings, citing sources (20%). The lecture and the concept paper should prove whether the seminar topic can be correctly located within the law of AI, scientifically processed and presented to the other students and the lecturer and whether basic knowledge of the legal issues of artificial intelligence exists. In the subsequent discussion, it should be assessed whether questions on the specific topic and the related areas can be answered or discussed. The concept paper serves as a structural illustration of the topic and should show the extent to which scientific sources have been processed and theses highlighted.",No,No,Not neccessary.,"After participating in the module, students will be familiar with the interdisciplinary basics of AI and will be able to classify selected AI application examples from practice in legal terms. At the end of the module, they will also be capable to critically analyze legal arguments. At the same time, they are able to scientifically process a more complex AI-related issue through independent research.","(Conceptual, technical, ethical and legal) basics of artificial intelligence and presentation of selected practical application examples. Influence and significance of artificial intelligence in various areas of law such as liability law, intellectual property law and data protection law. Finally, the status and needs of AI regulation will be conveyed on the basis of the challenges of artificial intelligence for the application of law. One focus will be on the AI Act of the European Union.(Conceptual, technical, ethical and legal) basics of artificial intelligence and presentation of selected practical application examples. Influence and significance of artificial intelligence in various areas of law such as liability law, intellectual property law and data protection law. Finally, the status and needs of AI regulation will be conveyed on the basis of the challenges of artificial intelligence for the application of law. One focus will be on the AI Act of the European Union.","The module consists of a seminar. In a total of four interactive units, the content necessary for understanding the interdisciplinary foundations and legal issues is taught. These interactive units consist of lecture modules in which legal basics with regard to AI applications are taught and which rely on the active participation of students and discussions, as well as of diverse group work. The students are provided with specially prepared dossiers as well as further literature (references) for self-study and reading. During the semester, a practice paper (1-2 pages) is to be written in the context of AI regulation. In a final block session, students will give lectures for which they will prepare a handout as well as a scientific concept paper.","Texts, media supported presentations, discussions","Ebers/Heinze/Krügel/Steinrötter, Künstliche Intelligenz und Robotik - Rechtshandbuch, Beck, 1. Auflage 2020 & Braegelmann/Kaulartz, Rechtshandbuch Artificial Intelligence und Machine Learning, Beck, 1. Auflage 2020",548,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3321046/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86102,Risk & Crisis Communication (3 ECTS),3.0,-,from Summer semester 2024,"Walter, Stefanie",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,90.0,30.0,60.0,"The module will be assessed through a 3 page essay/policy brief/literature review, which will make up 80% of the grade, and 20 minute presentation which makes up the remaining 20%. The assessment will evaluate students’ understanding of both theoretical and practical aspects of how scientific information is communicated during crises. These assessments will challenge students to think critically about the role of science in crisis situations, the challenges of communicating complex information to the public, and the influence of political and social dynamics.",Yes,No,An interest in leaning about different theories and scenarios of risk and crisis communication as well as social science research.,"After successful participation in the module, students will have a comprehensive understanding of risk and crisis communication: what constitutes a crisis, understand key concepts and theories in risk and crisis communication, and typical stages of a crisis. They will have an understanding of the intersection of communication strategies, political decision-making, and public attitudes.","The module consists of a lecture. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the moduel's content.The module consists of a lecture. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the moduel's content.","Lectures, presentations, discussions, assigned readings, film/video screenings.
The module consists of a lecture. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the moduel's content.","Computer, presentations, videos",-,549,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4181347/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86080,Risk & Crisis Communication (6 ECTS),6.0,-,from Summer semester 2024,"Walter, Stefanie",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module will be assessed through a case study report of 10-15 pages, which will make up 80% of the grade and a 20 minute presentation which makes up the remaining 20%. 
The case study report allows the students to demonstrate their ability to determine what constitutes a crisis, that they understand the key concepts and theories in risk and crisis communication and that they know of the typical stages of a crisis. They are further able to highlight their knowledge of the intersection of communication strategies, political decision-making and public attitudes. Within the report students will also critically assess the communication practices utilized in their given topic. In their presentation students will demonstrate their ability to communicate scientific findings to an academic audience.",Yes,No,An interest in leaning about different theories and scenarios of risk and crisis communication as well as social science research.,"After successful participation in the module, students will have a comprehensive understanding of risk and crisis communication: what constitutes a crisis, understand key concepts and theories in risk and crisis communication, and typical stages of a crisis. They will have an understanding of the intersection of communication strategies, political decision-making, and public attitudes. They will be equipped to critically assess communication practices of past and recent crises. They will be able to work in teams, to conceptualize, plan and execute a risk and crisis communication case study.","The module consists of a lecture and a seminar. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the course content. In the seminar, students will apply the learned concepts to a case study. They will form groups, learn how to work as teams, and examine a real-life risk and crisis event. Through a presentation and a project report, they will prove their expertise in risk and crisis communication.The module consists of a lecture and a seminar. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the course content. In the seminar, students will apply the learned concepts to a case study. They will form groups, learn how to work as teams, and examine a real-life risk and crisis event. Through a presentation and a project report, they will prove their expertise in risk and crisis communication.","Lectures, presentations, group work and discussions, assigned readings, film/video screenings.
The module consists of a lecture and a seminar. The lecture introduces the theoretical foundations and practical applications of risk and crisis communication from a social science perspective. It delves into how communication strategies are developed and executed in times of crisis, the role of media, the impact of political decisions, and the psychological aspects of risk perception. This also includes the different stages of the crisis management process, including precrisis (prevention, preparation, planning), crisis response (crisis communications and stakeholder engagement), and postcrisis (lessons learned, corrective actions and reputation recovery). During the lecture, there will be slides and presentations, students will answer questions and perform short exercises that help them to better understand the course content. In the seminar, students will apply the learned concepts to a case study. They will form groups, learn how to work as teams, and examine a real-life risk and crisis event. Through a presentation and a project report, they will prove their expertise in risk and crisis communication.","Computer, presentations, videos",-,550,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025111/206?$ctx=lang=en&$scrollTo=toc_details,Browser
CIT3640001,Sanitätsausbildung,3.0,-,from Winter semester 2022/23,"Hayden, Oliver",Chair of Medical Informatics (Prof. Boeker),-,Bachelor/Master,-,-,one semester,winter semester,German,-,90.0,75.0,15.0,-,No,Yes,-,-,--,-,-,-,551,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3342019/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9010,Seminar: Science and Ethics,4.0,-,Always,"Bader, Michael",Department of Computer Science,-,Bachelor/Master,-,-,one semester,irregularly,German/English,-,120.0,30.0,90.0,"Type of examination: Scientific paper (consisting of a written part (10-14 pages), as well as a presentation with
discussion (30-45 minutes), weighting: 50/50)
Before the start of the seminar (usually at the end of the previous semester), all participants will be given a
challenging topic related to “science and ethics” on which they will prepare a written paper using scientific literature they have received and have researched
themselves. With that paper, they show that they are able to analyse and evaluate ethical aspects of different behaviour related to
scientific research (goals of scientific research, procedure of research, and possible applications of research) or a specific science-related ethical dilemma. The results of the individual topics and papers are presented to the other participants of the seminar in a talk and supported by visual media such as beamers or slides to proof the ability to present the aspects in an adequate manner.",Yes,No,none,"At the end of the module, students are able to analyse and evaluate ethical aspects of different behaviour related to scientific research (goals of scientific research, procedure of research, and possible applications of research) as well as to present them in an adequate manner.","- Biographies of distinguished scientists (Meitner, Einstein, Russell, Heisenberg, v. Braun,...)
- Research under dictatorships
- Faud, mistakes, and plagiarism, 
- Ethics in computer science (Monitoring, freedom of the www, Open Source, Star Wars,...)
- Genetic research, intelligent design, animal tests.- Biographies of distinguished scientists (Meitner, Einstein, Russell, Heisenberg, v. Braun,...)
- Research under dictatorships
- Faud, mistakes, and plagiarism, 
- Ethics in computer science (Monitoring, freedom of the www, Open Source, Star Wars,...)
- Genetic research, intelligent design, animal tests.",The students shall be prompted to study literature and to get familiar with the topics. They prepare and give presentations and write a seminar paper.,"Slides, whiteboard, movies","https://gewissensbits.gi.de/gewissensbisse-buch2/
https://sarahspiekermann.com/digital-ethics-the-book
https://academic.oup.com/book/31834
https://academic.oup.com/book/41132?login=true
https://doi.org/10.1017/CBO9780511617218
https://link.springer.com/book/10.1007/978-3-319-51277-8
https://www.cambridge.org/de/universitypress/subjects/philosophy/ethics/ethics-and-science-introduction?format=HB&isbn=9780521878418",552,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473902/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9007,SET-Tutor,2.0,-,Always,"Burschka, Darius",Academic Programs Informatik,-,Bachelor/Master,-,-,one semester,winter semester,German/English,-,60.0,15.0,45.0,-,Yes,No,A minimum of two semesters of studies completed at the department of Informatics at TUM,Participants are able to guide a group. They can take responsibility in conception and manage group dynamic processes.,"Participants prepare the introduction days (SET) for first-year students and are in charge of a group of first-year students. They communicate the most important facts for the begin of studies and support first-year students getting to know each other and forming study groups by using basic principles of organisation, management and motivation of small groups.Participants prepare the introduction days (SET) for first-year students and are in charge of a group of first-year students. They communicate the most important facts for the begin of studies and support first-year students getting to know each other and forming study groups by using basic principles of organisation, management and motivation of small groups.",seminar,-,Websites: TUM (http://www.tum.de/en/homepage/) and TUM-Informatics (http://www.in.tum.de/) and student union (http://mpi.fs.tum.de/ueber_uns/referate/set/),553,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473898/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9009,Leading Yourself and Others,4.0,-,Always,"Bungartz, Hans",Department of Computer Science,-,Bachelor/Master,-,-,one semester,summer semester,German,-,120.0,30.0,90.0,"Type of assessment: oral
One-on-one interviews with a duration of 20 min test the learning outcomes.",No,No,Participants should be in the active phase of confrontation with their future occupation. First leadership experiences in their professional / private / social environment are useful.,"At the end of the course, participants have improved their personal skills for leadership, especially based on experience by means of feedback and reflexion. They have extended their strengths and reduced their shortcomings, based on a realistic self-assessment. They are able to give and receive constructive feedback.","- Individual definition of leadership; competence profile of successful executives
- Determining your position: strengths and weaknesses, claim of leadership
- Perception, assessment, communication, feedback
- Leading individual staff members: situations of leadership, dialogs
- Leading groups: group dynamics, resistance
- Conflict handling
- Giving presentations, leading meetings
- Instruments and styles of leadership (including coaching)
- Leadership in the case of conflicting interests of the corporation and the employees- Individual definition of leadership; competence profile of successful executives
- Determining your position: strengths and weaknesses, claim of leadership
- Perception, assessment, communication, feedback
- Leading individual staff members: situations of leadership, dialogs
- Leading groups: group dynamics, resistance
- Conflict handling
- Giving presentations, leading meetings
- Instruments and styles of leadership (including coaching)
- Leadership in the case of conflicting interests of the corporation and the employees","The module comprises a workshop. The content is taught by talks, teamwork, and case studies. The students shall be prompted to work in teams with other students, criticise others in a constructive way, and work on problems and their solutions.","Slides, whiteboard, facilitation tools","- Fredmund Malik: ""Führen, Leisten, Leben. Wirksames Management für eine neue Zeit."", Heyne, 2001
- Paul Watzlawick: ""Anleitung zum Unglücklichsein."", Piper, 1988",554,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473900/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT46402,Society and Technology,6.0,-,Always,"Beck, Silke","Department of Science, Technology and Society",-,Master,-,-,one semester,summer semester,English,-,180.0,60.0,120.0,"The module examination is a 60min written exam, which takes place in the last session of the semester. The format of a written exam gives students the opportunity to demonstrate their ability to recall knowledge about the societal dimensions of data infrastructure and basic social science approaches in 5 closed questions. The 3 open questions in the examination give the students the opportunity to transfer and apply their knowledge and illustrate they are able to assess the societal dimensions of data infrastructure, evaluate their benefits, safety requirements and social impacts. Additionally, they can showcase their ability to transfer their knowledge on basic social science approaches for analyzing data structures to selected examples, demonstrate their ability to assess their societal impact and to reflect on methodological choice and empirical findings in a critical but constructive way and finally to independently draw conclusions.
The format further enables to test the recall of social science epistemology and fundamentals of qualitative methods. To conclude, the students can demonstrate their ability to apply the above concepts on novel examples.",No,Yes,-,"After successfully completing module, students can assess the societal dimensions of data infrastructure, evaluate their benefits, safety requirements and social impacts. They have the competence to apply basic social science approaches to analyze data structure in a targeted manner to the analysis of selected cases (e.g. critical infrastructures, health), to assess societal impacts and causes respective risks, and to develop responsible solutions. They have competencies to reflect methodological choices and empirical findings in a critical, but constructive way.
They will further know the basics of social science epistemology and have gained an understanding of social theories and their underlying ontologies.","The module will be taught in two lectures. The first lecture seeks to open the so-called black box of the ‘society’ of data infrastructures.  It focuses on the societal, political and cultural dimensions of data production and governance. To this end, the module introduces social science approaches and basic concepts such as responsibility, risk, safety, infrastructure, innovation, and societal trust. It addresses topics such as how data are societally embedded, inscribed by underlying cultural values and governed by rules and result in un-intended consequences. We will discuss distinct societal implications of technical trajectories, long-term as well as short-term benefits, and risks of the data-fiction of societies (including implications for vulnerability and resilience as well as inequalities and justice. We unpack institutional & cultural drivers of techno-change as well as varieties of societal pathways how to govern data and ways how to gain trust in institutions (science, administration), which are responsible for the assessment and management of data. Based on these findings, we explore the range of options for how technologies can be best governed: by whom, to what ends, by what means, and with what welfare consequences for affected groups. 
The module also introduces into approaches of interdisciplinary technology assessment (Technology Assessment, Responsible Research and Innovation, Anticipatory Governance, living labs). We apply concepts of the lectures to possible fields of application such Extreme Events, Climate services, AI, Critical Infrastructure, Consumer Protection, Security, Climate Engineering, Carbon Removal Technologies and illustrate societal causes and impacts with examples of TUM research. 
The second part of the module students learn how the qualitative social sciences know and analyze social dynamics, society, and social order. Students will be introduced to social science epistemology: How do explaining and interpreting differ? What does understanding someone really mean? What drives societal development? They will understand how 'the social' differs from 'society' and 'social order' by way of addressing selected social theories and their underlying ontologies. Last but not least, the course turns towards crucial qualitative methods so that students get a first grasp of how society and 'the social' can be known in different ways and what the consequences of these differences are.The module will be taught in two lectures. The first lecture seeks to open the so-called black box of the ‘society’ of data infrastructures.  It focuses on the societal, political and cultural dimensions of data production and governance. To this end, the module introduces social science approaches and basic concepts such as responsibility, risk, safety, infrastructure, innovation, and societal trust. It addresses topics such as how data are societally embedded, inscribed by underlying cultural values and governed by rules and result in un-intended consequences. We will discuss distinct societal implications of technical trajectories, long-term as well as short-term benefits, and risks of the data-fiction of societies (including implications for vulnerability and resilience as well as inequalities and justice. We unpack institutional & cultural drivers of techno-change as well as varieties of societal pathways how to govern data and ways how to gain trust in institutions (science, administration), which are responsible for the assessment and management of data. Based on these findings, we explore the range of options for how technologies can be best governed: by whom, to what ends, by what means, and with what welfare consequences for affected groups. 
The module also introduces into approaches of interdisciplinary technology assessment (Technology Assessment, Responsible Research and Innovation, Anticipatory Governance, living labs). We apply concepts of the lectures to possible fields of application such Extreme Events, Climate services, AI, Critical Infrastructure, Consumer Protection, Security, Climate Engineering, Carbon Removal Technologies and illustrate societal causes and impacts with examples of TUM research. 
The second part of the module students learn how the qualitative social sciences know and analyze social dynamics, society, and social order. Students will be introduced to social science epistemology: How do explaining and interpreting differ? What does understanding someone really mean? What drives societal development? They will understand how 'the social' differs from 'society' and 'social order' by way of addressing selected social theories and their underlying ontologies. Last but not least, the course turns towards crucial qualitative methods so that students get a first grasp of how society and 'the social' can be known in different ways and what the consequences of these differences are.","The module takes place in the form of two lectures (including video presentations), student presentations and single and group exercises. In the lecture, PowerPoint presentations are used to explain the basics of societal assessment and management. 
During lectures, the content of teaching is disseminated by way of talks or presentations. Tablet PCs are used to derive and illustrate complex issues. In the course of the lectures, explicit questions are raised which call for transfer capabilities on the part of students while giving them the opportunity to speak up and discuss potential solution concepts. This approach is aimed at providing deeper insights into societal risk and their safety challenges, thus simultaneously fostering a transfer of the acquired know-how to other problem areas. It further serves to build a better understanding of social science epistemology and how to utilize it and lay the groundwork for qualitative methods and their application.
The module is oriented to towards concrete societal impacts of data infrastructure which are used as examples to apply and improve their social science skills. Group work and other interactive formats are used to enable a critical discussion of the learning content and outcomes, to apply it to selected fields and to draw evidence-based conclusions.","PowerPoint, Video, Poster, break-out groups, Scenario-Building, Flipchart","Bowker, G. C., Baker, K., Millerand, F., & Ribes, D. (2010). Toward information infrastructure studies: Ways of knowing in a networked environment. International handbook of internet research, 97-117.
Marres, N. (2017). Digital sociology: The reinvention of social research. John Wiley & Sons.",555,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025779/206?$ctx=lang=en&$scrollTo=toc_details,Browser
EI04015,Stage Coaching for Engineers and Scientists,3.0,-,from Summer semester 2019,"Hayden, Oliver",Department of Electrical Engineering,-,Bachelor/Master,Stage Coaching,for engineers and scientists,one semester,summer semester,German/English,-,90.0,30.0,60.0,"Die exam consists of an individual presentation to demonstrate practical learning achievements and an oral exam test knowledge-based learning results. 
The final grade is calculated from the elements:
50% grade of presentation  / 50% grade of oral exam",Yes,No,none,"After completion of the module the students are able to
•	be aware of the own stage profile and to display it, 
•	to understand stage fright and to eliminate it, 
•	to make use of the own stage profile for convincing science presentations.","The contents will cover the following questions and topics: 
•	What is a „stage profile“, how can I produce it? 
•	What is charism, how can I develop it? 
•	What does personality mean?  
•	Stage fright – Where does it come from and how can I eliminate it?
•	How do I conduct my auditory (even without using words)?
•	What does female leadership mean?
•	Introduction into “Servant Leadership“
•	Social Skills
The excercises cover elements from role playing, ad-libbing, aware listening to music, free Die Übungen enthalten unter anderem Elemente von Rollenspielen, freies Rezitieren, bewusstes Hören von Musik, training the coordination of complex movements, pantomime and wordless leadership.The contents will cover the following questions and topics: 
•	What is a „stage profile“, how can I produce it? 
•	What is charism, how can I develop it? 
•	What does personality mean?  
•	Stage fright – Where does it come from and how can I eliminate it?
•	How do I conduct my auditory (even without using words)?
•	What does female leadership mean?
•	Introduction into “Servant Leadership“
•	Social Skills
The excercises cover elements from role playing, ad-libbing, aware listening to music, free Die Übungen enthalten unter anderem Elemente von Rollenspielen, freies Rezitieren, bewusstes Hören von Musik, training the coordination of complex movements, pantomime and wordless leadership.","Knowledge-based contents will be communicated in brief, interactive lectures by the lecturer. The practical elements of the excercises aim at the training of the individual stage profile.","Presentation, elements from music and choreography","1) Fritjof Capra „The Tao of Physics“
2) Richard Feynman ""Surely You`re joking, Mr. Feynman!
3) Rupert Sheldrake ""Morphogenetic Fields""",556,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1624810/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86083,Start-up Skills - Legal Fundamentals,6.0,-,Always,"Paal, Boris",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module exam is a written examination.
The written examination will cover topics regarding the legal fundamentals that are necessary for the foundation of a start-up. The examination will last 60 minutes and will consist of various questions (essay and/or multiple choice)
With the written examination, the students demonstrate that they have understood the most important principles regarding the selection and implementation of an adequate legal form for a start-up, the protection of intellectual property and the creation of a financing concept.",Yes,No,,"After completing the seminar, students will be able to choose the appropriate legal form for the establishment of a start-up, as well as to identify the appropriate financing method for the foundation. In addition, students are able to understand the essential legal regulations of intellectual property law, product labelling, data protection law and competition law.","The following topics are covered in the module:
Founding a start-up: legal form and tax law, financing and contracts, specifics, etc.;
Protection of Intellectual Property: Intellectual Property, Patents, Copyright, Trade Secrets, Trademarks;
Data protection law;
Competition lawThe following topics are covered in the module:
Founding a start-up: legal form and tax law, financing and contracts, specifics, etc.;
Protection of Intellectual Property: Intellectual Property, Patents, Copyright, Trade Secrets, Trademarks;
Data protection law;
Competition law","The module will be conducted as a seminar in the form of business games / case studies. The students will first complete several introductory units that explain the course of the business game. Subsequently, the students will create concepts for the foundation of a start-up in groups and carry out legal analyses. Finally, qualified feedback is given to show the students possible improvements.","Exercise documents, PowerPoint, Reader","1. ""Wirtschaftsrecht: Handels- und Gesellschaftsrecht"", 2. Auflage; Kristian Ewers, Sebastian Jagusch, Daniel Lorberg; NWB Verlag; ISBN: 978-3-470-65542-0 
2. ""Steuerrecht – leicht gemacht: Eine Einführung nicht nur für Studierende an Universitäten, Hochschulen und Berufsakademien""; 6. Auflage; Stephan Kudert; Ewald-von-Kleist-Verlag; ISBN: 978-3-874-40330-6
3. ""Gewerblicher Rechtsschutz und Urheberrecht""; 13. Auflage; Joachim Gruber; Niederle, J; ISBN: 978-3-867-24131-1",557,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025123/206?$ctx=lang=en&$scrollTo=toc_details,Browser
AR30382,Fast Track Design Methods,3.0,-,Always,"Chantzaras, Christos",Chair of Architectural Informatics (Prof. Petzold),-,Bachelor/Master,-,-,one semester,winter/summer semester,English,-,90.0,30.0,60.0,-,No,No,-,-,--,-,-,-,558,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1430306/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86611,Sustainability Politics and Policy,6.0,-,from Summer semester 2023,"Wurster, Stefan",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The exam (100%) will consist of a portfolio of tasks that will relate to the different parts of the course which is co-taught by faculty teaching in the concentration area. The aim of this portfolio is to document the student’s major activities and accomplishments throughout the course.

The portfolio will include a presentation (about 30 min, 50%) in the context of which they will interact with their peers. This will help them reflect on their academic goals and their progress as learners as regards the defined course objectives (see below).

Building on their presentations as well as on their reflections on the discussions in the lectures, they will later compile a report (about 10 pages, 50%) that will document what they have proceeded to learn. In the report, students will demonstrate that they have acquired the defined competencies (see below) and will reflect on their learning process.",Yes,No,,"Upon completion of this module, students will be able to understand the roles and contributions different scientific and technological solutions as well as different social and behavioural approaches can play in designing, implementing and monitoring sustainable solutions. They will also be able to understand how different sustainability areas (e.g. economic, financial, educational, research, health, family, pension, mobility, environmental and energy policy) are being governed on the local, national and international levels. They will be able to highlight the interdisciplinary dimensions of sustainability, to analyse complex sustainability problems, and to develop concrete solutions.","This module introduces students to theoretical debates about sustainable development and links the concept of sustainable development to different economic, social, environmental, and health policy areas. The lecture in this module examines the goals of ""sustainable development"" and the concepts of inter- and intra-generational justice. The module includes a historical overview of the sustainability concept looking into competing definitions and understandings. It investigates key theoretical and methodological approaches to examine such issues as rising government debt, growing global competition for innovation, and intensifying global environmental degradation and resource scarcity. The lecture considers how policies differ in their ""sustainability profiles"" and the economic, social and political factors which are responsible for this variance.This module introduces students to theoretical debates about sustainable development and links the concept of sustainable development to different economic, social, environmental, and health policy areas. The lecture in this module examines the goals of ""sustainable development"" and the concepts of inter- and intra-generational justice. The module includes a historical overview of the sustainability concept looking into competing definitions and understandings. It investigates key theoretical and methodological approaches to examine such issues as rising government debt, growing global competition for innovation, and intensifying global environmental degradation and resource scarcity. The lecture considers how policies differ in their ""sustainability profiles"" and the economic, social and political factors which are responsible for this variance.","The course will be given as one lecture and will employ fitting methods to deepen the content such as exercises, group work or a laboratory.","Media like presentations, exercises, scripts and other media","Bornemann, Basil/ Knappe, Henrike/ Nanz, Patrizia (Ed.) 2022: The Routledge Handbook of Democracy and Sustainability. London: Routledge, 431-446. (https://www.lehmanns.de/shop/technik/52507134-9780367109585-the-routledge-handbook-of-democracy-and-sustainability)

Wurster, Stefan 2013: Comparing ecological sustainability in autocracies and democracies, in: Contemporary Politics, 2013, Vol. 19, No.1, 76-93. (http://www.tandfonline.com/doi/abs/ 10.1080/13569775.2013.773204)
A reader of  texts with up-to-date and cutting edge scienitific literature will be made available at the start of the semester.",559,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3381946/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86085,Sustainable Transitions,6.0,-,from Summer semester 2024,"Egli, Florian",Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"The module will be assessed in two inter-linked parts, reflecting the lecture + seminar setup. There will be a 60 min end of term written exam consisting of multiple choice questions, open questions and small tasks involving graphs (50%). In the exam students will be need to demonstrate that they grasp the key concepts presented in class and the empirical evidence discussed along state-of-the-art research papers. More specifically, students will need to showcase an understanding of socio-technical systems, the drivers and barriers to transition, the role of technology characteristics and innovation, the importance of finance and effects on developing countries. Alongside the course, students will work in groups (individual grading) on two assignments (50%). These assignments will involve working with data on real-world sustainabilty transition challenges in the OECD as well as non-OECD (i.e., developing) countries.",Yes,No,none,"After successful completion of the module students will be able to:
* understand the importance of the rate and direction of innovation and technological change to address urgent challenges, such as climate change (SDG13) 
* explain why large socio-technical systems typically only undergo slow transitions and how effective policies can accelerate the process
* recognize the opportunities and threats of sustainabilty transitions for developing countries
* realize the criticality of finance and investment for large transitions
* link their own actions and sphere of influence to sustainability challenges with a refined understanding of different impact channels","This module focuses on climate change as one of the key dimensions of sustainability. Climate change is largely driven by the way we generate and use energy (incl. for mobility). A secondary driver of climate change is agriculture and land use change, which will also be discussed in class. Both the 2015 United Nations Paris Agreement on climate change and the UN Sustainable Development Goals call for a fast and extensive transition of our economies and societies. As the Intergovernment Panel on Climate Change (IPCC) puts it: ""rapid and far-reaching transitions in energy, land, urban and infrastructure (including transport and buildings), and industrial systems [...]. These systems transitions are unprecedented in terms of scale, but not necessarily in terms of speed [...]"". This module introduces students to the challenges involved in this transition and the opportunities (e.g., in innovation, finance, and development) with a particular emphasis on the rate and direction of technical change. It compares the current situation with historical socio-technical transitions and derives the consequences for policymaking using concepts from the innovation and transitions literatures. It then focuses on the role of public policy in governing these transitions, considering the role of finance, institutions and policy feedback - again with a particular focus on emerging and developing countries. The module is designed for an interdisciplinary audience and we expect students to be open to learn from each other and be curious to understand different backgrounds, including the need to explain foundational concepts that may be new to some students but known to others.This module focuses on climate change as one of the key dimensions of sustainability. Climate change is largely driven by the way we generate and use energy (incl. for mobility). A secondary driver of climate change is agriculture and land use change, which will also be discussed in class. Both the 2015 United Nations Paris Agreement on climate change and the UN Sustainable Development Goals call for a fast and extensive transition of our economies and societies. As the Intergovernment Panel on Climate Change (IPCC) puts it: ""rapid and far-reaching transitions in energy, land, urban and infrastructure (including transport and buildings), and industrial systems [...]. These systems transitions are unprecedented in terms of scale, but not necessarily in terms of speed [...]"". This module introduces students to the challenges involved in this transition and the opportunities (e.g., in innovation, finance, and development) with a particular emphasis on the rate and direction of technical change. It compares the current situation with historical socio-technical transitions and derives the consequences for policymaking using concepts from the innovation and transitions literatures. It then focuses on the role of public policy in governing these transitions, considering the role of finance, institutions and policy feedback - again with a particular focus on emerging and developing countries. The module is designed for an interdisciplinary audience and we expect students to be open to learn from each other and be curious to understand different backgrounds, including the need to explain foundational concepts that may be new to some students but known to others.","The module will include a mix of teaching methods containing a lecture and a seminar. In the lecture students will be introduced to the frameworks, concepts and recent empirical evidence on the drivers of and barriers to sustainabiltiy transitions. They will learn about the policy, politics and historical background of sustainabilty transitions. In the accompanying seminar students will then be able to utilize their knowledge to critically discuss and evaluate related literature and current events. The seminar will be accompanied by real-world assignments involving data analysis and writing.","PowerPoint, Audio (e.g., podcast), Whiteboard, Case studies, Data","Howlett, M., Cashore, B. (2014). Conceptualizing Public Policy. In: Engeli, I., Allison, C.R. (eds) Comparative Policy Studies. Research Methods Series. Palgrave Macmillan, London.
Raworth, K. (2018). Doughnut Economics: Seven Ways to Think Like a 21st-Century Economist. Random House Business.
Obama, B. (2017). The Irreversible Momentum of Clean Energy. Science 355(6321), 126-129.
These are background reads, the syllabus will cover state-of-the art research papers.",560,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025131/206?$ctx=lang=en&$scrollTo=toc_details,Browser
POL60402,Technology and Development,6.0,-,from Summer semester 2020,Pfeffer,Department of Governance,-,Master,-,-,one semester,winter semester,English,-,180.0,60.0,120.0,"Students will submit 3 homework assignments/exercises throughout the semester. Assignments will include a short policy briefing (4-6 A4 pages, excl. reference list and title page), thoughtful contributions to at least three discussion topics in an online forum,  and a group presentation (slides, video or poster). These homework assignments enable the students to demonstrate their mastery of the learning outcomes: the presentation addresses learning outcomes 1 and 2, the policy briefing learning outcomes 3 and 4, and the discussion comments learning outcome 5. The final grade reflects the sum of the homework grades.",Yes,No,none required (though Intro to IR would be helpful for students),"Upon completing this course, students will be able to: 
1) identify and use theories of technology in explaining development activities; 
2) evaluate the usefulness of these theories in real world development activities; 
3) empirically identify trends in the use of technology in development; 
4) contextualize (technological) development within broader global trends, including power shifts and responses to COVID-19; and 
5) critically evaluate empirical evidence related to technological development programs.","Technology is often promoted as a new ""miracle solution"" to longstanding developmental problems, among them, hunger, poverty, and gender discrimination. Yet a closer look shows this ""miracle"" is far from becoming a reality in many developing and emerging states. This seminar follows two goals: 1) to look behind the curtain to discover the challenges inherent in using technology for developmental purposes; and 2) to brainstorm about the opportunities - some as of yet unrealized - that technology creates and make concrete plans for realizing them.Technology is often promoted as a new ""miracle solution"" to longstanding developmental problems, among them, hunger, poverty, and gender discrimination. Yet a closer look shows this ""miracle"" is far from becoming a reality in many developing and emerging states. This seminar follows two goals: 1) to look behind the curtain to discover the challenges inherent in using technology for developmental purposes; and 2) to brainstorm about the opportunities - some as of yet unrealized - that technology creates and make concrete plans for realizing them.","The seminar uses (online) discussions, guided projects, lectures and exercises to accomplish the above-listed goals. This combination of methods engages different types of student learners (e.g., visual vs. auditory) to gain basic knowledge, to articulate their own explanations of the challenges and opportunites of technological development, and to brainstorm about solutions to developmental problems facing today's policymakers.","PowerPoints, videos, newspapers/magazines, (online) whiteboard and/or discussion board, exercise sheets","Literature lists will be provided at the start of the semester. Readings include, but are not limited to: 
1) Bernards, Nick. 2019. ""‘Fintech’ and Financial Inclusion."" In The Palgrave Handbook of Contemporary IPE, edited by Timothy M. Shaw, Laura C. Mahrenbach, Renu Modi and Yi-chong Xu. London: Palgrave Macmillan.
2) Arora, Payal. 2016. ""The Bottom of the Data Pyramid: Big Data and the Global South.""  International Journal of Communication 10:1681-1699.
3) Hilbert, Martin. 2016. ""Big Data for Development: A Review of Promises and Challenges.""  Development Policy Review 34 (1):135-174.
4) Kettl, Donald F. 2016. ""Making Data Speak: Lessons for Using Numbers for Solving Public Policy Puzzles.""  Governance 29 (4):573-579.",561,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/2641078/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT86087,Technology and the Public Interest,6.0,-,from Winter semester 2024/25,"Gasser, Urs",Department of Governance,-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The module will be assessed with a 90 minute mixed question exam. In the examination students will be able to demonstrate their understanding of public interest, opportunities and challenges presented by the advancement of technology. The closed questions assess the students ability to assess core ethical, legal, policy and social implications and they can show their ability to identify theories and frameworks that govern the development and use of technology in the public interest. In open questions they can apply them. The open questions also test their skills in designing, implementing and advocating for responsible innovation practices.",Yes,No,-,"After successful completion of the module, students will: 
Develop a nuanced understanding of public interest as well as the opportunities and challenges presented by technology for advancing it.
Be able to identify and apply theories and frameworks that govern the development and use of technology in the public interest, including ESG, sustainable development, and responsible innovation.
Demonstrate the ability to assess core ethical, legal, policy, and social  implications of technology.
Be equipped with skills to design, implement, and advocate for responsible innovation practices across various use cases. This includes an understanding of “data for good”, ethical AI, responsible quantum technology and innovation. 
Demonstrate skills for interdisciplinary collaboration and practical problem solving at the intersection of technology and society.","This module introduces public interest technologies (PIT) as the study and application of technology expertise to advance the public interest. The course addresses different dimensions of technology's interaction with large societal challenges and opportunities, including “data for good”, ethical AI, and responsible quantum technology and innovation. Through lectures, case studies, and interactive discussions, students will gain a deeper understanding of how technology can be created to serve the public interest, ensuring responsible use and innovative application for tackling public problems.This module introduces public interest technologies (PIT) as the study and application of technology expertise to advance the public interest. The course addresses different dimensions of technology's interaction with large societal challenges and opportunities, including “data for good”, ethical AI, and responsible quantum technology and innovation. Through lectures, case studies, and interactive discussions, students will gain a deeper understanding of how technology can be created to serve the public interest, ensuring responsible use and innovative application for tackling public problems.","This module consists of a lecture and an exercise.
The module will include a mix of teaching methods, including weekly lectures and tutorials, which include discussions and case studies to allow students to apply theoretical knowledge. For specific questions and aspects, guest speakers will be invited to offer students first-hand insight into practical issues as well as international developments. The course will rely on both primary and secondary sources.",PowerPoint,"Noveck, B. S. (2021). Solving public problems: a practical guide to fix our government and change our world. Yale University Press.",562,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/4025135/206?$ctx=lang=en&$scrollTo=toc_details,Browser
WI000813,Technology Entrepreneurship Lab,6.0,UTUM,Always,"Patzelt, Holger",Chair of Entrepreneurship (Prof. Patzelt),-,Master,-,-,one semester,winter/summer semester,English,-,180.0,60.0,120.0,"The  grading is based on a project work.
With the project work students show their understanding of the processes associated with the recognition and development of entrepreneurial opportunities. Students show that they are able to analyze the development of entrepreneurial teams. Moreover, they show their ability to apply coaching tools.
Throughout the project work each student has to hand in regular written documentation of maximum one page in which to describe the continuous development of the entrepreneurial idea as well as the team (60%). At the end of the project work each student has to hand in a summary documentation of maximum three pages (40%) covering idea development, team development and used tools.",Yes,No,"First entrepreneurial experience (in any field)
First team development experience (in any filed)
Ideally already taken part in Tech Challenge (WI 001180) or Business Plan Basic Seminar (WI000159)","After module participation students are able to understand the processes associated with the recognition and development of entrepreneurial opportunities. In addition, they are able to analyze the development of
entrepreneurial teams and to apply coaching tools for this purpose. Further, they are able to develop an opportunity assessment plan as well as guide others in this process.","In cooperation with UnternehmerTUM GmbH.
The module Technology Entrepreneurship Lab offers a ""hands-on-experience"" for the development of entrepreneurial business ideas and opportunities with
teams. Students work full-time for three consecutive days on the development of their entrepreneurial, technological and coaching skills. The students document both, the opportunity development process and the parallel team development
process and present both processes. Subsequently, they will work on their teams’ development of an opportunity assessment plan for the respective business ideas.In cooperation with UnternehmerTUM GmbH.
The module Technology Entrepreneurship Lab offers a ""hands-on-experience"" for the development of entrepreneurial business ideas and opportunities with
teams. Students work full-time for three consecutive days on the development of their entrepreneurial, technological and coaching skills. The students document both, the opportunity development process and the parallel team development
process and present both processes. Subsequently, they will work on their teams’ development of an opportunity assessment plan for the respective business ideas.","The module consists of a three-day introductory lecture on entrepreneurial, technological and coaching skills as well as a hands-on 3 month execution phase with teams. A coach accompanies this process. The business ideas and team development processes are supervised and presented.","PowerPoint, Flipchart, online communication tool, virtual meetings, online webinars","Hisrich, R. D./Peters, M. P./Shepherd, D. A.: Entrepreneurship, 8th edition, McGraw-Hill, 2010",563,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/584574/206?$ctx=lang=en&$scrollTo=toc_details,Browser
MW2245,Think. Make. Start.,6.0,-,from Winter semester 2014/15,"Zimmermann, Markus",Chair of Product Development and Lightweight Design (Prof. Zimmermann),-,Master,TMS,Build innovative products of your ideas in 10 days!,one semester,winter/summer semester,English,-,180.0,120.0,60.0,"The module examination consists of a project work incl. written documentation (approx. 10 pages) and presentation (10 min), in which the students develop a new product in a group project and present their idea for founding a company on this basis. The individual performance is assessed to what extent the students are able to develop a product with market potential by means of an iterative approach to prototypical implementation. The assessment also includes the ability to work in a team, the ability to make well-founded design decisions and the completeness and conclusiveness of the concept, taking into account social relevance, novelty and innovation. As part of the project work, in addition to documentation, there is a final oral presentation. Through the presentation, students are expected to show whether they can demonstrate their ability to act as a competent team.",No,No,"The basic requirement is a willingness to engage with new learning methods, approaches, disciplines and ways of working. Cross-role experience in project management, product development (Design Thinking, TRIZ, Systems Engineering, etc), interdisciplinary teamwork, communication skills, creativity and problem solving skills are an advantage. A lot of emphasis is placed on practical experience.

For the ""Problem Expert"" role, experience in the following areas is an advantage:
- User Testing, Requirements Engineering, Interviewing, Human-Centered Design, Design, Visualisation, Use Case Definition, UX/UI Design, marketing, market research, benchmarking, design thinking.

For the ""Tech Developer"" role, experience in the following areas is an advantage:
- Hardware (mechanical): design, manufacturing (workshop/makerspace), prototyping, CAD/CAM.
- Hardware (electronic): embedded systems engineering, microcontrollers, sensors/actuators, Arduino, Raspberry, circuitry, board design, metrology, BUS protocols, prototyping, closed-loop/open-loop control, robotics
- Software focus: Backend development, databases, frontend development, machine learning, web development, app development, embedded systems

For the ""Business Developer"" role, experience in the following areas is an advantage:
- Business Plan/Strategy/Design, Marketing, Sales, Interviewing, Finance & Accounting, Business Law & Regulations, Entrepreneurship.

The number of participants is limited and there will be an application process.","After participating in the module “Think.Make.Start.” the students are able to
- reproduce the principles of user-centered design
- apply methods of product development (e.g., Design Thinking) to a challenge of their choice
- develop important hypotheses involving relevant stakeholders (customer, user, ...) through proper planning with ""purposeful prototyping""
- examine the relevance of a problem and develop a solution collaboratively in an interdisciplinary team 
- design a prototype based on the acquired design methods and analyzed insights
- lay the foundation for one's own business start-up by identifying a start-up idea or team.","During the interdisciplinary team project, students work methodically, purposefully and agilely on a development project to develop innovative new products with the intention of successfully launching them on the market. Current needs and problems from social, technological and economic systems are identified, analysed and validated in the interdisciplinary team. In doing so, they cooperatively solve challenges that arise from constraints from the different disciplines. They generate suitable market hypotheses and product ideas at an early stage and interact with initial potential customers/users. They iteratively create prototypes and evaluate their hypotheses with them in experiments.
 
For more information, visit www.thinkmakestart.com and www.tms.tum.de.During the interdisciplinary team project, students work methodically, purposefully and agilely on a development project to develop innovative new products with the intention of successfully launching them on the market. Current needs and problems from social, technological and economic systems are identified, analysed and validated in the interdisciplinary team. In doing so, they cooperatively solve challenges that arise from constraints from the different disciplines. They generate suitable market hypotheses and product ideas at an early stage and interact with initial potential customers/users. They iteratively create prototypes and evaluate their hypotheses with them in experiments.
 
For more information, visit www.thinkmakestart.com and www.tms.tum.de.","""THINK. MAKE. START."" is a two-week, practice-oriented, interdisciplinary and competitive teaching format in which students from all faculties can participate (credits are given individually related to the study program). It is organised by the different chairs of TUM, TUM ForTe, and UnternehmerTUM. They get access to the high-tech workshop Makerspace and budget to transform their own ideas into real prototypes (mechatronic products). Learning outcomes are achieved through the following teaching and learning methods:
- Milestones to be achieved, team roles to be held and predetermined course structure provide the roadmap for the project.
- Coaching and teaching expertise in prototyping, business validation, agile development, design thinking, systems engineering, lean startup and user-centred design.
- Teaching the basics of interdisciplinary collaboration through a role concept (Business Developer, Tech Developer, Problem Expert).
- All participants work in interdisciplinary teams (10 teams of 5 students each) and are encouraged to become active themselves and learn through practical experience (hands-on learning).
- Each team pursues a real business idea chosen for the seminar. Special attention is given to really understanding the customer and verifying the solution approach, through questioning, observation, prototyping or expert discussion.
- Using prototyping to bridge the gap between thinking and doing.
- Reflecting on one's own results and approach supports project decisions.
- The teams present their projects to a jury on DemoDay and present the prototypically implemented product ideas to guests from industry, the start-up scene and research.","Project manual, presentations, hand-outs, posters, videos, examples.","Esch Franz-Rudolf (2012) Strategie und Technik der Markenführung, 7. Auflage, Vahlen
 
Faltin, Günter (2008): Kopf schlägt Kapital, Hanser
 
Halgrimsson (2012): Prototyping and Model Making for Product Design (2012)
 
Kalweit Andreas, Paul Christof, Peters Sascha, Wallbaum Reiner (2012) Handbuch für Technisches 
Produktdesign, Material und Fertigung, Entscheidungsgrundlage für Designer und Ingenieure, 2. Auflage, Springer
 
Kelly, Tom (2016): The Art of Innovation
 
Lindemann, U (2007): Methodische Entwicklung technischer Produkte - Methoden flexibel und situationsgerecht anwenden. 2. Auflage
 
Münchener Business Plan Wettbewerb: Handbuch Businessplan-Erstellung, München
http://www.evobis.de/coaching/handbuch/
 
Malek, Miroslaw / Ibach, Peter K. (2004): Entrepreneurship, Dpunkt Verlag
 
Moore, Geoffrey A. (2002): Crossing the Chasm, Harpercollins
 
Osterwalder, Alexander / Pigneur, Yves (2010): Business Model Generation: A Handbook for 
 
Ries, Eric (2011): The Lean Startup
 
Savoia, Antonio (2019): The right It
 
Timmons, Jeffry A. / Spinelli, Stephen (2009): New Venture Creation, 7thedition, McGraw, Hill Professional
 
UnternehmerTUM (2011): Handbuch Schlüsselkompetenzen, 7. Auflage",564,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/1077017/206?$ctx=lang=en&$scrollTo=toc_details,Browser
IN9026,Trendseminar CDTM,8.0,-,until Winter semester 2024/25,"Krcmar, Helmut",Department of Computer Science,-,Bachelor,-,-,one semester,winter/summer semester,English,-,240.0,60.0,180.0,-,Yes,No,Only for students of the CDTM program Technology Management,"Work in interdisciplinary teams, creating a seminar papers in English, presentation of work results in English, basics of scientific work, basics of trend research.","Technological, social, and economical impact of current trendsTechnological, social, and economical impact of current trends",Seminar,-,Will be announced in the seminar,565,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/473924/206?$ctx=lang=en&$scrollTo=toc_details,Browser
SOT53200,Responsibility in the Engineering Profession,3.0,-,from Summer semester 2022,Wernecke,"Department of Science, Technology and Society",-,Master,-,Applied Ethics for Engineers,one semester,summer semester,German/English,-,90.0,30.0,60.0,"The examination consists of of a presentation (15 - 20 minutes) and an essay (1000 - 1200 words) in which the students demonstrate their analytical-argumentative abilities: 
- to identify different conflicting goals of their profession, which are elaborated in the course, with regard to functional, social-normative and ethical implications and classify them critically argumentatively;
- to classify and apply different models of responsibility ethics taught in the seminar with regard to divers applications (case studies);
- to present an analysis and application of different models of responsibility ethics taught in the course by means of examples from the field of activity;
- to present and discuss their results in a concise analytical-argumentative form.
The work must be accompanied by a graded presentation (15 - 20 minutes). The weighting of the marks is 70% for the essay and 30% for the presentation.",Yes,No,No knowledge.,"On successful completion of this module students will be: 
- familiar with basic social normative and ethical challenges in the field of engineers' activities;
- understand the most important topics and issues in the field of ethics of responsibility;
- are able to analyse, classify and assess activity-related conflicts of objectives;
- are able to analyse und to discuss critically models of responsible problem-solving competence with regard to the implementation of technical solution strategies.","The module introduces students to the following topics:
General issues of normative and applied ethics;
Responsibility in the professional field of civil and environmental engineering;
Recognising, classifying and evaluating professional, social-normative and ethical conflicts of objectives;
models and methods of responsible problem-solving competence;
Implementation of technical solutions (models): stakeholders, social acceptance, sustainability goals (in terms of normative guard rails, responsible communication and implementation).The module introduces students to the following topics:
General issues of normative and applied ethics;
Responsibility in the professional field of civil and environmental engineering;
Recognising, classifying and evaluating professional, social-normative and ethical conflicts of objectives;
models and methods of responsible problem-solving competence;
Implementation of technical solutions (models): stakeholders, social acceptance, sustainability goals (in terms of normative guard rails, responsible communication and implementation).","The module introduces students to the following topics:
General issues of normative and applied ethics;
Responsibility in the professional field of civil and environmental engineering;
Recognising, classifying and evaluating professional, social-normative and ethical conflicts of objectives;
models and methods of responsible problem-solving competence;
Implementation of technical solutions (models): stakeholders, social acceptance, sustainability goals (in terms of normative guard rails, responsible communication and implementation).","Literature, reader, presentation and discussion",-,566,https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/slc.cm.reg/student/modules/detail/3152996/206?$ctx=lang=en&$scrollTo=toc_details,Browser
