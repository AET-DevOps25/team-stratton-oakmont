name: Continuous Deployment

on:
  push: # Triggered by merge to main branch
    branches: [main]

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: image_tag
        run: |
          # Use the SAME logic as CD workflow for non-main branches
          # Since this is branch 118-fix-issue..., treat it like a PR branch
          BRANCH_NAME="${{ github.ref_name }}"
          if [[ "$BRANCH_NAME" =~ ^[0-9]+-.*$ ]]; then
            # Extract number from branch name (118 from 118-fix-issue...)
            PR_NUMBER=$(echo "$BRANCH_NAME" | grep -o '^[0-9]*')
            echo "tag=pr-$PR_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "tag=main-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          fi

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      - name: Configure kubectl
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Deploy application with Helm
        run: |
          helm upgrade --install tum-study-planner ./helm/tum-study-planner \
            --namespace tum-study-planner \
            --set client.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/client \
            --set client.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set studyPlanService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/study-plan-service \
            --set studyPlanService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set userAuthService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/user-auth-service \
            --set userAuthService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set programCatalogService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/program-catalog-service \
            --set programCatalogService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set aiAdvisorService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/ai-advisor-service \
            --set aiAdvisorService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --wait --timeout=10m

      - name: Verify deployment
        run: |
          kubectl get pods -n tum-study-planner
          echo "âœ… Deployment completed successfully!"
