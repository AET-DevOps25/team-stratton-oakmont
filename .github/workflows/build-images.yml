name: Build Docker Images

on:
  workflow_call:
    inputs:
      push-images:
        required: true
        type: boolean

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: client
            context: ./client
            dockerfile: ./client/Dockerfile
          - name: study-plan-service
            context: ./server
            dockerfile: ./server/study-plan-service/Dockerfile
          - name: user-auth-service
            context: ./server
            dockerfile: ./server/user-auth-service/Dockerfile
          - name: program-catalog-service
            context: ./server
            dockerfile: ./server/program-catalog-service/Dockerfile
          - name: ai-advisor-service
            context: ./server
            dockerfile: ./server/ai-advisor-service/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: ${{ inputs.push-images }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: ${{ inputs.push-images }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
