name: CI/CD Testing

on:
  push:
    branches:
      - 118-fix-issue-that-study-plan-service-cant-connect-to-study-data-db-in-kubernetes

env:
  REGISTRY: ghcr.io

jobs:
  # CI Jobs
  build-and-test:
    uses: ./.github/workflows/build-images.yml
    with:
      push-images: true
    secrets: inherit

  test:
    uses: ./.github/workflows/test-services.yml
    needs: build-and-test
    secrets: inherit

  # CD Job - runs after CI completes successfully
  deploy:
    needs: [build-and-test, test]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.build-and-test.result == 'success' && needs.test.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: image_tag
        run: |
          # Simple approach: use branch name with SHA (like your CD workflow for non-main branches)
          echo "tag=${{ github.ref_name }}-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      - name: Configure kubectl
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Deploy application with Helm
        run: |
          helm upgrade --install tum-study-planner ./helm/tum-study-planner \
            --namespace tum-study-planner \
            --set client.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/client \
            --set client.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set studyPlanService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/study-plan-service \
            --set studyPlanService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set userAuthService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/user-auth-service \
            --set userAuthService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set programCatalogService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/program-catalog-service \
            --set programCatalogService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --set aiAdvisorService.image.repository=${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/ai-advisor-service \
            --set aiAdvisorService.image.tag=${{ steps.image_tag.outputs.tag }} \
            --wait --timeout=10m

      - name: Verify deployment
        run: |
          kubectl get pods -n tum-study-planner
          echo "âœ… Deployment completed successfully!"
