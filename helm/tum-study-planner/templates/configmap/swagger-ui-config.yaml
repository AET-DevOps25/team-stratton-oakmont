# prettier-ignore
apiVersion: v1
kind: ConfigMap
metadata:
  name: swagger-ui-config
  namespace: {{ .Values.namespace }}
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>TUM Study Planner - Unified API Documentation</title>
        <link
          rel="stylesheet"
          type="text/css"
          href="https://unpkg.com/swagger-ui-dist@5.10.5/swagger-ui.css"
        />
        <style>
          html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
          }
          *,
          *:before,
          *:after {
            box-sizing: inherit;
          }
          body {
            margin: 0;
            background: #fafafa;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
          }
          .service-selector {
            background: #1b1b1b;
            padding: 15px 20px;
            border-bottom: 1px solid #333;
            display: flex;
            align-items: center;
            justify-content: space-between;
          }
          .service-selector h1 {
            color: #fff;
            margin: 0;
            font-size: 1.5em;
          }
          .service-toggle {
            display: flex;
            align-items: center;
            gap: 15px;
          }
          .service-toggle label {
            color: #fff;
            font-weight: 500;
          }
          .service-toggle select {
            padding: 8px 12px;
            border: 1px solid #333;
            background: #2a2a2a;
            color: #fff;
            border-radius: 4px;
            font-size: 14px;
            min-width: 200px;
          }
          .service-toggle select:focus {
            outline: none;
            border-color: #4a90e2;
          }
          #swagger-ui {
            max-width: 1200px;
            margin: 0 auto;
          }
          .service-info {
            background: #e8f4f8;
            padding: 15px 20px;
            border-left: 4px solid #4a90e2;
            margin: 20px;
            border-radius: 4px;
          }
          .service-info h3 {
            margin: 0 0 10px 0;
            color: #1b1b1b;
          }
          .service-info p {
            margin: 0;
            color: #666;
          }
          .loading {
            text-align: center;
            padding: 40px;
            font-size: 18px;
            color: #666;
          }
          .error {
            background: #ffebee;
            color: #c62828;
            padding: 20px;
            margin: 20px;
            border-left: 4px solid #c62828;
            border-radius: 4px;
          }
        </style>
      </head>
      <body>
        <div class="service-selector">
          <h1>üéì TUM Study Planner API Documentation</h1>
          <div class="service-toggle">
            <label for="service-select">Select Service:</label>
            <select id="service-select">
              <option value="study-plan">üìÖ Study Plan Service</option>
              <option value="user-auth">üë§ User Authentication Service</option>
              <option value="program-catalog">üìñ Program Catalog Service</option>
              <option value="ai-advisor">ü§ñ AI Advisor Service</option>
            </select>
          </div>
        </div>

        <div id="service-info" class="service-info">
          <h3>Study Plan Service</h3>
          <p>
            Manage study plans, track progress, and organize academic schedules for
            students.
          </p>
        </div>

        <div id="loading" class="loading">
          Loading Swagger UI...
        </div>

        <div id="swagger-ui"></div>

        <script src="https://unpkg.com/swagger-ui-dist@5.10.5/swagger-ui-bundle.js" 
                onerror="handleScriptError()"></script>
        <script src="https://unpkg.com/swagger-ui-dist@5.10.5/swagger-ui-standalone-preset.js"
                onerror="handleScriptError()"></script>
        <script>
          function handleScriptError() {
            document.getElementById("loading").style.display = "none";
            document.getElementById("swagger-ui").innerHTML = `
              <div class="error">
                <h3>‚ö†Ô∏è Failed to Load Swagger UI Dependencies</h3>
                <p><strong>External CDN resources could not be loaded.</strong></p>
                <p>This might be due to:</p>
                <ul>
                  <li>Network firewall blocking unpkg.com</li>
                  <li>Internet connectivity issues</li>
                  <li>Version compatibility problems</li>
                </ul>
                <p><strong>Alternative:</strong> Contact your administrator to whitelist unpkg.com or use local Swagger UI resources.</p>
              </div>
            `;
          }

          function initializeSwagger() {
            if (typeof SwaggerUIBundle === "undefined" || typeof SwaggerUIStandalonePreset === "undefined") {
              handleScriptError();
              return;
            }

            document.getElementById("loading").style.display = "none";

          const services = {
            "study-plan": {
              name: "üìÖ Study Plan Service",
              description: "Manage study plans, track progress, and organize academic schedules for students.",
              url: getApiDocsUrl("study-plan")
            },
            "user-auth": {
              name: "üë§ User Authentication Service", 
              description: "Handle user registration, login, authentication, and authorization.",
              url: getApiDocsUrl("user-auth")
            },
            "program-catalog": {
              name: "üìñ Program Catalog Service",
              description: "Browse and search academic programs, courses, and curriculum information.",
              url: getApiDocsUrl("program-catalog")
            },
            "ai-advisor": {
              name: "ü§ñ AI Advisor Service",
              description: "Get AI-powered academic guidance and personalized study recommendations.",
              url: getApiDocsUrl("ai-advisor")
            }
          };

          function getApiDocsUrl(serviceName) {
            // Use ingress routing - this will work through the api-ingress
            // The api-ingress rewrites /api/study-plan/xyz to /api/v1/xyz on backend
            return `/api/${serviceName}/api/v1/api-docs`;
          }            function getServiceUrl(serviceName, port) {
              const hostname = window.location.hostname;
              
              if (hostname.includes("tum-study-planner.student.k8s.aet.cit.tum.de")) {
                return `/api-docs/${serviceName}/api/v1/api-docs`;
              }
              if (hostname === "localhost" || hostname === "127.0.0.1") {
                return `http://localhost:${port}/api/v1/api-docs`;
              }
              return `/api-docs/${serviceName}/api/v1/api-docs`;
            }

            let ui;

            function initSwaggerUI(serviceKey) {
              const service = services[serviceKey];

              document.getElementById("service-info").innerHTML = `
                <h3>${service.name}</h3>
                <p>${service.description}</p>
              `;

              try {
                ui = SwaggerUIBundle({
                  url: service.url,
                  dom_id: "#swagger-ui",
                  deepLinking: true,
                  presets: [
                    SwaggerUIBundle.presets.apis,
                    SwaggerUIStandalonePreset
                  ],
                  plugins: [SwaggerUIBundle.plugins.DownloadUrl],
                  layout: "StandaloneLayout",
                  requestInterceptor: (req) => {
                    console.log('Loading API docs from:', req.url);
                    return req;
                  },
                  onComplete: () => {
                    console.log(`‚úÖ Successfully loaded ${service.name} documentation`);
                  },
                  onFailure: (err) => {
                    console.error(`‚ùå Failed to load ${service.name} documentation:`, err);
                    document.getElementById("swagger-ui").innerHTML = `
                      <div class="error">
                        <h3>‚ùå Failed to Load API Documentation</h3>
                        <p><strong>Could not connect to ${service.name}</strong></p>
                        <p><code>URL: ${service.url}</code></p>
                        <p><strong>Error:</strong> ${err.message || "Unknown error"}</p>
                        <p><strong>Troubleshooting:</strong></p>
                        <ul>
                          <li>Verify the service is running and healthy</li>
                          <li>Check if the API endpoint is accessible</li>
                          <li>Ensure OpenAPI spec is available at the URL above</li>
                        </ul>
                      </div>
                    `;
                  },
                });
              } catch (error) {
                console.error("Swagger UI initialization error:", error);
                document.getElementById("swagger-ui").innerHTML = `
                  <div class="error">
                    <h3>‚ö†Ô∏è Swagger UI Initialization Error</h3>
                    <p><strong>Error:</strong> ${error.message}</p>
                    <p>Please check the browser console for more details.</p>
                  </div>
                `;
              }
            }

            // Initialize with default service
            initSwaggerUI("study-plan");

            // Handle service selection
            document.getElementById("service-select").addEventListener("change", function (e) {
              initSwaggerUI(e.target.value);
            });
          }

          // Initialize when ready
          if (document.readyState === "loading") {
            document.addEventListener("DOMContentLoaded", () => {
              setTimeout(initializeSwagger, 200);
            });
          } else {
            setTimeout(initializeSwagger, 200);
          }
        </script>
      </body>
    </html>
